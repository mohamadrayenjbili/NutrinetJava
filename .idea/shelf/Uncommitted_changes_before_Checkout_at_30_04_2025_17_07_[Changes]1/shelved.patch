Index: src/main/java/controllers/Programme/AfficherProgrammeFront.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.Programme;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.effect.DropShadow;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.stage.Stage;\r\nimport models.Programme;\r\nimport services.ProgrammeService;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AfficherProgrammeFront implements Initializable {\r\n\r\n    @FXML\r\n    private FlowPane programmeListContainer;\r\n\r\n    private ProgrammeService programmeService = new ProgrammeService();\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle rb) {\r\n        try {\r\n            List<Programme> programmes = programmeService.getAllProgrammes();\r\n\r\n            for (Programme p : programmes) {\r\n                VBox card = new VBox(10);\r\n                card.setPadding(new Insets(15));\r\n                card.setSpacing(10);\r\n                card.setPrefWidth(250); // Ajusté pour 3 par ligne dans 800px\r\n                card.setStyle(\"-fx-background-color: #ffffff; -fx-background-radius: 15; -fx-border-radius: 15; -fx-cursor: hand;\");\r\n                card.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.1)));\r\n\r\n                // Hover effect\r\n                card.setOnMouseEntered(e -> card.setEffect(new DropShadow(15, Color.rgb(0, 0, 0, 0.25))));\r\n                card.setOnMouseExited(e -> card.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.1))));\r\n\r\n                card.setOnMouseClicked((MouseEvent e) -> openDetails(p));\r\n\r\n                // Image\r\n                Image image;\r\n                try {\r\n                    image = new Image(\"file:src/main/resources/images/\" + p.getImage());\r\n                } catch (Exception e) {\r\n                    image = new Image(\"file:src/main/resources/images/default_program.png\");\r\n                }\r\n\r\n                ImageView imageView = new ImageView(image);\r\n                imageView.setFitHeight(160);\r\n                imageView.setFitWidth(220);\r\n                imageView.setPreserveRatio(false);\r\n                imageView.setSmooth(true);\r\n\r\n                // Clipping avec coins arrondis\r\n                Rectangle clip = new Rectangle(220, 160);\r\n                clip.setArcWidth(20);\r\n                clip.setArcHeight(20);\r\n                imageView.setClip(clip);\r\n\r\n                // Titre\r\n                Label titleLabel = new Label(p.getTitre());\r\n                titleLabel.setStyle(\"-fx-font-size: 18px; -fx-font-weight: bold; -fx-text-fill: #2d3436;\");\r\n\r\n                // Description\r\n                Label descriptionLabel = new Label(p.getDescription());\r\n                descriptionLabel.setWrapText(true);\r\n                descriptionLabel.setStyle(\"-fx-font-size: 14px; -fx-text-fill: #636e72;\");\r\n\r\n                card.getChildren().addAll(imageView, titleLabel, descriptionLabel);\r\n                programmeListContainer.getChildren().add(card);\r\n            }\r\n\r\n        } catch (SQLException e) {\r\n            System.err.println(\"Erreur lors du chargement des programmes : \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void openDetails(Programme p) {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/DetailsProgramme.fxml\"));\r\n            Parent root = loader.load();\r\n\r\n            DetailsProgramme controller = loader.getController();\r\n            controller.setProgrammeDetails(p);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setTitle(\"Détails du Programme\");\r\n            stage.setScene(new Scene(root));\r\n            stage.show();\r\n\r\n        } catch (IOException e) {\r\n            System.err.println(\"Erreur lors de l'ouverture des détails : \" + e.getMessage());\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Programme/AfficherProgrammeFront.java b/src/main/java/controllers/Programme/AfficherProgrammeFront.java
--- a/src/main/java/controllers/Programme/AfficherProgrammeFront.java	(revision 1b148927aa02df0595127c901b71ae266021ddf2)
+++ b/src/main/java/controllers/Programme/AfficherProgrammeFront.java	(date 1746029219108)
@@ -16,7 +16,7 @@
 import javafx.scene.shape.Rectangle;
 import javafx.stage.Stage;
 import models.Programme;
-import services.ProgrammeService;
+import services.Programme.ProgrammeService;
 
 import java.io.IOException;
 import java.net.URL;
Index: src/main/java/controllers/Programme/AfficherProgramme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.Programme;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.Tooltip;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.geometry.Insets;\r\nimport models.Programme;\r\nimport services.ProgrammeService;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\n\r\nimport java.net.URL;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AfficherProgramme implements Initializable {\r\n\r\n    @FXML\r\n    private VBox programmeListContainer;  // Conteneur VBox dans le FXML pour afficher les programmes\r\n\r\n    private ProgrammeService programmeService = new ProgrammeService();\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle rb) {\r\n        try {\r\n            // Charger la liste des programmes depuis la base de données\r\n            List<Programme> programmes = programmeService.getAllProgrammes();\r\n\r\n            // Pour chaque programme, créer un HBox contenant ses informations et les boutons d'action\r\n            for (Programme p : programmes) {\r\n                // Créer un HBox pour le programme\r\n                HBox programmeBox = new HBox(20);\r\n                programmeBox.setStyle(\"-fx-background-color: #ecf0f1; -fx-background-radius: 10;\");\r\n                programmeBox.setPadding(new Insets(10));\r\n\r\n                // Créer le label affichant le titre, le type et l'auteur\r\n                Label programmeDetails = new Label(p.getTitre());\r\n                programmeDetails.setStyle(\"-fx-font-size: 16px; -fx-font-weight: bold;\");\r\n\r\n                // Créer les boutons d'action avec des emojis et tooltips\r\n                Button updateBtn = new Button(\"Modifier\");\r\n                updateBtn.setStyle(\"-fx-background-color: #f39c12; -fx-text-fill: white;\");\r\n                updateBtn.setTooltip(new Tooltip(\"Modifier\"));\r\n\r\n                Button deleteBtn = new Button(\"\uD83D\uDDD1Supprimer\");\r\n                deleteBtn.setStyle(\"-fx-background-color: #e74c3c; -fx-text-fill: white;\");\r\n                deleteBtn.setTooltip(new Tooltip(\"Supprimer\"));\r\n\r\n                Button detailBtn = new Button(\"Details\");\r\n                detailBtn.setStyle(\"-fx-background-color: #3498db; -fx-text-fill: white;\");\r\n                detailBtn.setTooltip(new Tooltip(\"Détails\"));\r\n\r\n\r\n                // Action du bouton supprimer :\r\n                deleteBtn.setOnAction(e -> {\r\n                    try {\r\n                        // Appeler la méthode du service pour supprimer le programme de la base de données\r\n                        programmeService.deleteProgramme(p.getId());\r\n                        // Supprimer l'élément visuellement dans l'interface\r\n                        programmeListContainer.getChildren().remove(programmeBox);\r\n                    } catch (SQLException ex) {\r\n                        System.err.println(\"Erreur lors de la suppression du programme : \" + ex.getMessage());\r\n                        ex.printStackTrace();\r\n                    }\r\n                });\r\n\r\n                //Action du bouton de modification\r\n                updateBtn.setOnAction(e -> {\r\n                    try {\r\n                        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/AjouterProgramme.fxml\"));\r\n                        Parent root = loader.load();\r\n\r\n                        AjouterProgramme controller = loader.getController();\r\n                        controller.setProgrammeToEdit(p); // Envoie le programme sélectionné\r\n\r\n                        Stage stage = new Stage();\r\n                        stage.setTitle(\"Modifier Programme\");\r\n                        stage.setScene(new Scene(root));\r\n                        stage.show();\r\n\r\n                    } catch (IOException ex) {\r\n                        System.err.println(\"Erreur lors de l'ouverture du formulaire de modification : \" + ex.getMessage());\r\n                        ex.printStackTrace();\r\n                    }\r\n                });\r\n\r\n\r\n                //Action du bouton details\r\n                detailBtn.setOnAction(e -> {\r\n                    try {\r\n                        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/DetailsProgramme.fxml\"));\r\n                        Parent root = loader.load();\r\n\r\n                        DetailsProgramme controller = loader.getController();\r\n                        controller.setProgrammeDetails(p); // Transfert des données\r\n\r\n                        Stage stage = new Stage();\r\n                        stage.setTitle(\"Détails du Programme\");\r\n                        stage.setScene(new Scene(root));\r\n                        stage.show();\r\n\r\n                    } catch (IOException ex) {\r\n                        System.err.println(\"Erreur lors de l'ouverture de la vue de détails : \" + ex.getMessage());\r\n                        ex.printStackTrace();\r\n                    }\r\n                });\r\n                // Ajouter le label et les boutons dans le HBox\r\n                programmeBox.getChildren().addAll(programmeDetails, updateBtn, deleteBtn, detailBtn);\r\n                // Ajouter le HBox au conteneur VBox\r\n                programmeListContainer.getChildren().add(programmeBox);\r\n            }\r\n\r\n        } catch (SQLException e) {\r\n            System.err.println(\"Erreur lors du chargement des programmes : \" + e.getMessage());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Programme/AfficherProgramme.java b/src/main/java/controllers/Programme/AfficherProgramme.java
--- a/src/main/java/controllers/Programme/AfficherProgramme.java	(revision 1b148927aa02df0595127c901b71ae266021ddf2)
+++ b/src/main/java/controllers/Programme/AfficherProgramme.java	(date 1746029219124)
@@ -9,7 +9,7 @@
 import javafx.scene.layout.VBox;
 import javafx.geometry.Insets;
 import models.Programme;
-import services.ProgrammeService;
+import services.Programme.ProgrammeService;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Parent;
 import javafx.scene.Scene;
Index: src/main/java/controllers/Programme/AjouterProgramme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.Programme;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.scene.control.Alert.AlertType;\r\nimport models.Programme;\r\nimport services.ProgrammeService;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.util.UUID;\r\n\r\npublic class AjouterProgramme {\r\n\r\n    @FXML private TextField tfTitre;\r\n    @FXML private TextField tfAuteur;\r\n    @FXML private TextField tfVideoUrl;\r\n    @FXML private ComboBox<String> cbType;\r\n    @FXML private TextField tfImagePath;\r\n    @FXML private Button btnChoisirImage;\r\n    @FXML private TextArea taDescription;\r\n    @FXML private ImageView imagePreview;\r\n    @FXML private Button btnAjouter;\r\n\r\n    private ProgrammeService programmeService = new ProgrammeService();\r\n    private Programme programmeEnCours = null;\r\n\r\n    private File selectedFile;\r\n    private String imageName = \"\";\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        cbType.getItems().addAll(\"Régime\", \"Cohérence cardiaque\", \"Arrêt du tabac\",\"Santé Mentale\");\r\n    }\r\n\r\n    @FXML\r\n    private void handleChoisirImage() {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.setTitle(\"Choisir une image\");\r\n        fileChooser.getExtensionFilters().addAll(\r\n                new FileChooser.ExtensionFilter(\"Images\", \"*.png\", \"*.jpg\", \"*.jpeg\", \"*.gif\")\r\n        );\r\n\r\n        selectedFile = fileChooser.showOpenDialog(btnChoisirImage.getScene().getWindow());\r\n\r\n        if (selectedFile != null) {\r\n            imageName = UUID.randomUUID().toString().replaceAll(\"-\", \"\") + getFileExtension(selectedFile.getName());\r\n            tfImagePath.setText(selectedFile.getAbsolutePath());\r\n\r\n            Image image = new Image(selectedFile.toURI().toString());\r\n            imagePreview.setImage(image);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleAjouter() {\r\n        if (!validateFields()) return;\r\n\r\n        Programme programme = (programmeEnCours == null) ? new Programme() : programmeEnCours;\r\n        programme.setTitre(tfTitre.getText());\r\n        programme.setAuteur(tfAuteur.getText());\r\n        programme.setType(cbType.getValue());\r\n        programme.setVideoUrl(tfVideoUrl.getText());\r\n        programme.setDescription(taDescription.getText());\r\n\r\n        try {\r\n            if (selectedFile != null) {\r\n                File destDir = new File(getProjectResourceImagePath());\r\n                if (!destDir.exists()) destDir.mkdirs();\r\n\r\n                File destFile = new File(destDir, imageName);\r\n                Files.copy(selectedFile.toPath(), destFile.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);\r\n\r\n                programme.setImage(imageName);\r\n            }\r\n\r\n            if (programmeEnCours == null) {\r\n                programmeService.ajouterProgramme(programme);\r\n                showAlert(AlertType.INFORMATION, \"Succès\", \"Programme ajouté avec succès !\");\r\n            } else {\r\n                programmeService.updateProgramme(programme);\r\n                showAlert(AlertType.INFORMATION, \"Succès\", \"Programme mis à jour avec succès !\");\r\n            }\r\n\r\n            clearForm();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            showAlert(AlertType.ERROR, \"Erreur\", \"Erreur lors de la copie de l'image : \" + e.getMessage());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            showAlert(AlertType.ERROR, \"Erreur\", \"Erreur lors de l'enregistrement : \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private boolean validateFields() {\r\n        StringBuilder errors = new StringBuilder();\r\n\r\n        if (tfTitre.getText().isEmpty()) errors.append(\"- Le titre est requis.\\n\");\r\n        if (tfAuteur.getText().isEmpty()) errors.append(\"- L'auteur est requis.\\n\");\r\n        if (cbType.getValue() == null) errors.append(\"- Le type est requis.\\n\");\r\n        if (taDescription.getText().isEmpty()) errors.append(\"- La description est requise.\\n\");\r\n\r\n        if (errors.length() > 0) {\r\n            showAlert(AlertType.ERROR, \"Erreur de validation\", errors.toString());\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private String getFileExtension(String fileName) {\r\n        int index = fileName.lastIndexOf('.');\r\n        return (index > 0) ? fileName.substring(index) : \".png\";\r\n    }\r\n\r\n    private String getProjectResourceImagePath() {\r\n        return System.getProperty(\"user.dir\") + \"/src/main/resources/images\";\r\n    }\r\n\r\n    private void showAlert(AlertType type, String title, String message) {\r\n        Alert alert = new Alert(type);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n\r\n    private void clearForm() {\r\n        tfTitre.clear();\r\n        tfAuteur.clear();\r\n        tfVideoUrl.clear();\r\n        cbType.setValue(null);\r\n        tfImagePath.clear();\r\n        taDescription.clear();\r\n        imagePreview.setImage(null);\r\n        selectedFile = null;\r\n        imageName = \"\";\r\n        programmeEnCours = null;\r\n    }\r\n\r\n    public void setProgrammeToEdit(Programme programme) {\r\n        if (programme != null) {\r\n            this.programmeEnCours = programme;\r\n\r\n            tfTitre.setText(programme.getTitre());\r\n            tfAuteur.setText(programme.getAuteur());\r\n            tfVideoUrl.setText(programme.getVideoUrl());\r\n            cbType.setValue(programme.getType());\r\n            tfImagePath.setText(programme.getImage());\r\n            taDescription.setText(programme.getDescription());\r\n\r\n            // Charger l'image existante si elle est là\r\n            File imageFile = new File(getProjectResourceImagePath() + \"/\" + programme.getImage());\r\n            if (imageFile.exists()) {\r\n                imagePreview.setImage(new Image(imageFile.toURI().toString()));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Programme/AjouterProgramme.java b/src/main/java/controllers/Programme/AjouterProgramme.java
--- a/src/main/java/controllers/Programme/AjouterProgramme.java	(revision 1b148927aa02df0595127c901b71ae266021ddf2)
+++ b/src/main/java/controllers/Programme/AjouterProgramme.java	(date 1746029219116)
@@ -7,7 +7,7 @@
 import javafx.stage.FileChooser;
 import javafx.scene.control.Alert.AlertType;
 import models.Programme;
-import services.ProgrammeService;
+import services.Programme.ProgrammeService;
 
 import java.io.File;
 import java.io.IOException;
