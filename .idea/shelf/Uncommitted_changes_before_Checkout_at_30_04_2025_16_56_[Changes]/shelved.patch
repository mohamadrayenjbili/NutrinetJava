Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>PiJava</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <version>8.0.33</version>\r\n        </dependency>\r\n        <!-- JavaFX -->\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>17</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-fxml</artifactId>\r\n            <version>17</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.apache.pdfbox</groupId>\r\n            <artifactId>pdfbox</artifactId>\r\n            <version>2.0.27</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.openjfx</groupId>\r\n                <artifactId>javafx-maven-plugin</artifactId>\r\n                <version>0.0.8</version>\r\n                <configuration>\r\n                    <mainClass>controllers.Home</mainClass>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/pom.xml	(date 1745888895895)
@@ -38,6 +38,106 @@
             <artifactId>pdfbox</artifactId>
             <version>2.0.27</version>
         </dependency>
+        <!-- ________________________________________________________________ -->
+
+        <!-- Google APIs avec versions mises à jour -->
+        <dependency>
+            <groupId>com.google.apis</groupId>
+            <artifactId>google-api-services-oauth2</artifactId>
+            <version>v2-rev20200213-2.0.0</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.google.api-client</groupId>
+            <artifactId>google-api-client</artifactId>
+            <version>2.3.0</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>com.google.guava</groupId>
+                    <artifactId>guava</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+
+        <!-- Ajout explicite de Guava avec version sécurisée -->
+        <dependency>
+            <groupId>com.google.guava</groupId>
+            <artifactId>guava</artifactId>
+            <version>32.1.3-jre</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.google.oauth-client</groupId>
+            <artifactId>google-oauth-client-jetty</artifactId>
+            <version>1.34.1</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>com.google.guava</groupId>
+                    <artifactId>guava</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+
+        <dependency>
+            <groupId>com.google.http-client</groupId>
+            <artifactId>google-http-client-gson</artifactId>
+            <version>1.43.3</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.google.auth</groupId>
+            <artifactId>google-auth-library-oauth2-http</artifactId>
+            <version>1.20.0</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>com.google.guava</groupId>
+                    <artifactId>guava</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+
+        <!-- Google OAuth Client -->
+        <dependency>
+            <groupId>com.google.oauth-client</groupId>
+            <artifactId>google-oauth-client</artifactId>
+            <version>1.34.1</version>
+        </dependency>
+
+
+
+        <!-- ________________________________________________________________ -->
+        <dependency>
+            <groupId>com.squareup.okhttp3</groupId>
+            <artifactId>okhttp</artifactId>
+            <version>4.12.0</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.json</groupId>
+            <artifactId>json</artifactId>
+            <version>20240303</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.twilio.sdk</groupId>
+            <artifactId>twilio</artifactId>
+            <version>8.31.1</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.sun.mail</groupId>
+            <artifactId>jakarta.mail</artifactId>
+            <version>2.0.1</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.mailersend</groupId>
+            <artifactId>java-sdk</artifactId>
+            <version>1.0.0</version>
+        </dependency>
+
+
+
     </dependencies>
 
     <build>
@@ -51,7 +151,18 @@
                 </configuration>
             </plugin>
         </plugins>
+        <resources>
+            <resource>
+                <directory>src/main/resources</directory>
+            </resource>
+        </resources>
+
     </build>
 
 
+
+
+
+
+
 </project>
\ No newline at end of file
Index: src/main/java/controllers/Programme/AfficherProgrammeFront.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.Programme;\r\nimport javafx.animation.FadeTransition;\r\nimport javafx.util.Duration;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.effect.DropShadow;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.FlowPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.stage.Stage;\r\nimport models.Programme;\r\nimport services.ProgrammeService;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class AfficherProgrammeFront implements Initializable {\r\n\r\n    @FXML\r\n    private FlowPane programmeListContainer;\r\n\r\n    @FXML\r\n    private TextField searchField; // Barre de recherche\r\n\r\n    @FXML\r\n    private ComboBox<String> filterComboBox; // Filtre par type\r\n\r\n    private ProgrammeService programmeService = new ProgrammeService();\r\n    private ObservableList<Programme> allProgrammes; // liste complète\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle rb) {\r\n        try {\r\n            List<Programme> programmes = programmeService.getAllProgrammes();\r\n            allProgrammes = FXCollections.observableArrayList(programmes);\r\n\r\n            // Remplir le ComboBox avec les types de programmes uniques\r\n            Set<String> types = programmes.stream()\r\n                    .map(Programme::getType)\r\n                    .collect(Collectors.toSet());\r\n            filterComboBox.setItems(FXCollections.observableArrayList(types));\r\n            filterComboBox.getItems().add(0, \"Tous\"); // Option pour afficher tous\r\n            filterComboBox.getSelectionModel().selectFirst();\r\n\r\n            // Listener sur la barre de recherche\r\n            searchField.textProperty().addListener((observable, oldValue, newValue) -> filterAndDisplayProgrammes());\r\n\r\n            // Listener sur le filtre (ComboBox)\r\n            filterComboBox.valueProperty().addListener((observable, oldValue, newValue) -> filterAndDisplayProgrammes());\r\n\r\n            // Affichage initial de la liste\r\n            filterAndDisplayProgrammes();\r\n\r\n        } catch (SQLException e) {\r\n            System.err.println(\"Erreur lors du chargement des programmes : \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void filterAndDisplayProgrammes() {\r\n        // Vider le conteneur avant de réafficher\r\n        programmeListContainer.getChildren().clear();\r\n\r\n        String searchText = (searchField.getText() != null) ? searchField.getText().toLowerCase() : \"\";\r\n        String filterType = filterComboBox.getValue();\r\n        if (filterType == null || filterType.equals(\"Tous\")) {\r\n            filterType = \"\";\r\n        }\r\n        // Création d'une variable finale pour l'utiliser dans la lambda\r\n        final String effectiveFilterType = filterType;\r\n\r\n        // Filtrer la liste en fonction du texte de recherche et du type sélectionné\r\n        List<Programme> filtered = allProgrammes.stream()\r\n                .filter(p -> p.getTitre().toLowerCase().contains(searchText))\r\n                .filter(p -> effectiveFilterType.isEmpty() || p.getType().equalsIgnoreCase(effectiveFilterType))\r\n                .collect(Collectors.toList());\r\n\r\n        for (Programme p : filtered) {\r\n            // Création d'une variable finale pour utilisation dans la lambda\r\n            final Programme programmeCard = p;\r\n\r\n            VBox card = new VBox(10);\r\n            card.setPadding(new Insets(15));\r\n            card.setSpacing(10);\r\n            card.setPrefWidth(250); // Adapté pour 3 cartes par ligne dans une largeur de 800px\r\n            card.setStyle(\"-fx-background-color: #ffffff; -fx-background-radius: 15; -fx-border-radius: 15; -fx-cursor: hand;\");\r\n            card.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.1)));\r\n\r\n            // Effet hover\r\n            card.setOnMouseEntered(e -> card.setEffect(new DropShadow(15, Color.rgb(0, 0, 0, 0.25))));\r\n            card.setOnMouseExited(e -> card.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.1))));\r\n\r\n            // Utilisation de la variable finale dans la lambda pour l'événement clic\r\n            card.setOnMouseClicked((MouseEvent e) -> openDetails(programmeCard));\r\n\r\n            // Gestion de l'image\r\n            Image image;\r\n            try {\r\n                image = new Image(\"file:src/main/resources/images/\" + programmeCard.getImage());\r\n            } catch (Exception ex) {\r\n                image = new Image(\"file:src/main/resources/images/default_program.png\");\r\n            }\r\n\r\n            ImageView imageView = new ImageView(image);\r\n            imageView.setFitHeight(160);\r\n            imageView.setFitWidth(220);\r\n            imageView.setPreserveRatio(false);\r\n            imageView.setSmooth(true);\r\n\r\n            // Clipping pour obtenir des coins arrondis\r\n            Rectangle clip = new Rectangle(220, 160);\r\n            clip.setArcWidth(20);\r\n            clip.setArcHeight(20);\r\n            imageView.setClip(clip);\r\n\r\n            // Titre\r\n            Label titleLabel = new Label(programmeCard.getTitre());\r\n            titleLabel.setStyle(\"-fx-font-size: 18px; -fx-font-weight: bold; -fx-text-fill: #2d3436;\");\r\n\r\n            // Description\r\n            Label descriptionLabel = new Label(programmeCard.getDescription());\r\n            descriptionLabel.setWrapText(true);\r\n            descriptionLabel.setStyle(\"-fx-font-size: 14px; -fx-text-fill: #636e72;\");\r\n\r\n            card.getChildren().addAll(imageView, titleLabel, descriptionLabel);\r\n            programmeListContainer.getChildren().add(card);\r\n            FadeTransition fade = new FadeTransition(Duration.millis(300), card);\r\n            fade.setFromValue(0);\r\n            fade.setToValue(1);\r\n            fade.play();\r\n        }\r\n    }\r\n\r\n    private void openDetails(Programme p) {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/DetailsProgramme.fxml\"));\r\n            Parent root = loader.load();\r\n\r\n            DetailsProgramme controller = loader.getController();\r\n            controller.setProgrammeDetails(p);\r\n\r\n            Stage stage = new Stage();\r\n            stage.setTitle(\"Détails du Programme\");\r\n            stage.setScene(new Scene(root));\r\n            stage.show();\r\n\r\n        } catch (IOException e) {\r\n            System.err.println(\"Erreur lors de l'ouverture des détails : \" + e.getMessage());\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Programme/AfficherProgrammeFront.java b/src/main/java/controllers/Programme/AfficherProgrammeFront.java
--- a/src/main/java/controllers/Programme/AfficherProgrammeFront.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/Programme/AfficherProgrammeFront.java	(date 1745465300333)
@@ -1,5 +1,6 @@
 package controllers.Programme;
 import javafx.animation.FadeTransition;
+import javafx.scene.control.Button;
 import javafx.util.Duration;
 
 import javafx.collections.FXCollections;
@@ -23,7 +24,7 @@
 import javafx.scene.shape.Rectangle;
 import javafx.stage.Stage;
 import models.Programme;
-import services.ProgrammeService;
+import services.Programme.ProgrammeService;
 
 import java.io.IOException;
 import java.net.URL;
@@ -47,8 +48,11 @@
     private ProgrammeService programmeService = new ProgrammeService();
     private ObservableList<Programme> allProgrammes; // liste complète
 
+
+
     @Override
     public void initialize(URL url, ResourceBundle rb) {
+        programmeListContainer.getStylesheets().add(getClass().getResource("/Programme/modern_list.css").toExternalForm());
         try {
             List<Programme> programmes = programmeService.getAllProgrammes();
             allProgrammes = FXCollections.observableArrayList(programmes);
@@ -73,97 +77,90 @@
         } catch (SQLException e) {
             System.err.println("Erreur lors du chargement des programmes : " + e.getMessage());
         }
-    }
 
+    }
     private void filterAndDisplayProgrammes() {
-        // Vider le conteneur avant de réafficher
         programmeListContainer.getChildren().clear();
 
-        String searchText = (searchField.getText() != null) ? searchField.getText().toLowerCase() : "";
+        String searchText = searchField.getText() != null ? searchField.getText().toLowerCase() : "";
         String filterType = filterComboBox.getValue();
-        if (filterType == null || filterType.equals("Tous")) {
-            filterType = "";
-        }
-        // Création d'une variable finale pour l'utiliser dans la lambda
-        final String effectiveFilterType = filterType;
+        final String effectiveFilterType = (filterType == null || filterType.equals("Tous")) ? "" : filterType;
 
-        // Filtrer la liste en fonction du texte de recherche et du type sélectionné
         List<Programme> filtered = allProgrammes.stream()
                 .filter(p -> p.getTitre().toLowerCase().contains(searchText))
                 .filter(p -> effectiveFilterType.isEmpty() || p.getType().equalsIgnoreCase(effectiveFilterType))
                 .collect(Collectors.toList());
 
         for (Programme p : filtered) {
-            // Création d'une variable finale pour utilisation dans la lambda
-            final Programme programmeCard = p;
-
-            VBox card = new VBox(10);
-            card.setPadding(new Insets(15));
-            card.setSpacing(10);
-            card.setPrefWidth(250); // Adapté pour 3 cartes par ligne dans une largeur de 800px
-            card.setStyle("-fx-background-color: #ffffff; -fx-background-radius: 15; -fx-border-radius: 15; -fx-cursor: hand;");
-            card.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.1)));
+            VBox card = new VBox();
+            card.getStyleClass().add("programme-card");
 
-            // Effet hover
-            card.setOnMouseEntered(e -> card.setEffect(new DropShadow(15, Color.rgb(0, 0, 0, 0.25))));
-            card.setOnMouseExited(e -> card.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.1))));
-
-            // Utilisation de la variable finale dans la lambda pour l'événement clic
-            card.setOnMouseClicked((MouseEvent e) -> openDetails(programmeCard));
-
-            // Gestion de l'image
-            Image image;
+            // Image
+            ImageView imageView = new ImageView();
             try {
-                image = new Image("file:src/main/resources/images/" + programmeCard.getImage());
+                imageView.setImage(new Image("file:src/main/resources/images/" + p.getImage()));
             } catch (Exception ex) {
-                image = new Image("file:src/main/resources/images/default_program.png");
+                imageView.setImage(new Image("file:src/main/resources/images/default_program.png"));
             }
-
-            ImageView imageView = new ImageView(image);
-            imageView.setFitHeight(160);
-            imageView.setFitWidth(220);
+            imageView.setFitWidth(280);
+            imageView.setFitHeight(180);
             imageView.setPreserveRatio(false);
-            imageView.setSmooth(true);
+            imageView.getStyleClass().add("card-image");
+
+            // Contenu
+            VBox content = new VBox(10);
+            content.getStyleClass().add("card-content");
 
-            // Clipping pour obtenir des coins arrondis
-            Rectangle clip = new Rectangle(220, 160);
-            clip.setArcWidth(20);
-            clip.setArcHeight(20);
-            imageView.setClip(clip);
+            Label titleLabel = new Label(p.getTitre());
+            titleLabel.getStyleClass().add("card-title");
 
-            // Titre
-            Label titleLabel = new Label(programmeCard.getTitre());
-            titleLabel.setStyle("-fx-font-size: 18px; -fx-font-weight: bold; -fx-text-fill: #2d3436;");
+            Label typeLabel = new Label("🏷 " + p.getType());
+            typeLabel.getStyleClass().add("card-type");
 
-            // Description
-            Label descriptionLabel = new Label(programmeCard.getDescription());
-            descriptionLabel.setWrapText(true);
-            descriptionLabel.setStyle("-fx-font-size: 14px; -fx-text-fill: #636e72;");
+            Label descLabel = new Label(p.getDescription());
+            descLabel.getStyleClass().add("card-description");
+            descLabel.setWrapText(true);
+            descLabel.setMaxHeight(60);
 
-            card.getChildren().addAll(imageView, titleLabel, descriptionLabel);
-            programmeListContainer.getChildren().add(card);
+            content.getChildren().addAll(titleLabel, typeLabel, descLabel);
+            card.getChildren().addAll(imageView, content);
+
+            // Animation et interaction
+            card.setOnMouseClicked(e -> openDetails(p));
+
             FadeTransition fade = new FadeTransition(Duration.millis(300), card);
             fade.setFromValue(0);
             fade.setToValue(1);
             fade.play();
+
+            programmeListContainer.getChildren().add(card);
         }
     }
+
 
     private void openDetails(Programme p) {
         try {
-            FXMLLoader loader = new FXMLLoader(getClass().getResource("/DetailsProgramme.fxml"));
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/Programme/DetailsProgramme.fxml"));
             Parent root = loader.load();
 
             DetailsProgramme controller = loader.getController();
             controller.setProgrammeDetails(p);
 
-            Stage stage = new Stage();
-            stage.setTitle("Détails du Programme");
-            stage.setScene(new Scene(root));
-            stage.show();
+            // Utiliser programmeListContainer pour récupérer le Stage actuel
+            Stage currentStage = (Stage) programmeListContainer.getScene().getWindow();
+
+
+
+            // Changer seulement la scène du Stage existant
+            currentStage.setScene(new Scene(root));
+            currentStage.setTitle("Détails du Programme");
+            currentStage.setFullScreen(true);
+            currentStage.setFullScreenExitHint("");
+            currentStage.show();
 
         } catch (IOException e) {
             System.err.println("Erreur lors de l'ouverture des détails : " + e.getMessage());
         }
     }
-}
\ No newline at end of file
+
+}
Index: src/main/java/controllers/Home.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class Home extends Application {\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) {\r\n        try {\r\n            // Charge le formulaire de consultation\r\n            Parent root = FXMLLoader.load(getClass().getResource(\"/user/sign_in.fxml\"));\r\n\r\n            Scene scene = new Scene(root);\r\n            stage.setTitle(\"Ajouter Consultation\");\r\n            stage.setScene(scene);\r\n            stage.show();\r\n\r\n        } catch (IOException e) {\r\n            System.out.println(\"Erreur de chargement FXML : \" + e.getMessage());\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Home.java b/src/main/java/controllers/Home.java
--- a/src/main/java/controllers/Home.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/Home.java	(date 1746028445702)
@@ -19,10 +19,13 @@
     public void start(Stage stage) {
         try {
             // Charge le formulaire de consultation
-            Parent root = FXMLLoader.load(getClass().getResource("/user/sign_in.fxml"));
-
+            //Parent root = FXMLLoader.load(getClass().getResource("/Programme/AfficherProgramme.fxml"));
+            Parent root = FXMLLoader.load(getClass().getResource("/Programme/AjouterProgramme.fxml"));
             Scene scene = new Scene(root);
+            scene.getStylesheets().add(getClass().getResource("/Programme/modern_list.css").toExternalForm());
             stage.setTitle("Ajouter Consultation");
+            stage.setMaximized(true);
+
             stage.setScene(scene);
             stage.show();
 
Index: src/main/java/controllers/Programme/DetailsProgramme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.Programme;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport models.Commentaire;\r\nimport models.Programme;\r\nimport services.CommentaireService;\r\n\r\nimport java.net.URL;\r\nimport java.time.LocalDateTime;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class DetailsProgramme implements Initializable {\r\n\r\n    @FXML\r\n    private VBox rootPane;\r\n\r\n    @FXML\r\n    private Label lblTitre, lblType, lblAuteur, lblVideoUrl;\r\n\r\n    @FXML\r\n    private TextArea lblDescription;\r\n\r\n    @FXML\r\n    private ImageView imgProgramme;\r\n\r\n    @FXML\r\n    private TextArea txtCommentaire;\r\n\r\n    @FXML\r\n    private Button btnEnvoyerCommentaire;\r\n\r\n    @FXML\r\n    private Button btnCommencerProgramme; // Le nouveau bouton \"Commencer le programme\"\r\n\r\n    @FXML\r\n    private VBox commentaireContainer;\r\n\r\n    private Programme programme;\r\n\r\n    private final CommentaireService commentaireService = new CommentaireService();\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle rb) {\r\n        // On ajoute la feuille de style\r\n        rootPane.getStylesheets().add(getClass().getResource(\"/details_style.css\").toExternalForm());\r\n\r\n        // Action sur le bouton \"Envoyer le commentaire\"\r\n        btnEnvoyerCommentaire.setOnAction(event -> {\r\n            String contenu = txtCommentaire.getText().trim();\r\n            if (!contenu.isEmpty() && programme != null) {\r\n                Commentaire commentaire = new Commentaire();\r\n                commentaire.setProgrammeId(programme.getId());\r\n                commentaire.setAuteurId(1); // Remplacer par l’ID de l’utilisateur connecté\r\n                commentaire.setContenu(contenu);\r\n                commentaire.setCreatedAt(LocalDateTime.now());\r\n\r\n                commentaireService.ajouterCommentaire(commentaire);\r\n                afficherCommentaire(commentaire);\r\n\r\n                txtCommentaire.clear();\r\n            }\r\n        });\r\n\r\n        // Action sur le bouton \"Commencer le programme\"\r\n        btnCommencerProgramme.setOnAction(event -> {\r\n            // Ici, vous pouvez définir l’action qui lance le programme.\r\n            // Par exemple, ouvrir un lecteur vidéo avec l’URL, naviguer vers un autre écran, etc.\r\n            System.out.println(\"Le programme \" + (programme != null ? programme.getTitre() : \"\") + \" est lancé !\");\r\n            // TODO: Implémentez la logique pour démarrer ou lancer le programme\r\n        });\r\n    }\r\n\r\n    public void setProgrammeDetails(Programme p) {\r\n        this.programme = p;\r\n\r\n        lblTitre.setText(p.getTitre());\r\n        lblType.setText(p.getType());\r\n        lblAuteur.setText(p.getAuteur());\r\n        lblDescription.setText(p.getDescription());\r\n        lblVideoUrl.setText(p.getVideoUrl());\r\n\r\n        if (p.getImage() != null && !p.getImage().isEmpty()) {\r\n            // Vous pouvez adapter le chemin vers l'image selon votre organisation de projet\r\n            Image image = new Image(\"file:src/main/resources/images/\" + p.getImage());\r\n            imgProgramme.setImage(image);\r\n        }\r\n\r\n        // Afficher les commentaires du programme\r\n        commentaireContainer.getChildren().clear();\r\n        List<Commentaire> commentaires = commentaireService.getCommentairesByProgramme(p.getId());\r\n        for (Commentaire commentaire : commentaires) {\r\n            afficherCommentaire(commentaire);\r\n        }\r\n    }\r\n\r\n    private void afficherCommentaire(Commentaire c) {\r\n        HBox hbox = new HBox(10);\r\n        hbox.setStyle(\"-fx-background-color: #f0f0f0; -fx-padding: 10; -fx-background-radius: 10;\");\r\n        hbox.setAlignment(Pos.TOP_LEFT);\r\n\r\n        ImageView imageView = new ImageView(new Image(\"file:src/main/resources/images/default-user.png\"));\r\n        imageView.setFitWidth(40);\r\n        imageView.setFitHeight(40);\r\n        imageView.setPreserveRatio(true);\r\n\r\n        VBox vbox = new VBox(5);\r\n        vbox.setMaxWidth(400); // Limite la largeur du contenu\r\n        vbox.setStyle(\"-fx-padding: 5;\");\r\n\r\n        Label nom = new Label(\"Utilisateur #\" + c.getAuteurId());\r\n        nom.setStyle(\"-fx-font-weight: bold;\");\r\n\r\n        Label date = new Label(\"Publié le \" + c.getCreatedAt().toLocalDate().toString());\r\n        date.setStyle(\"-fx-font-size: 10; -fx-text-fill: gray;\");\r\n\r\n        Label contenu = new Label(c.getContenu());\r\n        contenu.setWrapText(true);\r\n        contenu.setStyle(\"-fx-font-size: 13;\");\r\n\r\n        HBox boutons = new HBox(10);\r\n        Button btnUtile = new Button(\"Utile\");\r\n        btnUtile.getStyleClass().add(\"btn-utile\");\r\n\r\n        Button btnSignaler = new Button(\"Signaler\");\r\n        btnSignaler.getStyleClass().add(\"btn-signaler\");\r\n\r\n        Button btnSupprimer = new Button(\"Supprimer\");\r\n        btnSupprimer.getStyleClass().add(\"btn-supprimer\");\r\n\r\n        // Suppression du commentaire au clic sur \"Supprimer\"\r\n        btnSupprimer.setOnAction(e -> {\r\n            commentaireService.supprimerCommentaire(c.getId());\r\n            commentaireContainer.getChildren().remove(hbox);\r\n        });\r\n\r\n        boutons.getChildren().addAll(btnUtile, btnSignaler, btnSupprimer);\r\n        vbox.getChildren().addAll(nom, date, contenu, boutons);\r\n        hbox.getChildren().addAll(imageView, vbox);\r\n\r\n        commentaireContainer.getChildren().add(hbox);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Programme/DetailsProgramme.java b/src/main/java/controllers/Programme/DetailsProgramme.java
--- a/src/main/java/controllers/Programme/DetailsProgramme.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/Programme/DetailsProgramme.java	(date 1746027827353)
@@ -3,19 +3,43 @@
 import javafx.fxml.FXML;
 import javafx.fxml.Initializable;
 import javafx.geometry.Pos;
+import javafx.scene.Parent;
 import javafx.scene.control.*;
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.VBox;
-import models.Commentaire;
-import models.Programme;
-import services.CommentaireService;
-
+import javafx.application.Platform;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import java.io.IOException;
+import java.net.URL;
+import java.sql.SQLException;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.ComboBox;
+import javafx.scene.control.Label;
+import javafx.scene.control.TextField;
+import javafx.scene.effect.DropShadow;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+import javafx.scene.input.MouseEvent;
+import javafx.scene.layout.FlowPane;
+import javafx.scene.layout.VBox;
+import javafx.scene.paint.Color;
+import javafx.stage.Stage;
+import models.*;
+import services.commentaire.CommentaireLikeService;
+import utils.session;
+import services.commentaire.CommentaireService;
+import javafx.geometry.Insets;
 import java.net.URL;
 import java.time.LocalDateTime;
 import java.util.List;
+import java.util.Optional;
 import java.util.ResourceBundle;
+import java.util.Map;
+import java.util.stream.Collectors;
 
 public class DetailsProgramme implements Initializable {
 
@@ -23,7 +47,9 @@
     private VBox rootPane;
 
     @FXML
-    private Label lblTitre, lblType, lblAuteur, lblVideoUrl;
+    private Label lblTitre, lblType, lblAuteur;
+    @FXML
+    private Hyperlink lblVideoUrl;
 
     @FXML
     private TextArea lblDescription;
@@ -33,6 +59,8 @@
 
     @FXML
     private TextArea txtCommentaire;
+    @FXML
+    private Button btnRetour;
 
     @FXML
     private Button btnEnvoyerCommentaire;
@@ -46,37 +74,87 @@
     private Programme programme;
 
     private final CommentaireService commentaireService = new CommentaireService();
+    private final CommentaireLikeService likeService = new CommentaireLikeService();
 
     @Override
     public void initialize(URL url, ResourceBundle rb) {
         // On ajoute la feuille de style
-        rootPane.getStylesheets().add(getClass().getResource("/details_style.css").toExternalForm());
-
+        rootPane.getStylesheets().add(getClass().getResource("/Programme/details_style.css").toExternalForm());
+        rootPane.getStylesheets().add(getClass().getResource("/Programme/modern_details.css").toExternalForm());
         // Action sur le bouton "Envoyer le commentaire"
         btnEnvoyerCommentaire.setOnAction(event -> {
             String contenu = txtCommentaire.getText().trim();
             if (!contenu.isEmpty() && programme != null) {
-                Commentaire commentaire = new Commentaire();
-                commentaire.setProgrammeId(programme.getId());
-                commentaire.setAuteurId(1); // Remplacer par l’ID de l’utilisateur connecté
-                commentaire.setContenu(contenu);
-                commentaire.setCreatedAt(LocalDateTime.now());
+                User currentUser = session.getCurrentUser();
+                if (currentUser != null) {
+                    Commentaire commentaire = new Commentaire();
+                    commentaire.setProgrammeId(programme.getId());
+                    commentaire.setAuteurId(currentUser.getId());
+                    commentaire.setContenu(contenu);
+                    commentaire.setCreatedAt(LocalDateTime.now());
 
-                commentaireService.ajouterCommentaire(commentaire);
-                afficherCommentaire(commentaire);
+                    commentaireService.ajouterCommentaire(commentaire);
+                    afficherCommentaire(commentaire, commentaireContainer);
 
-                txtCommentaire.clear();
+                    txtCommentaire.clear();
+                } else {
+                    System.out.println("Aucun utilisateur connecté !");
+                }
             }
         });
+
+        // Bouton pour générer un commentaire AI
+        Button btnGenererCommentaire = new Button("🤖 Générer un commentaire");
+        btnGenererCommentaire.getStyleClass().add("btn-modifier"); // Style similaire au bouton "Modifier"
+        btnGenererCommentaire.setOnAction(event -> onGenerateAIComment());
+        commentaireContainer.getChildren().add(0, btnGenererCommentaire); // Ajouter en haut de la section des commentaires
+
 
         // Action sur le bouton "Commencer le programme"
         btnCommencerProgramme.setOnAction(event -> {
-            // Ici, vous pouvez définir l’action qui lance le programme.
-            // Par exemple, ouvrir un lecteur vidéo avec l’URL, naviguer vers un autre écran, etc.
-            System.out.println("Le programme " + (programme != null ? programme.getTitre() : "") + " est lancé !");
-            // TODO: Implémentez la logique pour démarrer ou lancer le programme
+            if (programme != null) {
+                String titreProgramme = programme.getTitre();
+                String utilisateurNom = session.getCurrentUser() != null ? session.getCurrentUser().getName() : "Utilisateur inconnu";
+
+                String message = utilisateurNom + " a commencé le programme : " + titreProgramme;
+
+                // Envoyer le SMS via Twilio
+                TwilioSMSService.sendSMS("+21656330320", message);
+
+                System.out.println("Le programme " + titreProgramme + " est lancé !");
+            } else {
+                System.out.println("Aucun programme sélectionné !");
+            }
+        });
+
+
+        // Gestion du bouton retour
+        btnRetour.setOnAction(event -> {
+            try {
+                FXMLLoader loader = new FXMLLoader(getClass().getResource("/Programme/AfficherProgrammeFront.fxml"));
+                Parent root = loader.load();
+
+                // Récupérer la scène actuelle
+                Scene currentScene = btnRetour.getScene();
+
+                // Remplacer seulement le contenu (pas la scène entière)
+                currentScene.setRoot(root);
+
+                // Ajouter ton CSS si besoin
+                String css = getClass().getResource("/Programme/modern_list.css").toExternalForm();
+                if (!currentScene.getStylesheets().contains(css)) {
+                    currentScene.getStylesheets().add(css);
+                }
+
+            } catch (IOException e) {
+                System.err.println("Erreur lors du retour : " + e.getMessage());
+                e.printStackTrace();
+            }
         });
+
     }
+
+
 
     public void setProgrammeDetails(Programme p) {
         this.programme = p;
@@ -92,59 +170,300 @@
             Image image = new Image("file:src/main/resources/images/" + p.getImage());
             imgProgramme.setImage(image);
         }
-
-        // Afficher les commentaires du programme
+        // Réorganisation de l'affichage des commentaires
         commentaireContainer.getChildren().clear();
         List<Commentaire> commentaires = commentaireService.getCommentairesByProgramme(p.getId());
-        for (Commentaire commentaire : commentaires) {
-            afficherCommentaire(commentaire);
-        }
+
+        // Créer une map des commentaires par parent ID
+        Map<Integer, List<Commentaire>> reponses = commentaires.stream()
+                .filter(c -> c.getParentId() != null)
+                .collect(Collectors.groupingBy(Commentaire::getParentId));
+
+        // Afficher les commentaires parents avec leurs réponses
+        commentaires.stream()
+                .filter(c -> c.getParentId() == null)
+                .forEach(commentaire -> {
+                    // Afficher le commentaire parent
+                    VBox parentBlock = new VBox(10);
+                    parentBlock.getStyleClass().add("parent-comment-block");
+
+                    afficherCommentaire(commentaire, parentBlock);
+
+                    // Afficher les réponses associées
+                    List<Commentaire> reponsesCommentaire = reponses.get(commentaire.getId());
+                    if (reponsesCommentaire != null) {
+                        VBox reponsesBlock = new VBox(5);
+                        reponsesBlock.setPadding(new Insets(0, 0, 0, 50));
+                        reponsesBlock.getStyleClass().add("responses-block");
+
+                        reponsesCommentaire.forEach(reponse ->
+                                afficherCommentaire(reponse, reponsesBlock)
+                        );
+
+                        parentBlock.getChildren().add(reponsesBlock);
+                    }
+
+                    commentaireContainer.getChildren().add(parentBlock);
+                });
+
+
+
     }
 
-    private void afficherCommentaire(Commentaire c) {
+    private void afficherCommentaire(Commentaire c, VBox container) {
+        VBox commentBlock = new VBox(10);
+        commentBlock.getStyleClass().add("comment-block");
+
+        // Ajouter la classe spécifique pour les réponses
+        if (c.getParentId() != null) {
+            commentBlock.getStyleClass().add("response-comment");
+        }
+
+        // Commentaire principal
         HBox hbox = new HBox(10);
-        hbox.setStyle("-fx-background-color: #f0f0f0; -fx-padding: 10; -fx-background-radius: 10;");
-        hbox.setAlignment(Pos.TOP_LEFT);
+        hbox.getStyleClass().add("comment-card");
 
+        // Configuration de l'image de profil
         ImageView imageView = new ImageView(new Image("file:src/main/resources/images/default-user.png"));
-        imageView.setFitWidth(40);
-        imageView.setFitHeight(40);
+        imageView.setFitWidth(c.getParentId() != null ? 35 : 40);
+        imageView.setFitHeight(c.getParentId() != null ? 35 : 40);
         imageView.setPreserveRatio(true);
 
         VBox vbox = new VBox(5);
-        vbox.setMaxWidth(400); // Limite la largeur du contenu
-        vbox.setStyle("-fx-padding: 5;");
+        vbox.setMaxWidth(400);
+
+        // En-tête du commentaire
+        HBox headerBox = new HBox(10);
+        headerBox.setAlignment(Pos.CENTER_LEFT);
 
-        Label nom = new Label("Utilisateur #" + c.getAuteurId());
-        nom.setStyle("-fx-font-weight: bold;");
+        Label nom = new Label("Utilisateur : " + session.getCurrentUser().getName());
+        nom.getStyleClass().add("comment-author");
+
+        if (c.getParentId() != null) {
+            Label replyIndicator = new Label("↳ Réponse");
+            replyIndicator.getStyleClass().add("reply-indicator");
+            headerBox.getChildren().addAll(nom, replyIndicator);
+        } else {
+            headerBox.getChildren().add(nom);
+        }
 
         Label date = new Label("Publié le " + c.getCreatedAt().toLocalDate().toString());
-        date.setStyle("-fx-font-size: 10; -fx-text-fill: gray;");
+        date.getStyleClass().add("comment-date");
 
         Label contenu = new Label(c.getContenu());
         contenu.setWrapText(true);
-        contenu.setStyle("-fx-font-size: 13;");
+        contenu.getStyleClass().add("comment-content");
 
+        // Boutons d'action
         HBox boutons = new HBox(10);
+        Button btnRepondre = new Button("↩ Répondre");
+        btnRepondre.getStyleClass().add("btn-repondre");
+        /*
         Button btnUtile = new Button("Utile");
         btnUtile.getStyleClass().add("btn-utile");
 
         Button btnSignaler = new Button("Signaler");
-        btnSignaler.getStyleClass().add("btn-signaler");
+        btnSignaler.getStyleClass().add("btn-signaler"); */
 
+        // Boutons seulement pour l'auteur
+        User currentUser = session.getCurrentUser();
         Button btnSupprimer = new Button("Supprimer");
         btnSupprimer.getStyleClass().add("btn-supprimer");
 
-        // Suppression du commentaire au clic sur "Supprimer"
+        Button btnModifier = new Button("Modifier");
+        btnModifier.getStyleClass().add("btn-modifier");
+
+        if (currentUser != null && currentUser.getId() == c.getAuteurId()) {
+            boutons.getChildren().addAll(btnSupprimer, btnModifier);
+        }
+
+       // boutons.getChildren().addAll(btnRepondre, btnUtile, btnSignaler);
+        boutons.getChildren().addAll(btnRepondre);
+
+        vbox.getChildren().addAll(headerBox, date, contenu, boutons);
+        hbox.getChildren().addAll(imageView, vbox);
+
+        // Zone de réponse (initialement cachée)
+        VBox replyBox = new VBox(10);
+        replyBox.setVisible(false);
+        replyBox.getStyleClass().add("reply-box");
+        replyBox.setPadding(new Insets(0, 0, 0, 50));
+
+        TextArea replyArea = new TextArea();
+        replyArea.setPromptText("Votre réponse...");
+        replyArea.getStyleClass().add("reply-input");
+        replyArea.setPrefRowCount(2);
+
+        Button btnEnvoyerReponse = new Button("Envoyer");
+        btnEnvoyerReponse.getStyleClass().add("submit-button");
+
+        replyBox.getChildren().addAll(replyArea, btnEnvoyerReponse);
+
+        // Event handlers
+        btnRepondre.setOnAction(e -> replyBox.setVisible(!replyBox.isVisible()));
+
+        btnEnvoyerReponse.setOnAction(e -> {
+            if (!replyArea.getText().trim().isEmpty()) {
+                Commentaire reponse = new Commentaire();
+                reponse.setProgrammeId(programme.getId());
+                reponse.setAuteurId(currentUser.getId());
+                reponse.setParentId(c.getId());
+                reponse.setContenu(replyArea.getText().trim());
+                reponse.setCreatedAt(LocalDateTime.now());
+
+                commentaireService.ajouterCommentaire(reponse);
+
+                VBox parentBlock = (VBox) commentBlock.getParent();
+                VBox reponsesBlock = parentBlock.getChildren().stream()
+                        .filter(node -> node instanceof VBox && ((VBox) node).getStyleClass().contains("responses-block"))
+                        .map(node -> (VBox) node)
+                        .findFirst()
+                        .orElseGet(() -> {
+                            VBox newReponsesBlock = new VBox(5);
+                            newReponsesBlock.setPadding(new Insets(0, 0, 0, 50));
+                            newReponsesBlock.getStyleClass().add("responses-block");
+                            parentBlock.getChildren().add(newReponsesBlock);
+                            return newReponsesBlock;
+                        });
+
+                afficherCommentaire(reponse, reponsesBlock);
+
+                replyArea.clear();
+                replyBox.setVisible(false);
+            }
+        });
+
         btnSupprimer.setOnAction(e -> {
-            commentaireService.supprimerCommentaire(c.getId());
-            commentaireContainer.getChildren().remove(hbox);
+            if (currentUser != null && currentUser.getId() == c.getAuteurId()) {
+                commentaireService.supprimerCommentaire(c.getId());
+
+                VBox elementToRemove;
+                if (c.getParentId() == null) {
+                    elementToRemove = (VBox) commentBlock.getParent();
+                    commentaireContainer.getChildren().remove(elementToRemove);
+                } else {
+                    VBox responsesBlock = (VBox) commentBlock.getParent();
+                    responsesBlock.getChildren().remove(commentBlock);
+
+                    if (responsesBlock.getChildren().isEmpty()) {
+                        VBox parentBlock = (VBox) responsesBlock.getParent();
+                        parentBlock.getChildren().remove(responsesBlock);
+                    }
+                }
+            }
+        });
+
+        btnModifier.setOnAction(e -> {
+            if (currentUser != null && currentUser.getId() == c.getAuteurId()) {
+                // Ouvre une zone de texte pour modifier le commentaire
+                TextInputDialog dialog = new TextInputDialog(c.getContenu());
+                dialog.setTitle("Modifier le commentaire");
+                dialog.setHeaderText("Modification de votre commentaire");
+                dialog.setContentText("Nouveau contenu :");
+
+                Optional<String> result = dialog.showAndWait();
+                result.ifPresent(newContent -> {
+                    if (!newContent.trim().isEmpty()) {
+                        c.setContenu(newContent.trim());
+                        commentaireService.modifierCommentaire(c); // Attention : il faut avoir une méthode pour modifier en BDD
+                        contenu.setText(newContent.trim()); // Actualiser directement l'affichage
+                    }
+                });
+            }
         });
+        // Like et Deslike//
+
 
-        boutons.getChildren().addAll(btnUtile, btnSignaler, btnSupprimer);
-        vbox.getChildren().addAll(nom, date, contenu, boutons);
-        hbox.getChildren().addAll(imageView, vbox);
+// Dans la méthode afficherCommentaire, après la création des autres boutons
+        HBox likeBox = new HBox(5);
+        likeBox.setAlignment(Pos.CENTER_LEFT);
 
-        commentaireContainer.getChildren().add(hbox);
+        Button btnLike = new Button();
+        btnLike.getStyleClass().add("btn-like");
+
+// Vérifie si l'utilisateur a déjà liké
+        boolean hasLiked = likeService.hasUserLiked(c.getId(), currentUser.getId());
+        int likeCount = likeService.getLikeCount(c.getId());
+
+// Mise à jour de l'apparence du bouton
+        updateLikeButton(btnLike, hasLiked, likeCount);
+
+        btnLike.setOnAction(e -> {
+            // Vérifie si l'utilisateur est connecté
+            if (currentUser != null) {
+                likeService.toggleLike(c.getId(), currentUser.getId());
+                boolean newLikeStatus = likeService.hasUserLiked(c.getId(), currentUser.getId());
+                int newLikeCount = likeService.getLikeCount(c.getId());
+                updateLikeButton(btnLike, newLikeStatus, newLikeCount);
+            } else {
+                // Afficher une alerte "Veuillez vous connecter"
+                Alert alert = new Alert(Alert.AlertType.WARNING);
+                alert.setTitle("Connexion requise");
+                alert.setContentText("Vous devez être connecté pour liker un commentaire.");
+                alert.showAndWait();
+            }
+        });
+
+        likeBox.getChildren().add(btnLike);
+        boutons.getChildren().add(0, likeBox); // Ajoute le bouton like en premier
+
+        commentBlock.getChildren().add(hbox);
+
+        if (c.getParentId() == null) {
+            commentBlock.getChildren().add(replyBox);
+        }
+
+        container.getChildren().add(commentBlock);
     }
-}
\ No newline at end of file
+
+
+    private void updateLikeButton(Button btn, boolean hasLiked, int count) {
+        String countText = count > 0 ? " " + count : "";
+
+        if (hasLiked) {
+            btn.setText("\u2764" + countText); // Cœur plein Unicode
+            btn.getStyleClass().add("liked");
+        } else {
+            btn.setText("\u2661" + countText); // Cœur vide Unicode
+            btn.getStyleClass().remove("liked");
+        }
+
+        if (!btn.getStyleClass().contains("btn-like")) {
+            btn.getStyleClass().add("btn-like");
+        }
+    }
+
+    private void refreshLikes(Button btnLike, int commentaireId, int userId) {
+        boolean hasLiked = likeService.hasUserLiked(commentaireId, userId);
+        int likeCount = likeService.getLikeCount(commentaireId);
+        updateLikeButton(btnLike, hasLiked, likeCount);
+    }
+
+
+    @FXML
+    private void onGenerateAIComment() {
+        new Thread(() -> {
+            try {
+                String prompt = "Imagine que tu es une personne ordinaire qui a testé ce programme de type "
+                        + programme.getType()
+                        + ". Écris un commentaire court (3-4 lignes) de manière naturelle et humaine, comme si tu donnais ton avis sincère pour encourager d'autres personnes à essayer. Ne commence pas par 'Commentaire :' ou toute autre indication formelle.\n\n"
+                        + "Description du programme :\n"
+                        + programme.getDescription()
+                        + "\n\n"
+                        + "Ton commentaire doit être direct, chaleureux, positif et donner envie d'essayer.";
+
+                String generated = DeepInfra.generateComment(prompt);
+
+                Platform.runLater(() -> {
+                    txtCommentaire.setText(generated.trim());
+                });
+
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }).start();
+    }
+
+
+
+}
Index: src/main/java/controllers/Programme/AjouterProgramme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\npackage controllers.Programme;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.scene.control.Alert.AlertType;\r\nimport models.Programme;\r\nimport services.ProgrammeService;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.util.UUID;\r\n\r\npublic class AjouterProgramme {\r\n\r\n    @FXML private TextField tfTitre;\r\n    @FXML private TextField tfAuteur;\r\n    @FXML private TextField tfVideoUrl;\r\n    @FXML private ComboBox<String> cbType;\r\n    @FXML private TextField tfImagePath;\r\n    @FXML private Button btnChoisirImage;\r\n    @FXML private TextArea taDescription;\r\n    @FXML private ImageView imagePreview;\r\n    @FXML private Button btnAjouter;\r\n\r\n    private ProgrammeService programmeService = new ProgrammeService();\r\n    private Programme programmeEnCours = null;\r\n\r\n    private File selectedFile;\r\n    private String imageName = \"\";\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        cbType.getItems().addAll(\"Régime\", \"Cohérence cardiaque\", \"Arrêt du tabac\",\"Santé Mentale\");\r\n    }\r\n\r\n    @FXML\r\n    private void handleChoisirImage() {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.setTitle(\"Choisir une image\");\r\n        fileChooser.getExtensionFilters().addAll(\r\n                new FileChooser.ExtensionFilter(\"Images\", \"*.png\", \"*.jpg\", \"*.jpeg\", \"*.gif\")\r\n        );\r\n\r\n        selectedFile = fileChooser.showOpenDialog(btnChoisirImage.getScene().getWindow());\r\n\r\n        if (selectedFile != null) {\r\n            imageName = UUID.randomUUID().toString().replaceAll(\"-\", \"\") + getFileExtension(selectedFile.getName());\r\n            tfImagePath.setText(selectedFile.getAbsolutePath());\r\n\r\n            Image image = new Image(selectedFile.toURI().toString());\r\n            imagePreview.setImage(image);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleAjouter() {\r\n        if (!validateFields()) return;\r\n\r\n        Programme programme = (programmeEnCours == null) ? new Programme() : programmeEnCours;\r\n        programme.setTitre(tfTitre.getText());\r\n        programme.setAuteur(tfAuteur.getText());\r\n        programme.setType(cbType.getValue());\r\n        programme.setVideoUrl(tfVideoUrl.getText());\r\n        programme.setDescription(taDescription.getText());\r\n\r\n        try {\r\n            if (selectedFile != null) {\r\n                File destDir = new File(getProjectResourceImagePath());\r\n                if (!destDir.exists()) destDir.mkdirs();\r\n\r\n                File destFile = new File(destDir, imageName);\r\n                Files.copy(selectedFile.toPath(), destFile.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);\r\n\r\n                programme.setImage(imageName);\r\n            }\r\n\r\n            if (programmeEnCours == null) {\r\n                programmeService.ajouterProgramme(programme);\r\n                showAlert(AlertType.INFORMATION, \"Succès\", \"Programme ajouté avec succès !\");\r\n            } else {\r\n                programmeService.updateProgramme(programme);\r\n                showAlert(AlertType.INFORMATION, \"Succès\", \"Programme mis à jour avec succès !\");\r\n            }\r\n\r\n            clearForm();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            showAlert(AlertType.ERROR, \"Erreur\", \"Erreur lors de la copie de l'image : \" + e.getMessage());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            showAlert(AlertType.ERROR, \"Erreur\", \"Erreur lors de l'enregistrement : \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private boolean validateFields() {\r\n        StringBuilder errors = new StringBuilder();\r\n\r\n        if (tfTitre.getText().isEmpty()) errors.append(\"- Le titre est requis.\\n\");\r\n        if (tfAuteur.getText().isEmpty()) errors.append(\"- L'auteur est requis.\\n\");\r\n        if (cbType.getValue() == null) errors.append(\"- Le type est requis.\\n\");\r\n        if (taDescription.getText().isEmpty()) errors.append(\"- La description est requise.\\n\");\r\n\r\n        if (errors.length() > 0) {\r\n            showAlert(AlertType.ERROR, \"Erreur de validation\", errors.toString());\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private String getFileExtension(String fileName) {\r\n        int index = fileName.lastIndexOf('.');\r\n        return (index > 0) ? fileName.substring(index) : \".png\";\r\n    }\r\n\r\n    private String getProjectResourceImagePath() {\r\n        return System.getProperty(\"user.dir\") + \"/src/main/resources/images\";\r\n    }\r\n\r\n    private void showAlert(AlertType type, String title, String message) {\r\n        Alert alert = new Alert(type);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n\r\n    private void clearForm() {\r\n        tfTitre.clear();\r\n        tfAuteur.clear();\r\n        tfVideoUrl.clear();\r\n        cbType.setValue(null);\r\n        tfImagePath.clear();\r\n        taDescription.clear();\r\n        imagePreview.setImage(null);\r\n        selectedFile = null;\r\n        imageName = \"\";\r\n        programmeEnCours = null;\r\n    }\r\n\r\n    public void setProgrammeToEdit(Programme programme) {\r\n        if (programme != null) {\r\n            this.programmeEnCours = programme;\r\n\r\n            tfTitre.setText(programme.getTitre());\r\n            tfAuteur.setText(programme.getAuteur());\r\n            tfVideoUrl.setText(programme.getVideoUrl());\r\n            cbType.setValue(programme.getType());\r\n            tfImagePath.setText(programme.getImage());\r\n            taDescription.setText(programme.getDescription());\r\n\r\n            // Charger l'image existante si elle est là\r\n            File imageFile = new File(getProjectResourceImagePath() + \"/\" + programme.getImage());\r\n            if (imageFile.exists()) {\r\n                imagePreview.setImage(new Image(imageFile.toURI().toString()));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane xmlns=\"http://javafx.com/javafx\"\r\n            xmlns:fx=\"http://javafx.com/fxml\"\r\n            fx:controller=\"controllers.Programme.AjouterProgramme\"\r\n            prefHeight=\"700.0\" prefWidth=\"550.0\"\r\n            stylesheets=\"@style.css\"\r\n            styleClass=\"root-pane\">\r\n\r\n    <VBox alignment=\"TOP_CENTER\" spacing=\"15\" AnchorPane.topAnchor=\"20\" AnchorPane.leftAnchor=\"20\" AnchorPane.rightAnchor=\"20\">\r\n        <Label text=\"Ajouter un programme\" styleClass=\"title\"/>\r\n\r\n        <HBox spacing=\"10\">\r\n            <TextField fx:id=\"tfTitre\" promptText=\"Titre\" prefWidth=\"200\" styleClass=\"text-field\"/>\r\n            <TextField fx:id=\"tfAuteur\" promptText=\"Auteur\" prefWidth=\"200\" styleClass=\"text-field\"/>\r\n        </HBox>\r\n\r\n        <TextField fx:id=\"tfVideoUrl\" promptText=\"Vidéo (URL)\" prefWidth=\"420\" styleClass=\"text-field\"/>\r\n\r\n        <ComboBox fx:id=\"cbType\" promptText=\"Type\" prefWidth=\"420\" styleClass=\"combo-box\"/>\r\n\r\n        <HBox spacing=\"10\">\r\n            <TextField fx:id=\"tfImagePath\" promptText=\"Image sélectionnée...\" editable=\"false\" prefWidth=\"320\" styleClass=\"text-field\"/>\r\n            <Button fx:id=\"btnChoisirImage\" text=\"Parcourir...\" onAction=\"#handleChoisirImage\" styleClass=\"btn-secondary\"/>\r\n        </HBox>\r\n\r\n        <TextArea fx:id=\"taDescription\" promptText=\"Description\" prefWidth=\"420\" prefHeight=\"100\" wrapText=\"true\" styleClass=\"text-area\"/>\r\n\r\n        <ImageView fx:id=\"imagePreview\" fitWidth=\"150\" fitHeight=\"150\" styleClass=\"image-preview\"/>\r\n\r\n        <Button fx:id=\"btnAjouter\" text=\"Ajouter\" onAction=\"#handleAjouter\" styleClass=\"btn-primary\"/>\r\n    </VBox>\r\n</AnchorPane>\r\n\r\n\r\n\r\n\r\n\r\n */\r\n\r\npackage controllers.Programme;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.scene.control.Alert.AlertType;\r\nimport models.Programme;\r\nimport services.ProgrammeService;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.util.UUID;\r\n\r\npublic class AjouterProgramme {\r\n\r\n    @FXML private TextField tfTitre;\r\n    @FXML private TextField tfAuteur;\r\n    @FXML private TextField tfVideoUrl;\r\n    @FXML private ComboBox<String> cbType;\r\n    @FXML private TextField tfImagePath;\r\n    @FXML private Button btnChoisirImage;\r\n    @FXML private TextArea taDescription;\r\n    @FXML private ImageView imagePreview;\r\n    @FXML private Button btnAjouter;\r\n\r\n    // Labels d'erreur\r\n    @FXML private Label titreErrorLabel;\r\n    @FXML private Label auteurErrorLabel;\r\n    @FXML private Label typeErrorLabel;\r\n    @FXML private Label descriptionErrorLabel;\r\n\r\n    private ProgrammeService programmeService = new ProgrammeService();\r\n    private Programme programmeEnCours = null;\r\n\r\n    private File selectedFile;\r\n    private String imageName = \"\";\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        cbType.getItems().addAll(\"Régime\", \"Cohérence cardiaque\", \"Arrêt du tabac\", \"Santé Mentale\");\r\n\r\n        // Masquer les erreurs au démarrage\r\n        resetErrorLabels();\r\n    }\r\n\r\n    @FXML\r\n    private void handleChoisirImage() {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.setTitle(\"Choisir une image\");\r\n        fileChooser.getExtensionFilters().addAll(\r\n                new FileChooser.ExtensionFilter(\"Images\", \"*.png\", \"*.jpg\", \"*.jpeg\", \"*.gif\")\r\n        );\r\n\r\n        selectedFile = fileChooser.showOpenDialog(btnChoisirImage.getScene().getWindow());\r\n\r\n        if (selectedFile != null) {\r\n            imageName = UUID.randomUUID().toString().replaceAll(\"-\", \"\") + getFileExtension(selectedFile.getName());\r\n            tfImagePath.setText(selectedFile.getAbsolutePath());\r\n\r\n            Image image = new Image(selectedFile.toURI().toString());\r\n            imagePreview.setImage(image);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleAjouter() {\r\n        resetErrorLabels();\r\n        if (!validateFields()) return;\r\n\r\n        Programme programme = (programmeEnCours == null) ? new Programme() : programmeEnCours;\r\n        programme.setTitre(tfTitre.getText());\r\n        programme.setAuteur(tfAuteur.getText());\r\n        programme.setType(cbType.getValue());\r\n        programme.setVideoUrl(tfVideoUrl.getText());\r\n        programme.setDescription(taDescription.getText());\r\n\r\n        try {\r\n            if (selectedFile != null) {\r\n                File destDir = new File(getProjectResourceImagePath());\r\n                if (!destDir.exists()) destDir.mkdirs();\r\n\r\n                File destFile = new File(destDir, imageName);\r\n                Files.copy(selectedFile.toPath(), destFile.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);\r\n\r\n                programme.setImage(imageName);\r\n            }\r\n\r\n            if (programmeEnCours == null) {\r\n                programmeService.ajouterProgramme(programme);\r\n                showAlert(AlertType.INFORMATION, \"Succès\", \"Programme ajouté avec succès !\");\r\n            } else {\r\n                programmeService.updateProgramme(programme);\r\n                showAlert(AlertType.INFORMATION, \"Succès\", \"Programme mis à jour avec succès !\");\r\n            }\r\n\r\n            clearForm();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            showAlert(AlertType.ERROR, \"Erreur\", \"Erreur lors de la copie de l'image : \" + e.getMessage());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            showAlert(AlertType.ERROR, \"Erreur\", \"Erreur lors de l'enregistrement : \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private boolean validateFields() {\r\n        boolean isValid = true;\r\n\r\n        if (tfTitre.getText().trim().isEmpty()) {\r\n            titreErrorLabel.setText(\"Le titre est requis.\");\r\n            titreErrorLabel.setVisible(true);\r\n            isValid = false;\r\n        }\r\n\r\n        if (tfAuteur.getText().trim().isEmpty()) {\r\n            auteurErrorLabel.setText(\"L'auteur est requis.\");\r\n            auteurErrorLabel.setVisible(true);\r\n            isValid = false;\r\n        }\r\n\r\n        if (cbType.getValue() == null) {\r\n            typeErrorLabel.setText(\"Le type est requis.\");\r\n            typeErrorLabel.setVisible(true);\r\n            isValid = false;\r\n        }\r\n\r\n        if (taDescription.getText().trim().isEmpty()) {\r\n            descriptionErrorLabel.setText(\"La description est requise.\");\r\n            descriptionErrorLabel.setVisible(true);\r\n            isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    private void resetErrorLabels() {\r\n        titreErrorLabel.setVisible(false);\r\n        auteurErrorLabel.setVisible(false);\r\n        typeErrorLabel.setVisible(false);\r\n        descriptionErrorLabel.setVisible(false);\r\n    }\r\n\r\n    private String getFileExtension(String fileName) {\r\n        int index = fileName.lastIndexOf('.');\r\n        return (index > 0) ? fileName.substring(index) : \".png\";\r\n    }\r\n\r\n    private String getProjectResourceImagePath() {\r\n        return System.getProperty(\"user.dir\") + \"/src/main/resources/images\";\r\n    }\r\n\r\n    private void showAlert(AlertType type, String title, String message) {\r\n        Alert alert = new Alert(type);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n\r\n    private void clearForm() {\r\n        tfTitre.clear();\r\n        tfAuteur.clear();\r\n        tfVideoUrl.clear();\r\n        cbType.setValue(null);\r\n        tfImagePath.clear();\r\n        taDescription.clear();\r\n        imagePreview.setImage(null);\r\n        selectedFile = null;\r\n        imageName = \"\";\r\n        programmeEnCours = null;\r\n        resetErrorLabels();\r\n    }\r\n\r\n    public void setProgrammeToEdit(Programme programme) {\r\n        if (programme != null) {\r\n            this.programmeEnCours = programme;\r\n\r\n            tfTitre.setText(programme.getTitre());\r\n            tfAuteur.setText(programme.getAuteur());\r\n            tfVideoUrl.setText(programme.getVideoUrl());\r\n            cbType.setValue(programme.getType());\r\n            tfImagePath.setText(programme.getImage());\r\n            taDescription.setText(programme.getDescription());\r\n\r\n            File imageFile = new File(getProjectResourceImagePath() + \"/\" + programme.getImage());\r\n            if (imageFile.exists()) {\r\n                imagePreview.setImage(new Image(imageFile.toURI().toString()));\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Programme/AjouterProgramme.java b/src/main/java/controllers/Programme/AjouterProgramme.java
--- a/src/main/java/controllers/Programme/AjouterProgramme.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/Programme/AjouterProgramme.java	(date 1745889331341)
@@ -214,13 +214,16 @@
 package controllers.Programme;
 
 import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
 import javafx.scene.control.*;
 import javafx.scene.image.ImageView;
 import javafx.scene.image.Image;
+import javafx.scene.layout.AnchorPane;
 import javafx.stage.FileChooser;
 import javafx.scene.control.Alert.AlertType;
+import models.MailerSMTPService;
 import models.Programme;
-import services.ProgrammeService;
+import services.Programme.ProgrammeService;
 
 import java.io.File;
 import java.io.IOException;
@@ -278,6 +281,9 @@
         }
     }
 
+    @FXML
+    private AnchorPane mainPane; // C'est le conteneur principal (tu peux l'appeler comme tu veux)
+
     @FXML
     private void handleAjouter() {
         resetErrorLabels();
@@ -303,6 +309,17 @@
 
             if (programmeEnCours == null) {
                 programmeService.ajouterProgramme(programme);
+
+                // ✉️ ENVOI DE MAIL ICI
+                String sujet = "Nouveau programme ajouté";
+                String contenu = "Un programme a été ajouté avec les détails suivants :\n"
+                        + "Titre : " + programme.getTitre() + "\n"
+                        + "Auteur : " + programme.getAuteur() + "\n"
+                        + "Type : " + programme.getType() + "\n"
+                        + "Description : " + programme.getDescription();
+
+                MailerSMTPService.sendEmailSMTP(sujet, contenu);
+
                 showAlert(AlertType.INFORMATION, "Succès", "Programme ajouté avec succès !");
             } else {
                 programmeService.updateProgramme(programme);
@@ -311,6 +328,11 @@
 
             clearForm();
 
+            // ➡️ Charger la vue AfficherProgramme.fxml dans mainPane
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/Programme/AfficherProgramme.fxml"));
+            AnchorPane afficherProgrammePane = loader.load();
+            mainPane.getChildren().setAll(afficherProgrammePane);
+
         } catch (IOException e) {
             e.printStackTrace();
             showAlert(AlertType.ERROR, "Erreur", "Erreur lors de la copie de l'image : " + e.getMessage());
@@ -320,6 +342,7 @@
         }
     }
 
+
     private boolean validateFields() {
         boolean isValid = true;
 
Index: src/main/resources/AfficherProgramme.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/AfficherProgramme.fxml b/src/main/resources/AfficherProgramme.fxml
deleted file mode 100644
--- a/src/main/resources/AfficherProgramme.fxml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.VBox?>
-<?import javafx.geometry.Insets?>
-
-<AnchorPane xmlns="http://javafx.com/javafx"
-            xmlns:fx="http://javafx.com/fxml"
-            fx:controller="controllers.Programme.AfficherProgramme"
-            prefWidth="800" prefHeight="600">
-    <children>
-        <VBox spacing="15" AnchorPane.topAnchor="10" AnchorPane.leftAnchor="10" AnchorPane.rightAnchor="10">
-            <padding>
-                <Insets top="10" right="10" bottom="10" left="10" />
-            </padding>
-            <children>
-                <Label text="🌟 Liste des Programmes"
-                       style="-fx-font-size: 26px; -fx-font-weight: bold; -fx-text-fill: #2c3e50;"/>
-                <ScrollPane fitToWidth="true" prefHeight="550">
-                    <content>
-                        <VBox fx:id="programmeListContainer" spacing="20">
-                            <padding>
-                                <Insets top="10" right="10" bottom="10" left="10"/>
-                            </padding>
-                        </VBox>
-                    </content>
-                </ScrollPane>
-            </children>
-        </VBox>
-    </children>
-</AnchorPane>
-
-
-
-
-
Index: src/main/resources/AjouterProgramme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/AjouterProgramme.java b/src/main/resources/AjouterProgramme.java
deleted file mode 100644
--- a/src/main/resources/AjouterProgramme.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,179 +0,0 @@
-package controllers.Programme;
-
-import javafx.fxml.FXML;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Scene;
-import javafx.scene.control.*;
-import javafx.scene.image.ImageView;
-import javafx.scene.image.Image;
-import javafx.stage.FileChooser;
-import javafx.stage.Stage;
-import javafx.scene.control.Alert.AlertType;
-import models.Programme;
-import services.ProgrammeService;
-
-import java.io.File;
-import java.io.IOException;
-import java.nio.file.Files;
-import java.util.UUID;
-
-public class AjouterProgramme {
-
-    @FXML private TextField tfTitre;
-    @FXML private TextField tfAuteur;
-    @FXML private TextField tfVideoUrl;
-    @FXML private ComboBox<String> cbType;
-    @FXML private TextField tfImagePath;
-    @FXML private Button btnChoisirImage;
-    @FXML private TextArea taDescription;
-    @FXML private ImageView imagePreview;
-    @FXML private Button btnAjouter;
-    @FXML private Button btnRetourListe; // ✅ Nouveau bouton
-
-    private ProgrammeService programmeService = new ProgrammeService();
-    private Programme programmeEnCours = null;
-
-    private File selectedFile;
-    private String imageName = "";
-
-    @FXML
-    private void initialize() {
-        cbType.getItems().addAll("Régime", "Cohérence cardiaque", "Arrêt du tabac", "Santé Mentale");
-    }
-
-    @FXML
-    private void handleChoisirImage() {
-        FileChooser fileChooser = new FileChooser();
-        fileChooser.setTitle("Choisir une image");
-        fileChooser.getExtensionFilters().addAll(
-                new FileChooser.ExtensionFilter("Images", "*.png", "*.jpg", "*.jpeg", "*.gif")
-        );
-
-        selectedFile = fileChooser.showOpenDialog(btnChoisirImage.getScene().getWindow());
-
-        if (selectedFile != null) {
-            imageName = UUID.randomUUID().toString().replaceAll("-", "") + getFileExtension(selectedFile.getName());
-            tfImagePath.setText(selectedFile.getAbsolutePath());
-
-            Image image = new Image(selectedFile.toURI().toString());
-            imagePreview.setImage(image);
-        }
-    }
-
-    @FXML
-    private void handleAjouter() {
-        if (!validateFields()) return;
-
-        Programme programme = (programmeEnCours == null) ? new Programme() : programmeEnCours;
-        programme.setTitre(tfTitre.getText());
-        programme.setAuteur(tfAuteur.getText());
-        programme.setType(cbType.getValue());
-        programme.setVideoUrl(tfVideoUrl.getText());
-        programme.setDescription(taDescription.getText());
-
-        try {
-            if (selectedFile != null) {
-                File destDir = new File(getProjectResourceImagePath());
-                if (!destDir.exists()) destDir.mkdirs();
-
-                File destFile = new File(destDir, imageName);
-                Files.copy(selectedFile.toPath(), destFile.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);
-
-                programme.setImage(imageName);
-            }
-
-            if (programmeEnCours == null) {
-                programmeService.ajouterProgramme(programme);
-                showAlert(AlertType.INFORMATION, "Succès", "Programme ajouté avec succès !");
-            } else {
-                programmeService.updateProgramme(programme);
-                showAlert(AlertType.INFORMATION, "Succès", "Programme mis à jour avec succès !");
-            }
-
-            clearForm();
-
-        } catch (IOException e) {
-            e.printStackTrace();
-            showAlert(AlertType.ERROR, "Erreur", "Erreur lors de la copie de l'image : " + e.getMessage());
-        } catch (Exception e) {
-            e.printStackTrace();
-            showAlert(AlertType.ERROR, "Erreur", "Erreur lors de l'enregistrement : " + e.getMessage());
-        }
-    }
-
-    @FXML
-    private void handleRetourListe() {
-        try {
-            FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/AfficherProgramme.fxml")); // Modifie le chemin selon ton projet
-            Scene scene = new Scene(loader.load());
-            Stage stage = (Stage) btnRetourListe.getScene().getWindow();
-            stage.setScene(scene);
-        } catch (IOException e) {
-            e.printStackTrace();
-            showAlert(AlertType.ERROR, "Erreur", "Impossible de charger la liste des programmes.");
-        }
-    }
-
-    private boolean validateFields() {
-        StringBuilder errors = new StringBuilder();
-
-        if (tfTitre.getText().isEmpty()) errors.append("- Le titre est requis.\n");
-        if (tfAuteur.getText().isEmpty()) errors.append("- L'auteur est requis.\n");
-        if (cbType.getValue() == null) errors.append("- Le type est requis.\n");
-        if (taDescription.getText().isEmpty()) errors.append("- La description est requise.\n");
-
-        if (errors.length() > 0) {
-            showAlert(AlertType.ERROR, "Erreur de validation", errors.toString());
-            return false;
-        }
-        return true;
-    }
-
-    private String getFileExtension(String fileName) {
-        int index = fileName.lastIndexOf('.');
-        return (index > 0) ? fileName.substring(index) : ".png";
-    }
-
-    private String getProjectResourceImagePath() {
-        return System.getProperty("user.dir") + "/src/main/resources/images";
-    }
-
-    private void showAlert(AlertType type, String title, String message) {
-        Alert alert = new Alert(type);
-        alert.setTitle(title);
-        alert.setHeaderText(null);
-        alert.setContentText(message);
-        alert.showAndWait();
-    }
-
-    private void clearForm() {
-        tfTitre.clear();
-        tfAuteur.clear();
-        tfVideoUrl.clear();
-        cbType.setValue(null);
-        tfImagePath.clear();
-        taDescription.clear();
-        imagePreview.setImage(null);
-        selectedFile = null;
-        imageName = "";
-        programmeEnCours = null;
-    }
-
-    public void setProgrammeToEdit(Programme programme) {
-        if (programme != null) {
-            this.programmeEnCours = programme;
-
-            tfTitre.setText(programme.getTitre());
-            tfAuteur.setText(programme.getAuteur());
-            tfVideoUrl.setText(programme.getVideoUrl());
-            cbType.setValue(programme.getType());
-            tfImagePath.setText(programme.getImage());
-            taDescription.setText(programme.getDescription());
-
-            File imageFile = new File(getProjectResourceImagePath() + "/" + programme.getImage());
-            if (imageFile.exists()) {
-                imagePreview.setImage(new Image(imageFile.toURI().toString()));
-            }
-        }
-    }
-}
Index: src/main/java/services/IProgrammeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/services/IProgrammeService.java b/src/main/java/services/IProgrammeService.java
deleted file mode 100644
--- a/src/main/java/services/IProgrammeService.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,15 +0,0 @@
-package services;
-
-import models.Programme;
-
-import java.sql.SQLException;
-import java.util.List;
-
-public interface IProgrammeService {
-    void ajouterProgramme(Programme programme) throws SQLException;
-    List<Programme> getAllProgrammes() throws SQLException;
-    Programme getProgrammeById(int id) throws SQLException;
-    void updateProgramme(Programme programme) throws SQLException;
-    void deleteProgramme(int id) throws SQLException;
-
-}
Index: src/main/resources/AjouterProgramme.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/AjouterProgramme.fxml b/src/main/resources/AjouterProgramme.fxml
deleted file mode 100644
--- a/src/main/resources/AjouterProgramme.fxml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.*?>
-<?import javafx.scene.image.ImageView?>
-<?import javafx.scene.layout.*?>
-<?import javafx.scene.text.Font?>
-
-
-
-<AnchorPane xmlns="http://javafx.com/javafx"
-            xmlns:fx="http://javafx.com/fxml"
-            fx:controller="controllers.Programme.AjouterProgramme"
-            prefHeight="700.0" prefWidth="550.0"
-            stylesheets="@style.css"
-            styleClass="root-pane">
-
-    <VBox alignment="TOP_CENTER" spacing="10" AnchorPane.topAnchor="20" AnchorPane.leftAnchor="20" AnchorPane.rightAnchor="20">
-
-        <Label text="Ajouter un programme" styleClass="title"/>
-
-        <VBox spacing="5">
-            <HBox spacing="10">
-                <TextField fx:id="tfTitre" promptText="Titre" prefWidth="200" styleClass="text-field"/>
-                <TextField fx:id="tfAuteur" promptText="Auteur" prefWidth="200" styleClass="text-field"/>
-            </HBox>
-            <HBox spacing="10">
-                <Label fx:id="titreErrorLabel" textFill="red" visible="false"/>
-                <Label fx:id="auteurErrorLabel" textFill="red" visible="false"/>
-            </HBox>
-        </VBox>
-
-        <TextField fx:id="tfVideoUrl" promptText="Vidéo (URL)" prefWidth="420" styleClass="text-field"/>
-
-        <VBox spacing="3">
-            <ComboBox fx:id="cbType" promptText="Type" prefWidth="420" styleClass="combo-box"/>
-            <Label fx:id="typeErrorLabel" textFill="red" visible="false"/>
-        </VBox>
-
-        <HBox spacing="10">
-            <TextField fx:id="tfImagePath" promptText="Image sélectionnée..." editable="false" prefWidth="320" styleClass="text-field"/>
-            <Button fx:id="btnChoisirImage" text="Parcourir..." onAction="#handleChoisirImage" styleClass="btn-secondary"/>
-        </HBox>
-
-        <VBox spacing="3">
-            <TextArea fx:id="taDescription" promptText="Description" prefWidth="420" prefHeight="100" wrapText="true" styleClass="text-area"/>
-            <Label fx:id="descriptionErrorLabel" textFill="red" visible="false"/>
-        </VBox>
-
-        <ImageView fx:id="imagePreview" fitWidth="150" fitHeight="150" styleClass="image-preview"/>
-
-        <Button fx:id="btnAjouter" text="Ajouter" onAction="#handleAjouter" styleClass="btn-primary">
-            <VBox.margin>
-                <Insets top="-10"/>
-            </VBox.margin>
-        </Button>
-    </VBox>
-</AnchorPane>
Index: src/main/resources/AfficherProgrammeFront.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/AfficherProgrammeFront.fxml b/src/main/resources/AfficherProgrammeFront.fxml
deleted file mode 100644
--- a/src/main/resources/AfficherProgrammeFront.fxml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.ComboBox?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.FlowPane?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.VBox?>
-
-<AnchorPane xmlns="http://javafx.com/javafx"
-            xmlns:fx="http://javafx.com/fxml"
-            fx:controller="controllers.Programme.AfficherProgrammeFront"
-            prefWidth="800" prefHeight="600">
-    <children>
-        <VBox spacing="15" AnchorPane.topAnchor="10" AnchorPane.leftAnchor="10" AnchorPane.rightAnchor="10">
-            <padding>
-                <Insets top="10" right="10" bottom="10" left="10" />
-            </padding>
-            <children>
-                <!-- Titre principal -->
-                <Label text="🌿 Nos Programmes Santé"
-                       style="-fx-font-size: 26px; -fx-font-weight: bold; -fx-text-fill: #2c3e50;" />
-
-                <!-- Barre de recherche et filtre -->
-                <HBox spacing="12">
-                    <TextField fx:id="searchField" promptText="🔍 Rechercher un programme..."
-                               styleClass="search-field" HBox.hgrow="ALWAYS"/>
-                    <ComboBox fx:id="filterComboBox" promptText="🧩 Filtrer par type..."
-                              styleClass="search-field combo-box" prefWidth="220"/>
-                </HBox>
-
-                <!-- Liste des programmes -->
-                <ScrollPane fitToWidth="true" prefHeight="550">
-                    <content>
-                        <FlowPane fx:id="programmeListContainer"
-                                  hgap="20" vgap="20"
-                                  prefWrapLength="800"
-                                  style="-fx-background-color: transparent;">
-                            <padding>
-                                <Insets top="10" right="10" bottom="10" left="10"/>
-                            </padding>
-                        </FlowPane>
-                    </content>
-                </ScrollPane>
-            </children>
-        </VBox>
-    </children>
-</AnchorPane>
\ No newline at end of file
Index: src/main/java/services/ProgrammeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/services/ProgrammeService.java b/src/main/java/services/ProgrammeService.java
deleted file mode 100644
--- a/src/main/java/services/ProgrammeService.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,123 +0,0 @@
-package services;
-
-
-import models.Programme;
-import utils.MaConnexion;
-
-import java.sql.*;
-import java.util.ArrayList;
-import java.util.List;
-
-public class ProgrammeService implements IProgrammeService {
-
-    private Connection getConnection() throws SQLException {
-        return MaConnexion.getInstance().getConnection();
-    }
-
-    @Override
-    public void ajouterProgramme(Programme programme) throws SQLException {
-        String query = "INSERT INTO programmes (titre, type, video_url, image, auteur, description) " +
-                "VALUES (?, ?, ?, ?, ?, ?)";
-
-        try (Connection conn = getConnection();
-             PreparedStatement pstmt = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS)) {
-
-            pstmt.setString(1, programme.getTitre());
-            pstmt.setString(2, programme.getType());
-            pstmt.setString(3, programme.getVideoUrl());
-            pstmt.setString(4, programme.getImage());
-            pstmt.setString(5, programme.getAuteur());
-            pstmt.setString(6, programme.getDescription());
-
-            pstmt.executeUpdate();
-
-            try (ResultSet generatedKeys = pstmt.getGeneratedKeys()) {
-                if (generatedKeys.next()) {
-                    programme.setId(generatedKeys.getInt(1));
-                }
-            }
-        }
-    }
-
-    @Override
-    public List<Programme> getAllProgrammes() throws SQLException {
-        List<Programme> programmes = new ArrayList<>();
-        String query = "SELECT * FROM programmes";
-
-        try (Connection conn = getConnection();
-             Statement stmt = conn.createStatement();
-             ResultSet rs = stmt.executeQuery(query)) {
-
-            while (rs.next()) {
-                Programme p = new Programme();
-                p.setId(rs.getInt("id"));
-                p.setTitre(rs.getString("titre"));
-                p.setType(rs.getString("type"));
-                p.setVideoUrl(rs.getString("video_url"));
-                p.setImage(rs.getString("image"));
-                p.setAuteur(rs.getString("auteur"));
-                p.setDescription(rs.getString("description"));
-
-                programmes.add(p);
-            }
-        }
-        return programmes;
-    }
-
-    @Override
-    public Programme getProgrammeById(int id) throws SQLException {
-        String query = "SELECT * FROM programmes WHERE id = ?";
-        Programme programme = null;
-
-        try (Connection conn = getConnection();
-             PreparedStatement pstmt = conn.prepareStatement(query)) {
-
-            pstmt.setInt(1, id);
-            try (ResultSet rs = pstmt.executeQuery()) {
-                if (rs.next()) {
-                    programme = new Programme();
-                    programme.setId(rs.getInt("id"));
-                    programme.setTitre(rs.getString("titre"));
-                    programme.setType(rs.getString("type"));
-                    programme.setVideoUrl(rs.getString("video_url"));
-                    programme.setImage(rs.getString("image"));
-                    programme.setAuteur(rs.getString("auteur"));
-                    programme.setDescription(rs.getString("description"));
-                }
-            }
-        }
-        return programme;
-    }
-
-    @Override
-    public void updateProgramme(Programme programme) throws SQLException {
-        String query = "UPDATE programmes SET titre = ?, type = ?, video_url = ?, image = ?, auteur = ?, description = ? WHERE id = ?";
-
-        try (Connection conn = getConnection();
-             PreparedStatement pstmt = conn.prepareStatement(query)) {
-
-            pstmt.setString(1, programme.getTitre());
-            pstmt.setString(2, programme.getType());
-            pstmt.setString(3, programme.getVideoUrl());
-            pstmt.setString(4, programme.getImage());
-            pstmt.setString(5, programme.getAuteur());
-            pstmt.setString(6, programme.getDescription());
-            pstmt.setInt(7, programme.getId());
-
-            pstmt.executeUpdate();
-        }
-    }
-
-    @Override
-    public void deleteProgramme(int id) throws SQLException {
-        String query = "DELETE FROM programmes WHERE id = ?";
-
-        try (Connection conn = getConnection();
-             PreparedStatement pstmt = conn.prepareStatement(query)) {
-
-            pstmt.setInt(1, id);
-            pstmt.executeUpdate();
-        }
-    }
-}
-
Index: src/main/resources/DetailsProgramme.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/DetailsProgramme.fxml b/src/main/resources/DetailsProgramme.fxml
deleted file mode 100644
--- a/src/main/resources/DetailsProgramme.fxml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,116 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.image.ImageView?>
-<?import javafx.scene.layout.ColumnConstraints?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.RowConstraints?>
-<?import javafx.scene.layout.VBox?>
-<?import javafx.scene.layout.GridPane?>
-
-<ScrollPane xmlns="http://javafx.com/javafx"
-            xmlns:fx="http://javafx.com/fxml"
-            fitToWidth="true"
-            fx:controller="controllers.Programme.DetailsProgramme">
-
-    <content>
-        <!-- Conteneur principal -->
-        <VBox fx:id="rootPane"
-              spacing="20"
-              alignment="TOP_CENTER"
-              styleClass="background">
-
-            <!-- Marges internes du ScrollPane / VBox -->
-            <padding>
-                <Insets top="30" right="40" bottom="30" left="40"/>
-            </padding>
-
-            <!-- Un titre général (facultatif) -->
-            <Label text="📋 Détails du Programme" styleClass="header"/>
-
-            <!-- Conteneur horizontal principal pour séparer : à gauche les infos, à droite l'image -->
-            <HBox alignment="CENTER" spacing="40">
-
-                <!-- Colonne de gauche : infos et bouton "Commencer le programme" -->
-                <VBox alignment="TOP_LEFT" spacing="20" maxWidth="400">
-
-                    <!-- GridPane contenant Titre, Type, Auteur, Description, Vidéo URL -->
-                    <GridPane hgap="15" vgap="12" styleClass="info-grid">
-                        <columnConstraints>
-                            <ColumnConstraints minWidth="100" halignment="RIGHT"/>
-                            <ColumnConstraints minWidth="200"/>
-                        </columnConstraints>
-
-                        <Label text="🎓 Titre :" styleClass="label-title" GridPane.rowIndex="0" GridPane.columnIndex="0"/>
-                        <Label fx:id="lblTitre" styleClass="label-value" GridPane.rowIndex="0" GridPane.columnIndex="1"/>
-
-                        <Label text="📂 Type :" styleClass="label-title" GridPane.rowIndex="1" GridPane.columnIndex="0"/>
-                        <Label fx:id="lblType" styleClass="label-value" GridPane.rowIndex="1" GridPane.columnIndex="1"/>
-
-                        <Label text="🧑 Auteur :" styleClass="label-title" GridPane.rowIndex="2" GridPane.columnIndex="0"/>
-                        <Label fx:id="lblAuteur" styleClass="label-value" GridPane.rowIndex="2" GridPane.columnIndex="1"/>
-
-                        <Label text="📄 Description :" styleClass="label-title" GridPane.rowIndex="3" GridPane.columnIndex="0"/>
-                        <TextArea fx:id="lblDescription"
-                                  wrapText="true"
-                                  editable="false"
-                                  prefRowCount="4"
-                                  maxWidth="200"
-                                  styleClass="description"
-                                  GridPane.rowIndex="3"
-                                  GridPane.columnIndex="1"/>
-
-                        <Label text="🎬 Vidéo URL :" styleClass="label-title" GridPane.rowIndex="4" GridPane.columnIndex="0"/>
-                        <Label fx:id="lblVideoUrl"
-                               wrapText="true"
-                               maxWidth="200"
-                               styleClass="label-value link-label"
-                               GridPane.rowIndex="4"
-                               GridPane.columnIndex="1"/>
-                    </GridPane>
-
-                    <!-- Bouton "Commencer le programme" (remplace "Read More") -->
-                    <Button fx:id="btnCommencerProgramme"
-                            text="Commencer le programme"
-                            styleClass="start-button"
-                            maxWidth="200"/>
-
-                </VBox>
-
-                <!-- Colonne de droite : l'image du programme -->
-                <ImageView fx:id="imgProgramme"
-                           fitHeight="250"
-                           fitWidth="250"
-                           preserveRatio="true"
-                           styleClass="image-preview"/>
-            </HBox>
-
-            <!-- Bloc pour les commentaires (Titre + zone de saisie + liste des commentaires) -->
-            <VBox spacing="15" alignment="CENTER_LEFT" maxWidth="600">
-
-                <!-- Titre de la section commentaire -->
-                <Label text="💬 Ajouter un commentaire :" styleClass="label-title"/>
-
-                <!-- Zone de texte + bouton d’envoi -->
-                <TextArea fx:id="txtCommentaire"
-                          promptText="Écrivez votre commentaire ici..."
-                          prefRowCount="3"
-                          maxWidth="600"
-                          wrapText="true"/>
-                <Button fx:id="btnEnvoyerCommentaire"
-                        text="Envoyer le commentaire"
-                        maxWidth="200"
-                        styleClass="submit-button"/>
-
-                <!-- Label au-dessus de la liste des commentaires -->
-                <Label text="🗨️ Commentaires :" styleClass="label-title"/>
-                <VBox fx:id="commentaireContainer" spacing="15" maxWidth="600" alignment="TOP_LEFT"/>
-            </VBox>
-
-        </VBox>
-    </content>
-</ScrollPane>
Index: src/main/resources/details_style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/details_style.css b/src/main/resources/details_style.css
deleted file mode 100644
--- a/src/main/resources/details_style.css	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,175 +0,0 @@
-/* Arrière-plan général */
-.background {
-    -fx-background-color: linear-gradient(to bottom right, #f0f0f0, #ffffff);
-}
-
-/* En-tête principal */
-.header {
-    -fx-font-size: 26px;
-    -fx-font-weight: bold;
-    -fx-text-fill: #34495e;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.2), 2, 0.5, 0, 1);
-    -fx-padding: 0 0 20 0; /* Espace sous le titre */
-}
-
-/* Image + ombre portée */
-.image-preview {
-    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 10, 0, 0, 5);
-    -fx-border-radius: 10;
-    -fx-background-radius: 10;
-    -fx-cursor: hand;
-    -fx-scale-x: 1;
-    -fx-scale-y: 1;
-    -fx-transition: all 0.3s ease;
-}
-
-.image-preview:hover {
-    -fx-scale-x: 1.05;
-    -fx-scale-y: 1.05;
-}
-
-/* Grille d'informations */
-.info-grid {
-    -fx-background-color: #ffffff;
-    -fx-padding: 20;
-    -fx-background-radius: 12;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 5, 0.3, 0, 2);
-}
-
-.label-title {
-    -fx-font-weight: bold;
-    -fx-text-fill: #2c3e50;
-}
-
-.label-value {
-    -fx-text-fill: #34495e;
-    -fx-font-size: 14px;
-}
-
-/* Zone de texte descriptive */
-.description {
-    -fx-control-inner-background: #ecf0f1;
-    -fx-background-insets: 0;
-    -fx-font-size: 13px;
-    -fx-padding: 8;
-    -fx-border-color: #bdc3c7;
-    -fx-border-radius: 5;
-    -fx-background-radius: 5;
-}
-
-/* Liens dynamiques */
-.link-label:hover {
-    -fx-text-fill: #2980b9;
-    -fx-underline: true;
-    -fx-cursor: hand;
-}
-
-
-.action-button {
-    -fx-background-color: #3498db;
-    -fx-text-fill: white;
-    -fx-font-weight: bold;
-    -fx-padding: 8 15;
-    -fx-background-radius: 5;
-    -fx-cursor: hand;
-}
-
-.action-button:hover {
-    -fx-background-color: #2980b9;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.2), 5, 0.3, 0, 1);
-}
-
-/* Bouton "Commencer le programme" */
-.start-button {
-    -fx-background-color: #2ecc71;
-    -fx-text-fill: white;
-    -fx-font-weight: bold;
-    -fx-background-radius: 20;
-    -fx-padding: 10 20;
-    -fx-cursor: hand;
-    -fx-font-size: 14px;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 5, 0.1, 0, 2);
-    -fx-border-color: transparent;
-    -fx-transition: background-color 0.3s ease, transform 0.3s ease;
-}
-
-.start-button:hover {
-    -fx-background-color: #27ae60;
-    -fx-transform: scale(1.05);
-}
-
-.start-button:pressed {
-    -fx-background-color: #1e8449;
-    -fx-transform: scale(1.05);
-}
-
-/* === Boutons pour les commentaires === */
-.btn-utile {
-    -fx-background-color: #dff0d8;
-    -fx-text-fill: #3c763d;
-    -fx-font-weight: bold;
-    -fx-background-radius: 5;
-    -fx-padding: 5 12;
-    -fx-cursor: hand;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.05), 2, 0.1, 0, 1);
-    -fx-border-color: transparent;
-}
-
-.btn-utile:hover {
-    -fx-background-color: #c8e5bc;
-}
-
-.btn-signaler {
-    -fx-background-color: #fcf8e3;
-    -fx-text-fill: #8a6d3b;
-    -fx-font-weight: bold;
-    -fx-background-radius: 5;
-    -fx-padding: 5 12;
-    -fx-cursor: hand;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.05), 2, 0.1, 0, 1);
-    -fx-border-color: transparent;
-}
-
-.btn-signaler:hover {
-    -fx-background-color: #fbe9b7;
-}
-
-.btn-supprimer {
-    -fx-background-color: #f2dede;
-    -fx-text-fill: #a94442;
-    -fx-font-weight: bold;
-    -fx-background-radius: 5;
-    -fx-padding: 5 12;
-    -fx-cursor: hand;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.05), 2, 0.1, 0, 1);
-    -fx-border-color: transparent;
-}
-
-.btn-supprimer:hover {
-    -fx-background-color: #e4b9b9;
-}
-
-/* === Bouton "Envoyer le commentaire" === */
-.submit-button {
-    -fx-background-color: #3498db; /* Bleu */
-    -fx-text-fill: white;
-    -fx-font-weight: bold;
-    -fx-background-radius: 20;
-    -fx-padding: 10 20;
-    -fx-cursor: hand;
-    -fx-font-size: 14px;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 5, 0.1, 0, 2);
-    -fx-border-color: transparent;
-    -fx-transition: background-color 0.3s ease, transform 0.3s ease;
-}
-
-.submit-button:hover {
-    -fx-background-color: #2980b9;
-    -fx-transform: scale(1.05);
-}
-
-.submit-button:pressed {
-    -fx-background-color: #1f6fa3;
-    -fx-transform: scale(1.05);
-}
-
Index: src/main/resources/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/style.css b/src/main/resources/style.css
deleted file mode 100644
--- a/src/main/resources/style.css	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ /dev/null	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
@@ -1,110 +0,0 @@
-/* --- Root et Titre (inchangé, très bien comme ça) --- */
-.root-pane {
-    -fx-background-color: #fdfaf6;
-    -fx-padding: 30;
-    -fx-font-family: "Segoe UI", sans-serif;
-}
-
-.title {
-    -fx-font-size: 24px;
-    -fx-font-weight: bold;
-    -fx-text-fill: #2e2e2e;
-    -fx-padding: 10 0 20 0;
-}
-
-/* --- Champs de recherche et ComboBox améliorés --- */
-.search-field {
-    -fx-background-color: #ffffff;
-    -fx-border-color: #cccccc;
-    -fx-border-width: 1.5;
-    -fx-border-radius: 10;
-    -fx-background-radius: 10;
-    -fx-padding: 10;
-    -fx-font-size: 14px;
-    -fx-prompt-text-fill: #aaa;
-    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.03), 3, 0.3, 0, 1);
-}
-
-.search-field:focused {
-    -fx-border-color: #123f5c;
-    -fx-effect: dropshadow(gaussian, rgba(18, 63, 92, 0.2), 5, 0.3, 0, 2);
-}
-
-/* ComboBox esthétique */
-.combo-box {
-    -fx-background-radius: 10;
-    -fx-border-radius: 10;
-    -fx-padding: 10;
-    -fx-background-color: #ffffff;
-    -fx-border-color: #cccccc;
-    -fx-border-width: 1.5;
-    -fx-font-size: 14px;
-    -fx-prompt-text-fill: #aaa;
-}
-
-.combo-box:focused {
-    -fx-border-color: #123f5c;
-    -fx-effect: dropshadow(gaussian, rgba(18, 63, 92, 0.2), 5, 0.3, 0, 2);
-}
-
-.combo-box .arrow-button {
-    -fx-background-color: transparent;
-}
-
-/* Menu déroulant du ComboBox */
-.combo-box-popup .list-view {
-    -fx-background-color: #ffffff;
-    -fx-border-color: #cccccc;
-    -fx-border-width: 1;
-    -fx-background-radius: 8;
-    -fx-padding: 5;
-}
-
-/* Champs texte, Combo et TextArea généraux (déjà très bien) */
-.text-field, .combo-box, .text-area {
-    -fx-background-radius: 8;
-    -fx-border-radius: 8;
-    -fx-padding: 10;
-    -fx-background-color: #ffffff;
-    -fx-border-color: #cccccc;
-    -fx-border-width: 1;
-}
-
-.text-field:hover, .combo-box:hover, .text-area:hover {
-    -fx-border-color: #999999;
-}
-
-/* --- Boutons --- */
-.btn-primary {
-    -fx-background-color: #0a1f2c;
-    -fx-text-fill: white;
-    -fx-font-weight: bold;
-    -fx-padding: 10 25;
-    -fx-background-radius: 10;
-    -fx-cursor: hand;
-    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.15), 5, 0.3, 0, 3);
-}
-
-.btn-primary:hover {
-    -fx-background-color: #123f5c;
-}
-
-.btn-secondary {
-    -fx-background-color: #d9d9d9;
-    -fx-text-fill: #333;
-    -fx-font-weight: bold;
-    -fx-background-radius: 8;
-    -fx-padding: 6 12;
-    -fx-cursor: hand;
-}
-
-.btn-secondary:hover {
-    -fx-background-color: #c0c0c0;
-}
-
-/* --- Image Preview --- */
-.image-preview {
-    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 10, 0.3, 0, 5);
-    -fx-border-radius: 8;
-    -fx-background-radius: 8;
-}
Index: src/main/java/controllers/user/userlistcontroller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.user;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.control.ListView;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ButtonType;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.Priority;\r\nimport javafx.stage.Stage;\r\nimport models.User;\r\nimport services.user.*;\r\nimport utils.session;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class userlistcontroller implements Initializable {\r\n\r\n    public Label users_list;\r\n    @FXML\r\n    private ListView<User> usersListView;\r\n\r\n    @FXML\r\n    private Button deleteUserButton;\r\n\r\n    @FXML\r\n    private Button updateUserButton;\r\n\r\n    private userlist userService;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        userService = new userlist();\r\n\r\n        createColumnHeaders();\r\n\r\n        usersListView.setCellFactory(listView -> new UserListCell());\r\n\r\n        loadUsers();\r\n\r\n        deleteUserButton.setDisable(true);\r\n        updateUserButton.setDisable(true);\r\n\r\n        usersListView.getSelectionModel().selectedItemProperty().addListener((obs, oldSelection, newSelection) -> {\r\n            // Enable or disable buttons based on selection\r\n            boolean hasSelection = (newSelection != null);\r\n            deleteUserButton.setDisable(!hasSelection);\r\n            updateUserButton.setDisable(!hasSelection);\r\n        });\r\n    }\r\n\r\n    private void createColumnHeaders() {\r\n        // Create header HBox\r\n        HBox headerBox = new HBox();\r\n        headerBox.setStyle(\"-fx-padding: 5px; -fx-background-color: #f0f0f0; -fx-border-color: #ccc; -fx-border-width: 0 0 1 0;\");\r\n\r\n        // ID column - fixed width\r\n        Label idLabel = new Label(\"ID\");\r\n        idLabel.setPrefWidth(50);\r\n        idLabel.setStyle(\"-fx-font-weight: bold;\");\r\n\r\n        // Name column\r\n        Label nameLabel = new Label(\"Name\");\r\n        nameLabel.setPrefWidth(120);\r\n        nameLabel.setStyle(\"-fx-font-weight: bold;\");\r\n\r\n        // Email column\r\n        Label emailLabel = new Label(\"Email\");\r\n        emailLabel.setMaxWidth(Double.MAX_VALUE);\r\n        emailLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        HBox.setHgrow(emailLabel, Priority.ALWAYS);\r\n\r\n        // Role column - fixed width\r\n        Label roleLabel = new Label(\"Role\");\r\n        roleLabel.setPrefWidth(100);\r\n        roleLabel.setStyle(\"-fx-font-weight: bold;\");\r\n\r\n        // Add columns to header\r\n        headerBox.getChildren().addAll(idLabel, nameLabel, emailLabel, roleLabel);\r\n\r\n        // Add header to parent container (VBox that contains ListView)\r\n        VBox parent = (VBox) usersListView.getParent();\r\n        parent.getChildren().add(0, headerBox);\r\n    }\r\n\r\n    @FXML\r\n    private void handleLogout() {\r\n        // Clear the current session\r\n        session.clearSession();\r\n\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/user/sign_in.fxml\"));\r\n            Parent root = loader.load();\r\n\r\n            // Get the current stage from any UI element\r\n            Stage stage = (Stage) usersListView.getScene().getWindow();\r\n\r\n            // Set the new scene (sign in) on the same stage\r\n            stage.setTitle(\"Sign In\");\r\n            stage.setScene(new Scene(root));\r\n            stage.show();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    // Custom ListCell that displays User data in columns\r\n    private class UserListCell extends javafx.scene.control.ListCell<User> {\r\n        private final HBox content;\r\n        private final Label idLabel;\r\n        private final Label nameLabel;\r\n        private final Label emailLabel;\r\n        private final Label roleLabel;\r\n\r\n        public UserListCell() {\r\n            content = new HBox();\r\n            content.setStyle(\"-fx-padding: 5px;\");\r\n\r\n            // ID column - fixed width\r\n            idLabel = new Label();\r\n            idLabel.setPrefWidth(50);\r\n\r\n            // Name column\r\n            nameLabel = new Label();\r\n            nameLabel.setPrefWidth(120);\r\n\r\n            // Email column - variable width\r\n            emailLabel = new Label();\r\n            emailLabel.setMaxWidth(Double.MAX_VALUE);\r\n            HBox.setHgrow(emailLabel, Priority.ALWAYS);\r\n\r\n            // Role column - fixed width\r\n            roleLabel = new Label();\r\n            roleLabel.setPrefWidth(100);\r\n\r\n            content.getChildren().addAll(idLabel, nameLabel, emailLabel, roleLabel);\r\n        }\r\n\r\n        @Override\r\n        protected void updateItem(User user, boolean empty) {\r\n            super.updateItem(user, empty);\r\n\r\n            if (empty || user == null) {\r\n                setGraphic(null);\r\n            } else {\r\n                idLabel.setText(String.valueOf(user.getId()));\r\n                nameLabel.setText(user.getName() + \" \" + user.getPrename());\r\n                emailLabel.setText(user.getEmail());\r\n                roleLabel.setText(user.getRole());\r\n\r\n                // Add alternating row colors for better readability\r\n                if (getIndex() % 2 == 0) {\r\n                    content.setStyle(\"-fx-padding: 5px; -fx-background-color: #f9f9f9;\");\r\n                } else {\r\n                    content.setStyle(\"-fx-padding: 5px; -fx-background-color: white;\");\r\n                }\r\n\r\n                setGraphic(content);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Method to load users into the ListView\r\n    void loadUsers() {\r\n        try {\r\n            List<User> users = userService.getAllUsers();\r\n            ObservableList<User> usersList = FXCollections.observableArrayList(users);\r\n            usersListView.setItems(usersList);\r\n        } catch (Exception e) {\r\n            showAlert(Alert.AlertType.ERROR, \"Error loading users: \" + e.getMessage());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleDeleteUser(ActionEvent event) {\r\n        User selectedUser = usersListView.getSelectionModel().getSelectedItem();\r\n        if (selectedUser == null) {\r\n            showAlert(Alert.AlertType.WARNING, \"Please select a user to delete.\");\r\n            return;\r\n        }\r\n\r\n        Alert confirmAlert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        confirmAlert.setTitle(\"Confirm Delete\");\r\n        confirmAlert.setHeaderText(\"Delete User\");\r\n        confirmAlert.setContentText(\"Are you sure you want to delete \" +\r\n                selectedUser.getName() + \" \" +\r\n                selectedUser.getPrename() + \"?\");\r\n\r\n        confirmAlert.showAndWait().ifPresent(response -> {\r\n            if (response == ButtonType.OK) {\r\n                try {\r\n                    // Call service to delete user\r\n                    userService.deleteUser(selectedUser.getId());\r\n\r\n                    // Refresh the list\r\n                    loadUsers();\r\n\r\n                    showAlert(Alert.AlertType.INFORMATION, \"User deleted successfully!\");\r\n                } catch (Exception e) {\r\n                    showAlert(Alert.AlertType.ERROR, \"Error deleting user: \" + e.getMessage());\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Method to handle update user button click\r\n    @FXML\r\n    private void handleUpdateUser(ActionEvent event) {\r\n        User selectedUser = usersListView.getSelectionModel().getSelectedItem();\r\n        if (selectedUser == null) {\r\n            showAlert(Alert.AlertType.WARNING, \"Please select a user to update.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/user/update_user.fxml\"));\r\n            AnchorPane updatePane = loader.load();\r\n\r\n            // Get the controller and pass the selected user\r\n            UpdateUserController controller = loader.getController();\r\n            controller.setUser(selectedUser);\r\n\r\n            // Create a new scene for the update form\r\n            Scene scene = new Scene(updatePane);\r\n\r\n            // Get the current stage and set the scene to the update form\r\n            Stage stage = (Stage) usersListView.getScene().getWindow();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Update User\");\r\n\r\n        } catch (IOException e) {\r\n            showAlert(Alert.AlertType.ERROR, \"Error navigating to update user form: \" + e.getMessage());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    // Method to navigate to the \"Add User\" form\r\n    @FXML\r\n    private void navigateToAddUserForm(ActionEvent event) {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/user/sign_up.fxml\"));\r\n            AnchorPane signUpPane = loader.load();\r\n            Scene scene = new Scene(signUpPane);\r\n            Stage stage = (Stage) usersListView.getScene().getWindow();\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Sign Up - Add User\");\r\n        } catch (IOException e) {\r\n            showAlert(Alert.AlertType.ERROR, \"Error navigating to add user form: \" + e.getMessage());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    // Method to display alerts\r\n    private void showAlert(Alert.AlertType type, String message) {\r\n        Alert alert = new Alert(type);\r\n        alert.setTitle(type.toString());\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/user/userlistcontroller.java b/src/main/java/controllers/user/userlistcontroller.java
--- a/src/main/java/controllers/user/userlistcontroller.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/user/userlistcontroller.java	(date 1745455567020)
@@ -5,25 +5,21 @@
 import javafx.fxml.FXML;
 import javafx.fxml.Initializable;
 import javafx.scene.Parent;
-import javafx.scene.control.ListView;
-import javafx.scene.control.Alert;
-import javafx.scene.control.Button;
-import javafx.scene.control.ButtonType;
+import javafx.scene.control.*;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Scene;
-import javafx.scene.layout.AnchorPane;
-import javafx.scene.layout.HBox;
-import javafx.scene.layout.VBox;
-import javafx.scene.control.Label;
-import javafx.scene.layout.Priority;
+import javafx.scene.layout.*;
 import javafx.stage.Stage;
 import models.User;
 import services.user.*;
 import utils.session;
-
+import javafx.scene.chart.PieChart;
+import java.util.Map;
+import java.util.stream.Collectors;
 import java.io.IOException;
 import java.net.URL;
+import services.user.log_historyService;
 import java.util.List;
 import java.util.ResourceBundle;
 
@@ -41,113 +37,309 @@
 
     private userlist userService;
 
+    @FXML
+    private TextField searchField;
+    @FXML
+    private ComboBox<String> roleFilter;
+    @FXML
+    private Button banUserButton;
+
+    private ObservableList<User> allUsers;
+    private ObservableList<User> filteredUsers;
+
+    //stats________________________
+    @FXML
+    private PieChart userStatsChart;
+    @FXML
+    private Label totalUsersLabel;
+    @FXML
+    private Label bannedUsersLabel;
+    @FXML
+    private GridPane statsGrid;
+
+
+    //stats function_____________________________
+    private void updateStats() {
+        // Calculer les stats par rôle
+        Map<String, Long> roleStats = allUsers.stream()
+                .collect(Collectors.groupingBy(
+                        User::getRole,
+                        Collectors.counting()
+                ));
+
+        // Mettre à jour le graphique
+        userStatsChart.getData().clear();
+        roleStats.forEach((role, count) -> {
+            PieChart.Data slice = new PieChart.Data(role + " (" + count + ")", count);
+            userStatsChart.getData().add(slice);
+        });
+
+        int totalUsers = allUsers.size();
+        long bannedUsers = allUsers.stream()
+                .filter(u -> u.getIsBanned().equals("1"))
+                .count();
+
+        // Mettre à jour les labels
+        totalUsersLabel.setText(String.valueOf(totalUsers));
+        bannedUsersLabel.setText(String.valueOf(bannedUsers));
+    }
+
+
+
     @Override
     public void initialize(URL location, ResourceBundle resources) {
         userService = new userlist();
 
+        // Initialize filtered list
+        allUsers = FXCollections.observableArrayList();
+        filteredUsers = FXCollections.observableArrayList();
+
+        // Setup role filter
+        roleFilter.getItems().addAll("client", "admin", "doctor", "Tous");
+        roleFilter.setValue("Tous");
+
+        // Setup search listener
+        searchField.textProperty().addListener((observable, oldValue, newValue) -> {
+            filterUsers();
+        });
+
+        // Setup role filter listener
+        roleFilter.valueProperty().addListener((observable, oldValue, newValue) -> {
+            filterUsers();
+        });
+
+        // Create column headers and attach to ListView
+        // We'll fix the createColumnHeaders method to work with ScrollPane
         createColumnHeaders();
-
         usersListView.setCellFactory(listView -> new UserListCell());
-
         loadUsers();
 
         deleteUserButton.setDisable(true);
         updateUserButton.setDisable(true);
+        banUserButton.setDisable(true);
 
         usersListView.getSelectionModel().selectedItemProperty().addListener((obs, oldSelection, newSelection) -> {
-            // Enable or disable buttons based on selection
             boolean hasSelection = (newSelection != null);
             deleteUserButton.setDisable(!hasSelection);
             updateUserButton.setDisable(!hasSelection);
+            banUserButton.setDisable(!hasSelection);
+
+            if (hasSelection) {
+                banUserButton.setText(newSelection.getIsBanned().equals("1") ? "UNBAN" : "BAN");
+                banUserButton.setStyle(newSelection.getIsBanned().equals("1") ?
+                        "-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;" :
+                        "-fx-background-color: #ff9800; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;");
+            }
+        });
+    }
+
+    //ban user------------------------------------------
+    @FXML
+    private void handleBanUser(ActionEvent event) {
+        User selectedUser = usersListView.getSelectionModel().getSelectedItem();
+        if (selectedUser == null) {
+            showAlert(Alert.AlertType.WARNING, "Veuillez sélectionner un utilisateur.");
+            return;
+        }
+
+        boolean currentlyBanned = selectedUser.getIsBanned().equals("1");
+        String newStatus = currentlyBanned ? "0" : "1";
+        String action = currentlyBanned ? "débannir" : "bannir";
+
+        Alert confirmAlert = new Alert(Alert.AlertType.CONFIRMATION);
+        confirmAlert.setTitle("Confirmer " + action);
+        confirmAlert.setHeaderText("Voulez-vous " + action + " cet utilisateur ?");
+        confirmAlert.setContentText("Êtes-vous sûr de vouloir " + action + " " +
+                selectedUser.getName() + " " + selectedUser.getPrename() + " ?");
+
+        confirmAlert.showAndWait().ifPresent(response -> {
+            if (response == ButtonType.OK) {
+                try {
+                    selectedUser.setIsBanned(newStatus);
+                    userService.updateUser(selectedUser);
+
+                    // Mettre à jour l'interface
+                    banUserButton.setText(newStatus.equals("1") ? "UNBAN" : "BAN");
+                    banUserButton.setStyle(newStatus.equals("1") ?
+                            "-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold;" :
+                            "-fx-background-color: #ff9800; -fx-text-fill: white; -fx-font-weight: bold;");
+
+                    // Recharger la liste
+                    loadUsers();
+
+                    showAlert(Alert.AlertType.INFORMATION,
+                            "L'utilisateur a été " + (currentlyBanned ? "débanni" : "banni") + " avec succès !");
+                } catch (Exception e) {
+                    showAlert(Alert.AlertType.ERROR,
+                            "Erreur lors du " + action + " de l'utilisateur : " + e.getMessage());
+                    e.printStackTrace();
+                }
+            }
         });
     }
+
+
 
     private void createColumnHeaders() {
-        // Create header HBox
-        HBox headerBox = new HBox();
-        headerBox.setStyle("-fx-padding: 5px; -fx-background-color: #f0f0f0; -fx-border-color: #ccc; -fx-border-width: 0 0 1 0;");
+        try {
+            // Create header HBox
+            HBox headerBox = new HBox();
+            headerBox.setStyle("-fx-padding: 5px; -fx-background-color: #f0f0f0; -fx-border-color: #ccc; -fx-border-width: 0 0 1 0;");
 
-        // ID column - fixed width
-        Label idLabel = new Label("ID");
-        idLabel.setPrefWidth(50);
-        idLabel.setStyle("-fx-font-weight: bold;");
+            // ID column - fixed width
+            Label idLabel = new Label("ID");
+            idLabel.setPrefWidth(50);
+            idLabel.setStyle("-fx-font-weight: bold;");
 
-        // Name column
-        Label nameLabel = new Label("Name");
-        nameLabel.setPrefWidth(120);
-        nameLabel.setStyle("-fx-font-weight: bold;");
+            // Name column
+            Label nameLabel = new Label("Name");
+            nameLabel.setPrefWidth(120);
+            nameLabel.setStyle("-fx-font-weight: bold;");
 
-        // Email column
-        Label emailLabel = new Label("Email");
-        emailLabel.setMaxWidth(Double.MAX_VALUE);
-        emailLabel.setStyle("-fx-font-weight: bold;");
-        HBox.setHgrow(emailLabel, Priority.ALWAYS);
+            // Email column
+            Label emailLabel = new Label("Email");
+            emailLabel.setMaxWidth(Double.MAX_VALUE);
+            emailLabel.setStyle("-fx-font-weight: bold;");
+            HBox.setHgrow(emailLabel, Priority.ALWAYS);
 
-        // Role column - fixed width
-        Label roleLabel = new Label("Role");
-        roleLabel.setPrefWidth(100);
-        roleLabel.setStyle("-fx-font-weight: bold;");
+            // Role column - fixed width
+            Label roleLabel = new Label("Role");
+            roleLabel.setPrefWidth(100);
+            roleLabel.setStyle("-fx-font-weight: bold;");
 
-        // Add columns to header
-        headerBox.getChildren().addAll(idLabel, nameLabel, emailLabel, roleLabel);
+            // Status column
+            Label statusLabel = new Label("Status");
+            statusLabel.setPrefWidth(80);
+            statusLabel.setStyle("-fx-font-weight: bold;");
+
+            // Add columns to header
+            headerBox.getChildren().addAll(idLabel, nameLabel, emailLabel, roleLabel, statusLabel);
+
+            // With ScrollPane, we need to find the correct parent
+            // We need to get the direct parent of the ListView which should be a VBox inside the ScrollPane's content
+            Parent listViewParent = usersListView.getParent();
+
+            // If we're using the newly structured FXML, we need to find the VBox that contains the ListView
+            if (listViewParent instanceof VBox) {
+                // We're directly inside a VBox, we can add at index 0
+                ((VBox) listViewParent).getChildren().add(0, headerBox);
+            } else {
+                // Create a new container for both header and ListView
+                VBox container = new VBox();
+
+                // Get current parent of ListView
+                Pane currentParent = (Pane) usersListView.getParent();
+
+                // Get the index of ListView in its parent
+                int index = currentParent.getChildren().indexOf(usersListView);
 
-        // Add header to parent container (VBox that contains ListView)
-        VBox parent = (VBox) usersListView.getParent();
-        parent.getChildren().add(0, headerBox);
+                // Remove ListView from its current parent
+                currentParent.getChildren().remove(usersListView);
+
+                // Add header and ListView to container
+                container.getChildren().addAll(headerBox, usersListView);
+
+                // Add container back to parent at the same index
+                currentParent.getChildren().add(index, container);
+            }
+        } catch (Exception e) {
+            // Print detailed error for debugging
+            System.err.println("Error creating column headers: " + e.getMessage());
+            e.printStackTrace();
+        }
     }
 
     @FXML
     private void handleLogout() {
-        // Clear the current session
-        session.clearSession();
+        try {
+            // Récupérer l'utilisateur avant de vider la session
+            User currentUser = session.getCurrentUser();
+
+            // Créer une instance de log_historyService
+            log_historyService logService = new log_historyService();
+
+            // Ajouter le log de déconnexion
+            if (currentUser != null) {
+                String details = "User " + currentUser.getName() + " " + currentUser.getPrename() + " logged out";
+                logService.addLog(currentUser.getEmail(), "Logout", details);
+            }
+
+            // Vider la session
+            session.clearSession();
 
-        try {
+            // Redirection vers la page de connexion
             FXMLLoader loader = new FXMLLoader(getClass().getResource("/user/sign_in.fxml"));
             Parent root = loader.load();
 
-            // Get the current stage from any UI element
             Stage stage = (Stage) usersListView.getScene().getWindow();
-
-            // Set the new scene (sign in) on the same stage
             stage.setTitle("Sign In");
             stage.setScene(new Scene(root));
             stage.show();
 
         } catch (Exception e) {
+            showAlert(Alert.AlertType.ERROR, "Error during logout: " + e.getMessage());
             e.printStackTrace();
         }
     }
 
+    private void filterUsers() {
+        filteredUsers.clear();
+        String searchText = searchField.getText().toLowerCase().trim();
+        String selectedRole = roleFilter.getValue();
+
+        for (User user : allUsers) {
+            boolean matchesSearch = searchText.isEmpty() ||
+                    user.getName().toLowerCase().contains(searchText) ||
+                    user.getPrename().toLowerCase().contains(searchText);
+
+            boolean matchesRole = selectedRole.equals("Tous") ||
+                    selectedRole.equalsIgnoreCase(user.getRole());
+
+            if (matchesSearch && matchesRole) {
+                filteredUsers.add(user);
+            }
+        }
+
+        usersListView.setItems(filteredUsers);
+    }
+
+    @FXML
+    private void resetFilters() {
+        searchField.clear();
+        roleFilter.setValue("Tous");
+        usersListView.setItems(allUsers);
+    }
+
+
     // Custom ListCell that displays User data in columns
-    private class UserListCell extends javafx.scene.control.ListCell<User> {
+    private class UserListCell extends ListCell<User> {
         private final HBox content;
         private final Label idLabel;
         private final Label nameLabel;
         private final Label emailLabel;
         private final Label roleLabel;
+        private final Label banStatusLabel;  // Nouveau label
 
         public UserListCell() {
             content = new HBox();
             content.setStyle("-fx-padding: 5px;");
 
-            // ID column - fixed width
             idLabel = new Label();
             idLabel.setPrefWidth(50);
 
-            // Name column
             nameLabel = new Label();
             nameLabel.setPrefWidth(120);
 
-            // Email column - variable width
             emailLabel = new Label();
-            emailLabel.setMaxWidth(Double.MAX_VALUE);
-            HBox.setHgrow(emailLabel, Priority.ALWAYS);
+            emailLabel.setPrefWidth(200);
 
-            // Role column - fixed width
             roleLabel = new Label();
             roleLabel.setPrefWidth(100);
 
-            content.getChildren().addAll(idLabel, nameLabel, emailLabel, roleLabel);
+            banStatusLabel = new Label();  // Nouveau label pour le statut
+            banStatusLabel.setPrefWidth(80);
+
+            content.getChildren().addAll(idLabel, nameLabel, emailLabel, roleLabel, banStatusLabel);
         }
 
         @Override
@@ -162,7 +354,13 @@
                 emailLabel.setText(user.getEmail());
                 roleLabel.setText(user.getRole());
 
-                // Add alternating row colors for better readability
+                // Afficher le statut de bannissement
+                boolean isBanned = user.getIsBanned().equals("1");
+                banStatusLabel.setText(isBanned ? "BANNED" : "ACTIVE");
+                banStatusLabel.setStyle(isBanned ?
+                        "-fx-text-fill: #f44336; -fx-font-weight: bold;" :
+                        "-fx-text-fill: #4CAF50; -fx-font-weight: bold;");
+
                 if (getIndex() % 2 == 0) {
                     content.setStyle("-fx-padding: 5px; -fx-background-color: #f9f9f9;");
                 } else {
@@ -178,10 +376,12 @@
     void loadUsers() {
         try {
             List<User> users = userService.getAllUsers();
-            ObservableList<User> usersList = FXCollections.observableArrayList(users);
-            usersListView.setItems(usersList);
+            allUsers.setAll(users);
+            filteredUsers.setAll(users);
+            usersListView.setItems(filteredUsers);
+            updateStats();
         } catch (Exception e) {
-            showAlert(Alert.AlertType.ERROR, "Error loading users: " + e.getMessage());
+            showAlert(Alert.AlertType.ERROR, "Erreur lors du chargement des utilisateurs : " + e.getMessage());
             e.printStackTrace();
         }
     }
@@ -274,4 +474,35 @@
         alert.setContentText(message);
         alert.show();
     }
+
+    @FXML
+    private void handleBack(ActionEvent event) {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/User/dashboard.fxml"));
+            Scene dashboardScene = new Scene(loader.load());
+
+            Stage stage = (Stage) usersListView.getScene().getWindow();
+            stage.setScene(dashboardScene);
+            stage.show();
+        } catch (IOException e) {
+            showAlert(Alert.AlertType.ERROR, "Error returning to dashboard: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
+    @FXML
+    private void navigateToLogHistory(ActionEvent event) {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/User/log_history.fxml"));
+            Scene logHistoryScene = new Scene(loader.load());
+
+            Stage stage = (Stage) usersListView.getScene().getWindow();
+            stage.setScene(logHistoryScene);
+            stage.show();
+        } catch (IOException e) {
+            showAlert(Alert.AlertType.ERROR, "Error navigating to log history: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
 }
\ No newline at end of file
Index: src/main/java/controllers/Programme/AfficherProgramme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.Programme;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.Tooltip;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.geometry.Insets;\r\nimport models.Programme;\r\nimport services.ProgrammeService;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\n\r\nimport java.net.URL;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AfficherProgramme implements Initializable {\r\n\r\n    @FXML\r\n    private VBox programmeListContainer;  // Conteneur VBox dans le FXML pour afficher les programmes\r\n\r\n    private ProgrammeService programmeService = new ProgrammeService();\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle rb) {\r\n        try {\r\n            // Charger la liste des programmes depuis la base de données\r\n            List<Programme> programmes = programmeService.getAllProgrammes();\r\n\r\n            // Pour chaque programme, créer un HBox contenant ses informations et les boutons d'action\r\n            for (Programme p : programmes) {\r\n                // Créer un HBox pour le programme\r\n                HBox programmeBox = new HBox(20);\r\n                programmeBox.setStyle(\"-fx-background-color: #ecf0f1; -fx-background-radius: 10;\");\r\n                programmeBox.setPadding(new Insets(10));\r\n\r\n                // Créer le label affichant le titre, le type et l'auteur\r\n                Label programmeDetails = new Label(p.getTitre());\r\n                programmeDetails.setStyle(\"-fx-font-size: 16px; -fx-font-weight: bold;\");\r\n\r\n                // Créer les boutons d'action avec des emojis et tooltips\r\n                Button updateBtn = new Button(\"Modifier\");\r\n                updateBtn.setStyle(\"-fx-background-color: #f39c12; -fx-text-fill: white;\");\r\n                updateBtn.setTooltip(new Tooltip(\"Modifier\"));\r\n\r\n                Button deleteBtn = new Button(\"\uD83D\uDDD1Supprimer\");\r\n                deleteBtn.setStyle(\"-fx-background-color: #e74c3c; -fx-text-fill: white;\");\r\n                deleteBtn.setTooltip(new Tooltip(\"Supprimer\"));\r\n\r\n                Button detailBtn = new Button(\"Details\");\r\n                detailBtn.setStyle(\"-fx-background-color: #3498db; -fx-text-fill: white;\");\r\n                detailBtn.setTooltip(new Tooltip(\"Détails\"));\r\n\r\n\r\n                // Action du bouton supprimer :\r\n                deleteBtn.setOnAction(e -> {\r\n                    try {\r\n                        // Appeler la méthode du service pour supprimer le programme de la base de données\r\n                        programmeService.deleteProgramme(p.getId());\r\n                        // Supprimer l'élément visuellement dans l'interface\r\n                        programmeListContainer.getChildren().remove(programmeBox);\r\n                    } catch (SQLException ex) {\r\n                        System.err.println(\"Erreur lors de la suppression du programme : \" + ex.getMessage());\r\n                        ex.printStackTrace();\r\n                    }\r\n                });\r\n\r\n                //Action du bouton de modification\r\n                updateBtn.setOnAction(e -> {\r\n                    try {\r\n                        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/AjouterProgramme.fxml\"));\r\n                        Parent root = loader.load();\r\n\r\n                        AjouterProgramme controller = loader.getController();\r\n                        controller.setProgrammeToEdit(p); // Envoie le programme sélectionné\r\n\r\n                        Stage stage = new Stage();\r\n                        stage.setTitle(\"Modifier Programme\");\r\n                        stage.setScene(new Scene(root));\r\n                        stage.show();\r\n\r\n                    } catch (IOException ex) {\r\n                        System.err.println(\"Erreur lors de l'ouverture du formulaire de modification : \" + ex.getMessage());\r\n                        ex.printStackTrace();\r\n                    }\r\n                });\r\n\r\n\r\n                //Action du bouton details\r\n                detailBtn.setOnAction(e -> {\r\n                    try {\r\n                        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/DetailsProgramme.fxml\"));\r\n                        Parent root = loader.load();\r\n\r\n                        DetailsProgramme controller = loader.getController();\r\n                        controller.setProgrammeDetails(p); // Transfert des données\r\n\r\n                        Stage stage = new Stage();\r\n                        stage.setTitle(\"Détails du Programme\");\r\n                        stage.setScene(new Scene(root));\r\n                        stage.show();\r\n\r\n                    } catch (IOException ex) {\r\n                        System.err.println(\"Erreur lors de l'ouverture de la vue de détails : \" + ex.getMessage());\r\n                        ex.printStackTrace();\r\n                    }\r\n                });\r\n                // Ajouter le label et les boutons dans le HBox\r\n                programmeBox.getChildren().addAll(programmeDetails, updateBtn, deleteBtn, detailBtn);\r\n                // Ajouter le HBox au conteneur VBox\r\n                programmeListContainer.getChildren().add(programmeBox);\r\n            }\r\n\r\n        } catch (SQLException e) {\r\n            System.err.println(\"Erreur lors du chargement des programmes : \" + e.getMessage());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/Programme/AfficherProgramme.java b/src/main/java/controllers/Programme/AfficherProgramme.java
--- a/src/main/java/controllers/Programme/AfficherProgramme.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/Programme/AfficherProgramme.java	(date 1745467589352)
@@ -8,23 +8,27 @@
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.VBox;
 import javafx.geometry.Insets;
+import javafx.scene.layout.Priority; // Import manquant
 import models.Programme;
-import services.ProgrammeService;
+import services.Programme.ProgrammeService;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Parent;
 import javafx.scene.Scene;
 import javafx.stage.Stage;
 import java.io.IOException;
-
+import javafx.scene.control.Alert;
+import javafx.scene.control.Alert.AlertType;
+import javafx.scene.control.ButtonType; // Import manquant
 import java.net.URL;
 import java.sql.SQLException;
 import java.util.List;
+import java.util.Optional; // Import manquant
 import java.util.ResourceBundle;
 
 public class AfficherProgramme implements Initializable {
 
     @FXML
-    private VBox programmeListContainer;  // Conteneur VBox dans le FXML pour afficher les programmes
+    private VBox programmeListContainer; // Conteneur VBox dans le FXML pour afficher les programmes
 
     private ProgrammeService programmeService = new ProgrammeService();
 
@@ -36,46 +40,63 @@
 
             // Pour chaque programme, créer un HBox contenant ses informations et les boutons d'action
             for (Programme p : programmes) {
-                // Créer un HBox pour le programme
-                HBox programmeBox = new HBox(20);
-                programmeBox.setStyle("-fx-background-color: #ecf0f1; -fx-background-radius: 10;");
-                programmeBox.setPadding(new Insets(10));
+                HBox programmeBox = new HBox(15);
+                programmeBox.setStyle("-fx-background-color: white; -fx-background-radius: 8; -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 6, 0, 0, 2); -fx-padding: 15;");
 
-                // Créer le label affichant le titre, le type et l'auteur
-                Label programmeDetails = new Label(p.getTitre());
-                programmeDetails.setStyle("-fx-font-size: 16px; -fx-font-weight: bold;");
+                VBox detailsBox = new VBox(8);
+                detailsBox.setStyle("-fx-padding: 0;");
 
-                // Créer les boutons d'action avec des emojis et tooltips
-                Button updateBtn = new Button("Modifier");
-                updateBtn.setStyle("-fx-background-color: #f39c12; -fx-text-fill: white;");
-                updateBtn.setTooltip(new Tooltip("Modifier"));
+                Label titreLabel = new Label(p.getTitre());
+                titreLabel.setStyle("-fx-font-size: 18px; -fx-font-weight: bold; -fx-text-fill: #2c3e50;");
 
-                Button deleteBtn = new Button("🗑Supprimer");
-                deleteBtn.setStyle("-fx-background-color: #e74c3c; -fx-text-fill: white;");
-                deleteBtn.setTooltip(new Tooltip("Supprimer"));
+                Label descriptionLabel = new Label(p.getDescription());
+                descriptionLabel.setStyle("-fx-font-size: 14px; -fx-text-fill: #7f8c8d;");
+                descriptionLabel.setWrapText(true);
 
-                Button detailBtn = new Button("Details");
-                detailBtn.setStyle("-fx-background-color: #3498db; -fx-text-fill: white;");
-                detailBtn.setTooltip(new Tooltip("Détails"));
+                HBox infoBox = new HBox(15);
+                Label dureeLabel = new Label("⏱️ " + p.getAuteur() + " heures");
+                dureeLabel.setStyle("-fx-font-size: 12px; -fx-text-fill: #7f8c8d; -fx-opacity: 0.8;");
+                Label dateLabel = new Label("📅 Créé le " + p.getDescription());
+                dateLabel.setStyle("-fx-font-size: 12px; -fx-text-fill: #7f8c8d; -fx-opacity: 0.8;");
+                infoBox.getChildren().addAll(dureeLabel, dateLabel);
 
+                detailsBox.getChildren().addAll(titreLabel, descriptionLabel, infoBox);
 
-                // Action du bouton supprimer :
-                deleteBtn.setOnAction(e -> {
+                VBox actionsBox = new VBox(10);
+                actionsBox.setStyle("-fx-alignment: center;");
+
+                Button detailBtn = new Button("👁️");
+                detailBtn.setStyle("-fx-background-color: #2980b9; -fx-text-fill: white; -fx-background-radius: 20; -fx-min-width: 36px; -fx-min-height: 36px; -fx-cursor: hand;");
+                detailBtn.setOnAction(e -> {
                     try {
-                        // Appeler la méthode du service pour supprimer le programme de la base de données
-                        programmeService.deleteProgramme(p.getId());
-                        // Supprimer l'élément visuellement dans l'interface
-                        programmeListContainer.getChildren().remove(programmeBox);
-                    } catch (SQLException ex) {
-                        System.err.println("Erreur lors de la suppression du programme : " + ex.getMessage());
+                        FXMLLoader loader = new FXMLLoader(getClass().getResource("/Programme/DetailsProgramme.fxml"));
+                        Parent root = loader.load();
+
+                        DetailsProgramme controller = loader.getController();
+                        controller.setProgrammeDetails(p); // Transfert des données
+
+                        // Utiliser programmeListContainer pour récupérer le Stage actuel
+                        Stage currentStage = (Stage) programmeListContainer.getScene().getWindow();
+
+                        // Changer la scène du Stage existant
+                        currentStage.setScene(new Scene(root));
+                        currentStage.setTitle("Détails du Programme");
+                        currentStage.setFullScreen(true);
+                        currentStage.setFullScreenExitHint("");
+                        currentStage.show();
+
+                    } catch (IOException ex) {
+                        System.err.println("Erreur lors de l'ouverture de la vue de détails : " + ex.getMessage());
                         ex.printStackTrace();
                     }
                 });
 
-                //Action du bouton de modification
+
+                Button updateBtn = new Button("✏️");
+                updateBtn.setStyle("-fx-background-color: #3498db; -fx-text-fill: white; -fx-background-radius: 20; -fx-min-width: 36px; -fx-min-height: 36px; -fx-cursor: hand;");
                 updateBtn.setOnAction(e -> {
                     try {
-                        FXMLLoader loader = new FXMLLoader(getClass().getResource("/AjouterProgramme.fxml"));
+                        FXMLLoader loader = new FXMLLoader(getClass().getResource("/Programme/AjouterProgramme.fxml"));
                         Parent root = loader.load();
 
                         AjouterProgramme controller = loader.getController();
@@ -92,38 +113,80 @@
                     }
                 });
 
+                Button deleteBtn = new Button("🗑️");
+                deleteBtn.setStyle("-fx-background-color: #e74c3c; -fx-text-fill: white; -fx-background-radius: 20; -fx-min-width: 36px; -fx-min-height: 36px; -fx-cursor: hand;");
+                deleteBtn.setOnAction(e -> {
+                    try {
+                        programmeService.deleteProgramme(p.getId());
+                        programmeListContainer.getChildren().remove(programmeBox);
+                    } catch (SQLException ex) {
+                        ex.printStackTrace();
+                    }
+                });
+
+                actionsBox.getChildren().addAll(detailBtn, updateBtn, deleteBtn);
+
+                programmeBox.getChildren().addAll(detailsBox, actionsBox);
+                programmeListContainer.getChildren().add(programmeBox);
+            }
 
-                //Action du bouton details
-                detailBtn.setOnAction(e -> {
-                    try {
-                        FXMLLoader loader = new FXMLLoader(getClass().getResource("/DetailsProgramme.fxml"));
-                        Parent root = loader.load();
-
-                        DetailsProgramme controller = loader.getController();
-                        controller.setProgrammeDetails(p); // Transfert des données
-
-                        Stage stage = new Stage();
-                        stage.setTitle("Détails du Programme");
-                        stage.setScene(new Scene(root));
-                        stage.show();
+        } catch (SQLException e) {
+            System.err.println("Erreur lors du chargement des programmes : " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
+    @FXML
+    private void handleAjouterProgramme() {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/Programme/AjouterProgramme.fxml")); // Correction du chemin
+            Parent root = loader.load();
+            Stage stage = new Stage();
+            stage.setTitle("Ajouter un Programme");
+            stage.setScene(new Scene(root));
+            stage.show();
+        } catch (IOException e) {
+            System.err.println("Erreur lors de l'ouverture du formulaire d'ajout : " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
 
-                    } catch (IOException ex) {
-                        System.err.println("Erreur lors de l'ouverture de la vue de détails : " + ex.getMessage());
-                        ex.printStackTrace();
-                    }
-                });
-                // Ajouter le label et les boutons dans le HBox
-                programmeBox.getChildren().addAll(programmeDetails, updateBtn, deleteBtn, detailBtn);
-                // Ajouter le HBox au conteneur VBox
+    private void handleSupprimerProgramme(Programme programme) {
+        Alert confirmDialog = new Alert(Alert.AlertType.CONFIRMATION);
+        confirmDialog.setTitle("Confirmer la suppression");
+        confirmDialog.setHeaderText("Supprimer le programme");
+        confirmDialog.setContentText("Êtes-vous sûr de vouloir supprimer le programme \"" + programme.getTitre() + "\" ?");
+
+        Optional<ButtonType> result = confirmDialog.showAndWait();
+        if (result.isPresent() && result.get() == ButtonType.OK) {
+            try {
+                programmeService.deleteProgramme(programme.getId());
+                loadProgrammes();
+            } catch (SQLException e) {
+                System.err.println("Erreur lors de la suppression du programme : " + e.getMessage());
+                e.printStackTrace();
+            }
+        }
+    }
+
+    private void loadProgrammes() {
+        try {
+            List<Programme> programmes = programmeService.getAllProgrammes();
+            programmeListContainer.getChildren().clear();
+
+            for (Programme programme : programmes) {
+                HBox programmeBox = new HBox(20);
+                programmeBox.setStyle("-fx-background-color: #ecf0f1; -fx-background-radius: 10;");
+                programmeBox.setPadding(new Insets(10));
+
+                Label programmeDetails = new Label(programme.getTitre());
+                programmeDetails.setStyle("-fx-font-size: 16px; -fx-font-weight: bold;");
+
                 programmeListContainer.getChildren().add(programmeBox);
             }
-
         } catch (SQLException e) {
-            System.err.println("Erreur lors du chargement des programmes : " + e.getMessage());
+            System.err.println("Erreur lors du rechargement des programmes : " + e.getMessage());
             e.printStackTrace();
         }
     }
 }
-
-
-
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/.idea/misc.xml	(date 1745462008483)
@@ -8,5 +8,8 @@
       </list>
     </option>
   </component>
-
+  <component name="ProjectResources">
+    <resource url="http://javafx.com/fxml" location="$PROJECT_DIR$" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="22" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: src/main/resources/User/sign_in.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.geometry.Insets?>\r\n\r\n<AnchorPane xmlns=\"http://javafx.com/javafx\"\r\n            xmlns:fx=\"http://javafx.com/fxml\"\r\n            fx:controller=\"controllers.user.Sign_InController\"\r\n            prefHeight=\"500.0\" prefWidth=\"700.0\"\r\n            style=\"-fx-background-color: linear-gradient(to bottom right, #f5f7fa, #e9f5e9);\">\r\n\r\n    <!-- Decorative shape on the left side -->\r\n    <StackPane AnchorPane.leftAnchor=\"0\" AnchorPane.topAnchor=\"0\" AnchorPane.bottomAnchor=\"0\"\r\n               style=\"-fx-background-color: #4CAF50; -fx-background-radius: 0 20 20 0;\"\r\n               prefWidth=\"250\">\r\n        <VBox alignment=\"CENTER\" spacing=\"20\">\r\n            <ImageView fitWidth=\"150\" fitHeight=\"150\" preserveRatio=\"true\">\r\n                <Image url=\"@/images/app_logo.png\" />\r\n                <!-- You can replace with your actual logo path or remove if not available -->\r\n            </ImageView>\r\n            <Label text=\"Welcome Back\" style=\"-fx-text-fill: white; -fx-font-weight: bold;\">\r\n                <font>\r\n                    <Font name=\"System Bold\" size=\"22.0\" />\r\n                </font>\r\n            </Label>\r\n            <Label text=\"Please sign in to continue\" style=\"-fx-text-fill: white; -fx-font-style: italic;\">\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Label>\r\n        </VBox>\r\n    </StackPane>\r\n\r\n    <!-- Main content -->\r\n    <VBox spacing=\"20\" alignment=\"CENTER\"\r\n          AnchorPane.leftAnchor=\"280\" AnchorPane.rightAnchor=\"40\"\r\n          AnchorPane.topAnchor=\"60\" AnchorPane.bottomAnchor=\"60\">\r\n\r\n        <Text text=\"Sign In\" style=\"-fx-fill: #2e7d32;\">\r\n            <font>\r\n                <Font name=\"System Bold\" size=\"28.0\" />\r\n            </font>\r\n        </Text>\r\n\r\n        <Separator prefWidth=\"200\" style=\"-fx-background-color: #c8e6c9;\" />\r\n\r\n        <VBox spacing=\"25\" alignment=\"TOP_LEFT\" style=\"-fx-padding: 20 0 0 0;\">\r\n            <VBox spacing=\"5\">\r\n                <Label text=\"Email Address\" style=\"-fx-text-fill: #1b5e20; -fx-font-weight: bold;\">\r\n                    <font>\r\n                        <Font size=\"13.0\" />\r\n                    </font>\r\n                </Label>\r\n                <TextField fx:id=\"emailField\" promptText=\"Enter your email\"\r\n                           style=\"-fx-background-radius: 5; -fx-border-radius: 5; -fx-border-color: #a5d6a7; -fx-border-width: 1; -fx-padding: 10 15; -fx-background-color: white;\">\r\n                    <font>\r\n                        <Font size=\"13.0\" />\r\n                    </font>\r\n                </TextField>\r\n            </VBox>\r\n\r\n            <VBox spacing=\"5\">\r\n                <Label text=\"Password\" style=\"-fx-text-fill: #1b5e20; -fx-font-weight: bold;\">\r\n                    <font>\r\n                        <Font size=\"13.0\" />\r\n                    </font>\r\n                </Label>\r\n                <PasswordField fx:id=\"passwordField\" promptText=\"Enter your password\"\r\n                               style=\"-fx-background-radius: 5; -fx-border-radius: 5; -fx-border-color: #a5d6a7; -fx-border-width: 1; -fx-padding: 10 15; -fx-background-color: white;\">\r\n                    <font>\r\n                        <Font size=\"13.0\" />\r\n                    </font>\r\n                </PasswordField>\r\n            </VBox>\r\n\r\n            <HBox alignment=\"CENTER_RIGHT\">\r\n                <Hyperlink text=\"Forgot password?\" style=\"-fx-text-fill: #66bb6a; -fx-border-color: transparent;\">\r\n                    <font>\r\n                        <Font size=\"12.0\" />\r\n                    </font>\r\n                </Hyperlink>\r\n            </HBox>\r\n\r\n            <Button text=\"LOGIN\" onAction=\"#handleLogin\" maxWidth=\"Infinity\"\r\n                    style=\"-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 12 15; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 5, 0, 0, 1);\">\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n\r\n            <HBox alignment=\"CENTER\" style=\"-fx-padding: 15 0 0 0;\">\r\n                <Label text=\"Don't have an account? \" style=\"-fx-text-fill: #424242;\">\r\n                    <font>\r\n                        <Font size=\"13.0\" />\r\n                    </font>\r\n                </Label>\r\n                <Hyperlink text=\"Sign Up\" onAction=\"#goToSignUp\" style=\"-fx-text-fill: #4CAF50; -fx-border-color: transparent; -fx-font-weight: bold;\">\r\n                    <font>\r\n                        <Font size=\"13.0\" />\r\n                    </font>\r\n                </Hyperlink>\r\n            </HBox>\r\n        </VBox>\r\n    </VBox>\r\n</AnchorPane>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/User/sign_in.fxml b/src/main/resources/User/sign_in.fxml
--- a/src/main/resources/User/sign_in.fxml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/resources/User/sign_in.fxml	(date 1745455570796)
@@ -90,6 +90,16 @@
                     <Font size="14.0" />
                 </font>
             </Button>
+            <Button text="Sign in with Google"
+                    onAction="#handleGoogleSignIn"
+                    maxWidth="Infinity"
+                    style="-fx-background-color: #4285f4; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 12 15;">
+                <graphic>
+                    <ImageView fitHeight="20" fitWidth="20">
+                        <Image url="@/images/google_logo.png"/>
+                    </ImageView>
+                </graphic>
+            </Button>
 
             <HBox alignment="CENTER" style="-fx-padding: 15 0 0 0;">
                 <Label text="Don't have an account? " style="-fx-text-fill: #424242;">
Index: src/main/java/models/LogEntry.java
===================================================================
diff --git a/src/main/java/models/LogEntry.java b/src/main/java/models/LogEntry.java
new file mode 100644
--- /dev/null	(date 1745455567238)
+++ b/src/main/java/models/LogEntry.java	(date 1745455567238)
@@ -0,0 +1,30 @@
+package models;
+
+import javafx.beans.property.SimpleStringProperty;
+import javafx.beans.property.StringProperty;
+
+public class LogEntry {
+    private final StringProperty date;
+    private final StringProperty user;
+    private final StringProperty action;
+    private final StringProperty details;
+
+    public LogEntry(String date, String user, String action, String details) {
+        this.date = new SimpleStringProperty(date);
+        this.user = new SimpleStringProperty(user);
+        this.action = new SimpleStringProperty(action);
+        this.details = new SimpleStringProperty(details);
+    }
+
+    // Getters for properties
+    public StringProperty dateProperty() { return date; }
+    public StringProperty userProperty() { return user; }
+    public StringProperty actionProperty() { return action; }
+    public StringProperty detailsProperty() { return details; }
+
+    // Getters for values
+    public String getDate() { return date.get(); }
+    public String getUser() { return user.get(); }
+    public String getAction() { return action.get(); }
+    public String getDetails() { return details.get(); }
+}
\ No newline at end of file
Index: src/main/java/controllers/user/Sign_InController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.user;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\nimport models.User;\r\nimport services.user.SignInService;\r\nimport utils.session;\r\n\r\nimport java.awt.event.ActionEvent;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class Sign_InController {\r\n\r\n    @FXML\r\n    private TextField emailField;\r\n\r\n    @FXML\r\n    private PasswordField passwordField;\r\n\r\n    @FXML\r\n    private void handleLogin() {\r\n        String email = emailField.getText();\r\n        String password = passwordField.getText();\r\n\r\n        if (email.isEmpty() || password.isEmpty()) {\r\n            showAlert(Alert.AlertType.ERROR, \"Please enter both email and password.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            SignInService service = new SignInService();\r\n            User user = service.authenticate(email, password);\r\n\r\n            if (user != null) {\r\n                session.setCurrentUser(user);\r\n\r\n                String fxmlPath;\r\n                String title;\r\n\r\n                if (user.getRole().equalsIgnoreCase(\"admin\")) {\r\n                    fxmlPath = \"/user/users_list.fxml\";\r\n                    title = \"Admin Dashboard\";\r\n                } else {\r\n                    fxmlPath = \"/user/welcome.fxml\";\r\n                    title = \"Welcome\";\r\n                }\r\n\r\n                FXMLLoader loader = new FXMLLoader(getClass().getResource(fxmlPath));\r\n                Parent root = loader.load();\r\n                Stage stage = (Stage) emailField.getScene().getWindow();\r\n                stage.setScene(new Scene(root));\r\n                stage.setTitle(title);\r\n                stage.show();\r\n\r\n            } else {\r\n                showAlert(Alert.AlertType.ERROR, \"Invalid email or password.\");\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            showAlert(Alert.AlertType.ERROR, \"Login failed due to a system error.\");\r\n        }\r\n    }\r\n\r\n\r\n    private void showAlert(Alert.AlertType type, String message) {\r\n        Alert alert = new Alert(type);\r\n        alert.setContentText(message);\r\n        alert.show();\r\n    }\r\n\r\n    public void goToSignUp(javafx.event.ActionEvent actionEvent) {\r\n        try {\r\n            // Load the sign-up FXML\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/user/sign_up.fxml\"));\r\n            Parent root = loader.load();\r\n\r\n            // Get the current stage from the event\r\n            Stage stage = (Stage) ((Node) actionEvent.getSource()).getScene().getWindow();\r\n\r\n            // Set the new scene\r\n            stage.setScene(new Scene(root));\r\n            stage.setTitle(\"Sign Up\");\r\n            stage.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace(); // You can log this or show an alert\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/user/Sign_InController.java b/src/main/java/controllers/user/Sign_InController.java
--- a/src/main/java/controllers/user/Sign_InController.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/user/Sign_InController.java	(date 1745455566928)
@@ -1,5 +1,7 @@
 package controllers.user;
 
+import com.sun.net.httpserver.HttpServer;
+import javafx.application.Platform;
 import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 import javafx.fxml.Initializable;
@@ -9,14 +11,17 @@
 import javafx.scene.control.Alert;
 import javafx.scene.control.PasswordField;
 import javafx.scene.control.TextField;
+import javafx.scene.control.TextInputDialog;
 import javafx.stage.Stage;
 import models.User;
 import services.user.SignInService;
+import services.user.log_historyService;
 import utils.session;
-
-import java.awt.event.ActionEvent;
+import services.user.GoogleAuthService;
 import java.io.IOException;
+import java.net.InetSocketAddress;
 
+import javafx.event.ActionEvent;
 
 public class Sign_InController {
 
@@ -26,13 +31,79 @@
     @FXML
     private PasswordField passwordField;
 
+
+    @FXML
+    private void handleGoogleSignIn() {
+        try {
+            GoogleAuthService googleAuth = new GoogleAuthService();
+            String authCode = googleAuth.getAuthorizationCode();
+
+            // Authentifier l'utilisateur avec le code
+            User user = googleAuth.authenticateWithGoogle(authCode);
+            handleGoogleAuthSuccess(user);
+
+        } catch (Exception e) {
+            showAlert(Alert.AlertType.ERROR, "Erreur lors de l'authentification Google : " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
+    private void handleGoogleAuthSuccess(User user) {
+        if (user == null) {
+            showAlert(Alert.AlertType.ERROR, "Échec de l'authentification Google");
+            return;
+        }
+
+        try {
+            session.setCurrentUser(user);
+
+            // Vérifier si l'utilisateur est banni
+            if (user.getIsBanned() != null && user.getIsBanned().equals("1")) {
+                loadScene("/user/banned.fxml", "Compte Banni");
+                return;
+            }
+
+            // Rediriger en fonction du rôle
+            String fxmlPath;
+            String title;
+
+            if ("admin".equalsIgnoreCase(user.getRole())) {
+                fxmlPath = "/user/dashboard.fxml";
+                title = "Dashboard";
+            } else {
+                fxmlPath = "/user/welcome.fxml";
+                title = "Welcome";
+            }
+
+            loadScene(fxmlPath, title);
+
+        } catch (Exception e) {
+            showAlert(Alert.AlertType.ERROR, "Erreur lors de la redirection : " + e.getMessage());
+        }
+    }
+
+    private void loadScene(String fxmlPath, String title) throws IOException {
+        Platform.runLater(() -> {
+            try {
+                FXMLLoader loader = new FXMLLoader(getClass().getResource(fxmlPath));
+                Parent root = loader.load();
+                Stage stage = (Stage) emailField.getScene().getWindow();
+                stage.setScene(new Scene(root));
+                stage.setTitle(title);
+                stage.show();
+            } catch (IOException e) {
+                showAlert(Alert.AlertType.ERROR, "Erreur lors du chargement de la page : " + e.getMessage());
+            }
+        });
+    }
+
     @FXML
     private void handleLogin() {
         String email = emailField.getText();
         String password = passwordField.getText();
 
         if (email.isEmpty() || password.isEmpty()) {
-            showAlert(Alert.AlertType.ERROR, "Please enter both email and password.");
+            showAlert(Alert.AlertType.ERROR, "Veuillez saisir l'email et le mot de passe.");
             return;
         }
 
@@ -43,16 +114,22 @@
             if (user != null) {
                 session.setCurrentUser(user);
 
+                // Vérifier si l'utilisateur est banni
+                if (user.getIsBanned() != null && user.getIsBanned().equals("1")) {
+                    FXMLLoader loader = new FXMLLoader(getClass().getResource("/User/banned.fxml"));
+                    Parent root = loader.load();
+                    Stage stage = (Stage) emailField.getScene().getWindow();
+                    stage.setScene(new Scene(root));
+                    stage.setTitle("Compte Banni");
+                    stage.show();
+                    return;
+                }
+
                 String fxmlPath;
                 String title;
 
-                if (user.getRole().equalsIgnoreCase("admin")) {
-                    fxmlPath = "/user/users_list.fxml";
-                    title = "Admin Dashboard";
-                } else {
-                    fxmlPath = "/user/welcome.fxml";
-                    title = "Welcome";
-                }
+                fxmlPath = "/user/welcome.fxml";
+                title = "Welcome";
 
                 FXMLLoader loader = new FXMLLoader(getClass().getResource(fxmlPath));
                 Parent root = loader.load();
@@ -62,12 +139,12 @@
                 stage.show();
 
             } else {
-                showAlert(Alert.AlertType.ERROR, "Invalid email or password.");
+                showAlert(Alert.AlertType.ERROR, "Email ou mot de passe incorrect.");
             }
 
         } catch (Exception e) {
             e.printStackTrace();
-            showAlert(Alert.AlertType.ERROR, "Login failed due to a system error.");
+            showAlert(Alert.AlertType.ERROR, "Erreur système lors de la connexion.");
         }
     }
 
Index: src/main/java/controllers/user/welcome.css
===================================================================
diff --git a/src/main/java/controllers/user/welcome.css b/src/main/java/controllers/user/welcome.css
new file mode 100644
--- /dev/null	(date 1745470356476)
+++ b/src/main/java/controllers/user/welcome.css	(date 1745470356476)
@@ -0,0 +1,114 @@
+/* Styles globaux */
+.root {
+    -fx-font-family: 'Segoe UI', system-ui, sans-serif;
+}
+
+/* Sidebar */
+.sidebar {
+    -fx-background-color: linear-gradient(to bottom, #1a237e, #283593);
+    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.4), 10, 0, 0, 0);
+}
+
+.sidebar-logo {
+    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.3), 10, 0, 0, 2);
+}
+
+.sidebar-button {
+    -fx-background-color: transparent;
+    -fx-text-fill: white;
+    -fx-font-size: 14px;
+    -fx-alignment: CENTER_LEFT;
+    -fx-padding: 12 20;
+    -fx-background-radius: 8;
+    -fx-cursor: hand;
+}
+
+.sidebar-button:hover {
+    -fx-background-color: rgba(255,255,255,0.15);
+}
+
+.sidebar-button:pressed {
+    -fx-background-color: rgba(255,255,255,0.2);
+}
+
+.sidebar-icon {
+    -fx-background-color: white;
+    -fx-opacity: 0.9;
+}
+
+/* Main content */
+.main-content {
+    -fx-background-color: #f5f5f5;
+    -fx-padding: 30;
+}
+
+.welcome-title {
+    -fx-font-size: 38px;
+    -fx-font-weight: bold;
+    -fx-text-fill: #1a237e;
+    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.2), 8, 0, 0, 2);
+}
+
+.welcome-subtitle {
+    -fx-font-size: 18px;
+    -fx-text-fill: #757575;
+}
+
+/* Quick actions */
+.action-button {
+    -fx-background-color: white;
+    -fx-text-fill: #1a237e;
+    -fx-font-weight: bold;
+    -fx-padding: 15 25;
+    -fx-background-radius: 10;
+    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 8, 0, 0, 2);
+    -fx-cursor: hand;
+}
+
+.action-button:hover {
+    -fx-background-color: #f5f5f5;
+    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.2), 10, 0, 0, 4);
+    -fx-translate-y: -2;
+}
+
+.action-button.primary {
+    -fx-background-color: #1a237e;
+    -fx-text-fill: white;
+}
+
+.action-button.primary:hover {
+    -fx-background-color: #283593;
+}
+
+/* Activity section */
+.activity-card {
+    -fx-background-color: white;
+    -fx-background-radius: 15;
+    -fx-padding: 25;
+    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.08), 10, 0, 0, 2);
+}
+
+.activity-list {
+    -fx-background-color: transparent;
+    -fx-background-insets: 0;
+    -fx-padding: 15 0;
+}
+
+.activity-list .list-cell {
+    -fx-background-color: transparent;
+    -fx-padding: 10 0;
+}
+
+/* Logout button */
+.logout-button {
+    -fx-background-color: rgba(255,255,255,0.1);
+    -fx-text-fill: white;
+    -fx-font-weight: bold;
+    -fx-background-radius: 8;
+    -fx-padding: 12 25;
+    -fx-cursor: hand;
+}
+
+.logout-button:hover {
+    -fx-background-color: rgba(255,255,255,0.2);
+}
\ No newline at end of file
Index: src/main/resources/User/users_list.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.effect.DropShadow?>\r\n\r\n<AnchorPane xmlns=\"http://javafx.com/javafx\"\r\n            xmlns:fx=\"http://javafx.com/fxml\"\r\n            fx:controller=\"controllers.user.userlistcontroller\"\r\n            prefHeight=\"600.0\" prefWidth=\"900.0\"\r\n            style=\"-fx-background-color: linear-gradient(to bottom right, #f5f7fa, #e9f5e9);\">\r\n\r\n    <!-- Left Side Panel (Decorative) -->\r\n    <StackPane AnchorPane.leftAnchor=\"0\" AnchorPane.topAnchor=\"0\" AnchorPane.bottomAnchor=\"0\"\r\n               style=\"-fx-background-color: #4CAF50; -fx-background-radius: 0 20 20 0;\"\r\n               prefWidth=\"250\">\r\n        <VBox alignment=\"CENTER\" spacing=\"20\">\r\n            <ImageView fitWidth=\"120\" fitHeight=\"120\" preserveRatio=\"true\">\r\n                <Image url=\"@/images/app_logo.png\" />\r\n            </ImageView>\r\n            <Label text=\"User Management\" style=\"-fx-text-fill: white; -fx-font-weight: bold;\">\r\n                <font>\r\n                    <Font name=\"System Bold\" size=\"22.0\" />\r\n                </font>\r\n            </Label>\r\n            <Label text=\"View and manage all users\" style=\"-fx-text-fill: white; -fx-font-style: italic;\">\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Label>\r\n            <Separator prefWidth=\"180\" style=\"-fx-background-color: rgba(255,255,255,0.3);\" />\r\n        </VBox>\r\n    </StackPane>\r\n\r\n    <!-- Main Content Area -->\r\n    <VBox spacing=\"20\" AnchorPane.leftAnchor=\"280\" AnchorPane.rightAnchor=\"30\"\r\n          AnchorPane.topAnchor=\"30\" AnchorPane.bottomAnchor=\"30\">\r\n        <Text text=\"Users List\" style=\"-fx-fill: #2e7d32;\">\r\n            <font>\r\n                <Font name=\"System Bold\" size=\"28.0\" />\r\n            </font>\r\n        </Text>\r\n\r\n        <Separator prefWidth=\"200\" style=\"-fx-background-color: #c8e6c9;\" />\r\n\r\n        <!-- User ListView (Styled) -->\r\n        <ListView fx:id=\"usersListView\" VBox.vgrow=\"ALWAYS\"\r\n                  style=\"-fx-background-radius: 5; -fx-border-radius: 5; -fx-border-color: #a5d6a7; -fx-border-width: 1; -fx-background-color: white;\">\r\n            <!-- Custom cell factory can be set in the controller -->\r\n        </ListView>\r\n\r\n        <!-- Buttons Section -->\r\n        <HBox spacing=\"15\" alignment=\"CENTER_RIGHT\">\r\n            <Button fx:id=\"deleteUserButton\" text=\"DELETE\" onAction=\"#handleDeleteUser\"\r\n                    style=\"-fx-background-color: #f44336; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;\">\r\n                <font>\r\n                    <Font size=\"13.0\" />\r\n                </font>\r\n            </Button>\r\n            <Button fx:id=\"updateUserButton\" text=\"UPDATE\" onAction=\"#handleUpdateUser\"\r\n                    style=\"-fx-background-color: #2196F3; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;\">\r\n                <font>\r\n                    <Font size=\"13.0\" />\r\n                </font>\r\n            </Button>\r\n            <Button text=\"ADD USER\" onAction=\"#navigateToAddUserForm\"\r\n                    style=\"-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 5, 0, 0, 1);\">\r\n                <font>\r\n                    <Font size=\"13.0\" />\r\n                </font>\r\n            </Button>\r\n            <Button text=\"LOGOUT\" fx:id=\"logout\" onAction=\"#handleLogout\"\r\n                    style=\"-fx-background-color: transparent; -fx-text-fill: #4CAF50; -fx-border-color: #4CAF50; -fx-border-radius: 5; -fx-border-width: 1; -fx-font-weight: bold; -fx-padding: 10 20;\">\r\n                <font>\r\n                    <Font size=\"13.0\" />\r\n                </font>\r\n            </Button>\r\n        </HBox>\r\n    </VBox>\r\n</AnchorPane>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/User/users_list.fxml b/src/main/resources/User/users_list.fxml
--- a/src/main/resources/User/users_list.fxml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/resources/User/users_list.fxml	(date 1745455570882)
@@ -7,6 +7,7 @@
 <?import javafx.geometry.Insets?>
 <?import javafx.scene.effect.DropShadow?>
 
+<?import javafx.scene.chart.PieChart?>
 <AnchorPane xmlns="http://javafx.com/javafx"
             xmlns:fx="http://javafx.com/fxml"
             fx:controller="controllers.user.userlistcontroller"
@@ -46,6 +47,50 @@
 
         <Separator prefWidth="200" style="-fx-background-color: #c8e6c9;" />
 
+        <HBox spacing="15" alignment="CENTER_LEFT" style="-fx-background-color: white; -fx-padding: 15; -fx-background-radius: 10; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 2);">
+            <HBox alignment="CENTER_LEFT" style="-fx-background-color: #f8f9fa; -fx-background-radius: 25; -fx-padding: 5 15;">
+                <ImageView fitWidth="20" fitHeight="20">
+                    <Image url="@/images/search.png"/>
+                </ImageView>
+                <TextField fx:id="searchField" promptText="Rechercher par nom..." prefWidth="300"
+                           style="-fx-background-color: transparent; -fx-font-size: 14;">
+                    <HBox.margin>
+                        <Insets left="10"/>
+                    </HBox.margin>
+                </TextField>
+            </HBox>
+
+            <ComboBox fx:id="roleFilter" promptText="Filtrer par rôle" prefWidth="200"
+                      style="-fx-background-color: #f8f9fa; -fx-background-radius: 25; -fx-font-size: 14; -fx-padding: 5;">
+            </ComboBox>
+
+            <Button text="Réinitialiser" onAction="#resetFilters"
+                    style="-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-background-radius: 25; -fx-font-size: 14; -fx-padding: 8 20;">
+                <graphic>
+                    <ImageView fitWidth="16" fitHeight="16">
+                        <Image url="@/images/reset.png"/>
+                    </ImageView>
+                </graphic>
+            </Button>
+        </HBox>
+
+        <!-- _________________________stats________________________ -->
+        <HBox spacing="20" style="-fx-padding: 10;">
+            <VBox spacing="10" style="-fx-background-color: white; -fx-padding: 15; -fx-background-radius: 10;">
+                <Label text="Statistiques des utilisateurs" style="-fx-font-size: 16; -fx-font-weight: bold;"/>
+                <PieChart fx:id="userStatsChart" prefHeight="200" prefWidth="300"/>
+            </VBox>
+            <VBox spacing="10" style="-fx-background-color: white; -fx-padding: 15; -fx-background-radius: 10;">
+                <Label text="Résumé" style="-fx-font-size: 16; -fx-font-weight: bold;"/>
+                <GridPane fx:id="statsGrid" vgap="5" hgap="10">
+                    <Label text="Total utilisateurs:" GridPane.columnIndex="0" GridPane.rowIndex="0"/>
+                    <Label fx:id="totalUsersLabel" GridPane.columnIndex="1" GridPane.rowIndex="0"/>
+                    <Label text="Utilisateurs bannis:" GridPane.columnIndex="0" GridPane.rowIndex="1"/>
+                    <Label fx:id="bannedUsersLabel" GridPane.columnIndex="1" GridPane.rowIndex="1"/>
+                </GridPane>
+            </VBox>
+        </HBox>
+
         <!-- User ListView (Styled) -->
         <ListView fx:id="usersListView" VBox.vgrow="ALWAYS"
                   style="-fx-background-radius: 5; -fx-border-radius: 5; -fx-border-color: #a5d6a7; -fx-border-width: 1; -fx-background-color: white;">
@@ -54,6 +99,12 @@
 
         <!-- Buttons Section -->
         <HBox spacing="15" alignment="CENTER_RIGHT">
+            <Button fx:id="banUserButton" text="BAN" onAction="#handleBanUser"
+                    style="-fx-background-color: #ff9800; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;">
+                <font>
+                    <Font size="13.0" />
+                </font>
+            </Button>
             <Button fx:id="deleteUserButton" text="DELETE" onAction="#handleDeleteUser"
                     style="-fx-background-color: #f44336; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;">
                 <font>
@@ -66,8 +117,20 @@
                     <Font size="13.0" />
                 </font>
             </Button>
+            <Button text="LOG HISTORY" onAction="#navigateToLogHistory"
+                    style="-fx-background-color: #9C27B0; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;">
+                <font>
+                    <Font size="13.0" />
+                </font>
+            </Button>
             <Button text="ADD USER" onAction="#navigateToAddUserForm"
                     style="-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 5, 0, 0, 1);">
+                <font>
+                    <Font size="13.0" />
+                </font>
+            </Button>
+            <Button text="BACK" onAction="#handleBack"
+                    style="-fx-background-color: #666666; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 20;">
                 <font>
                     <Font size="13.0" />
                 </font>
Index: src/main/java/services/user/SignInService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package services.user;\r\n\r\nimport models.User;\r\nimport java.time.LocalDate;\r\nimport java.sql.*;\r\n\r\npublic class SignInService {\r\n\r\n    private Connection getConnection() throws Exception {\r\n        return DriverManager.getConnection(\"jdbc:mysql://localhost:3306/didou\", \"root\", \"\");\r\n    }\r\n\r\n    public User authenticate(String email, String password) throws Exception {\r\n        String query = \"SELECT * FROM user WHERE email = ? AND password = ?\";\r\n        try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {\r\n            ps.setString(1, email);\r\n            ps.setString(2, password);\r\n            ResultSet rs = ps.executeQuery();\r\n\r\n            if (rs.next()) {\r\n                User user = new User();\r\n                user.setId(rs.getInt(\"id\"));\r\n                user.setName(rs.getString(\"name\"));\r\n                user.setPrename(rs.getString(\"prename\"));\r\n                user.setEmail(rs.getString(\"email\"));\r\n                user.setPassword(rs.getString(\"password\"));\r\n                user.setAge(rs.getInt(\"age\"));\r\n                user.setPhoneNumber(rs.getString(\"phone_number\"));\r\n                user.setAddress(rs.getString(\"address\"));\r\n                user.setRole(rs.getString(\"role\"));\r\n                user.setIsBanned(rs.getString(\"is_banned\"));\r\n                Date sqlDate = rs.getDate(\"date\");\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/services/user/SignInService.java b/src/main/java/services/user/SignInService.java
--- a/src/main/java/services/user/SignInService.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/services/user/SignInService.java	(date 1745455568429)
@@ -10,6 +10,9 @@
         return DriverManager.getConnection("jdbc:mysql://localhost:3306/didou", "root", "");
     }
 
+    private final log_historyService logService = new log_historyService();
+
+
     public User authenticate(String email, String password) throws Exception {
         String query = "SELECT * FROM user WHERE email = ? AND password = ?";
         try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {
@@ -30,6 +33,12 @@
                 user.setRole(rs.getString("role"));
                 user.setIsBanned(rs.getString("is_banned"));
                 Date sqlDate = rs.getDate("date");
+
+
+                // add the logentry history____
+                String details = "User " + user.getName() + " " + user.getPrename() + " logged in";
+                logService.addLog(user.getEmail(), "Login", details);
+
                 return user;
             }
         }
Index: src/main/java/services/user/log_historyService.java
===================================================================
diff --git a/src/main/java/services/user/log_historyService.java b/src/main/java/services/user/log_historyService.java
new file mode 100644
--- /dev/null	(date 1745455568393)
+++ b/src/main/java/services/user/log_historyService.java	(date 1745455568393)
@@ -0,0 +1,101 @@
+package services.user;
+
+import models.LogEntry;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+
+import java.sql.*;
+import java.time.LocalDate;
+import java.time.format.DateTimeFormatter;
+import java.util.ArrayList;
+import java.util.List;
+
+public class log_historyService {
+
+    private Connection getConnection() throws Exception {
+        return DriverManager.getConnection("jdbc:mysql://localhost:3306/didou", "root", "");
+    }
+
+    public ObservableList<LogEntry> getAllLogs() throws Exception {
+        ObservableList<LogEntry> logs = FXCollections.observableArrayList();
+        String query = "SELECT * FROM logentry ORDER BY date DESC";
+
+        try (Connection con = getConnection();
+             PreparedStatement ps = con.prepareStatement(query);
+             ResultSet rs = ps.executeQuery()) {
+
+            while (rs.next()) {
+                logs.add(new LogEntry(
+                        rs.getString("date"),
+                        rs.getString("user"),
+                        rs.getString("action"),
+                        rs.getString("details")
+                ));
+            }
+        }
+        return logs;
+    }
+
+    public ObservableList<LogEntry> getFilteredLogs(LocalDate startDate, LocalDate endDate, String action) throws Exception {
+        ObservableList<LogEntry> logs = FXCollections.observableArrayList();
+        List<Object> params = new ArrayList<>();
+
+        StringBuilder query = new StringBuilder("SELECT * FROM logentry WHERE 1=1");
+
+        if (startDate != null && endDate != null) {
+            query.append(" AND DATE(date) BETWEEN ? AND ?");
+            params.add(startDate);
+            params.add(endDate);
+        } else if (startDate != null) {
+            query.append(" AND DATE(date) >= ?");
+            params.add(startDate);
+        } else if (endDate != null) {
+            query.append(" AND DATE(date) <= ?");
+            params.add(endDate);
+        }
+
+        if (action != null && !action.isEmpty() && !action.equals("All")) {
+            query.append(" AND action = ?");
+            params.add(action);
+        }
+
+        query.append(" ORDER BY date DESC");
+
+        try (Connection con = getConnection();
+             PreparedStatement ps = con.prepareStatement(query.toString())) {
+
+            for (int i = 0; i < params.size(); i++) {
+                if (params.get(i) instanceof LocalDate) {
+                    ps.setDate(i + 1, Date.valueOf((LocalDate) params.get(i)));
+                } else {
+                    ps.setString(i + 1, params.get(i).toString());
+                }
+            }
+
+            try (ResultSet rs = ps.executeQuery()) {
+                while (rs.next()) {
+                    logs.add(new LogEntry(
+                            rs.getString("date"),
+                            rs.getString("user"),
+                            rs.getString("action"),
+                            rs.getString("details")
+                    ));
+                }
+            }
+        }
+        return logs;
+    }
+
+    public void addLog(String user, String action, String details) throws Exception {
+        String query = "INSERT INTO logentry (date, user, action, details) VALUES (NOW(), ?, ?, ?)";
+
+        try (Connection con = getConnection();
+             PreparedStatement ps = con.prepareStatement(query)) {
+
+            ps.setString(1, user);
+            ps.setString(2, action);
+            ps.setString(3, details);
+            ps.executeUpdate();
+        }
+    }
+}
\ No newline at end of file
Index: src/main/resources/User/log_history.fxml
===================================================================
diff --git a/src/main/resources/User/log_history.fxml b/src/main/resources/User/log_history.fxml
new file mode 100644
--- /dev/null	(date 1745455570718)
+++ b/src/main/resources/User/log_history.fxml	(date 1745455570718)
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+<?import javafx.scene.text.*?>
+<?import javafx.scene.image.*?>
+<?import javafx.geometry.Insets?>
+
+<AnchorPane xmlns="http://javafx.com/javafx"
+            xmlns:fx="http://javafx.com/fxml"
+            fx:controller="controllers.user.log_historyController"
+            prefHeight="600.0" prefWidth="800.0"
+            style="-fx-background-color: linear-gradient(to bottom right, #f5f7fa, #e9f5e9);">
+
+    <!-- Sidebar for navigation -->
+    <VBox AnchorPane.leftAnchor="0" AnchorPane.topAnchor="0" AnchorPane.bottomAnchor="0"
+          style="-fx-background-color: #4CAF50; -fx-background-radius: 0 20 20 0;"
+          prefWidth="220">
+
+        <VBox alignment="CENTER" spacing="15" style="-fx-padding: 30 10;">
+            <ImageView fitWidth="100" fitHeight="100" preserveRatio="true">
+                <Image url="@/images/app_logo.png"/>
+            </ImageView>
+            <Label text="MyApp" style="-fx-text-fill: white; -fx-font-weight: bold;">
+                <font>
+                    <Font name="System Bold" size="22.0"/>
+                </font>
+            </Label>
+            <Separator prefWidth="180" style="-fx-background-color: rgba(255,255,255,0.3);"/>
+        </VBox>
+
+        <VBox spacing="5" VBox.vgrow="ALWAYS" style="-fx-padding: 20 15;">
+            <Button fx:id="dashboardButton" text="Dashboard" maxWidth="Infinity" alignment="BASELINE_LEFT" onAction="#handleBack"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button fx:id="usersListButton" text="Users List" maxWidth="Infinity" alignment="BASELINE_LEFT" onAction="#handleUsersList"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <!-- Named buttons from dashboard -->
+            <Button text="didou" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="seif" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="marouki" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="malek" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M21,5c-1.11-0.35-2.33-0.5-3.5-0.5c-1.95,0-4.05,0.4-5.5,1.5c-1.45-1.1-3.55-1.5-5.5-1.5S2.45,4.9,1,6v14.65 c0,0.25,0.25,0.5,0.5,0.5c0.1,0,0.15-0.05,0.25-0.05C3.1,20.45,5.05,20,6.5,20c1.95,0,4.05,0.4,5.5,1.5c1.35-0.85,3.8-1.5,5.5-1.5 c1.65,0,3.35,0.3,4.75,1.05c0.1,0.05,0.15,0.05,0.25,0.05c0.25,0,0.5-0.25,0.5-0.5V6C22.4,5.55,21.75,5.25,21,5z M21,18.5 c-1.1-0.35-2.3-0.5-3.5-0.5c-1.7,0-4.15,0.65-5.5,1.5V8c1.35-0.85,3.8-1.5,5.5-1.5c1.2,0,2.4,0.15,3.5,0.5V18.5z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="skander" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+        </VBox>
+
+        <VBox alignment="BOTTOM_CENTER" spacing="10" style="-fx-padding: 20;">
+            <Button text="LOGOUT" maxWidth="Infinity" onAction="#handleLogout"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z';"/>
+                </graphic>
+                <font>
+                    <Font size="13.0" />
+                </font>
+            </Button>
+        </VBox>
+    </VBox>
+
+    <!-- Main content area -->
+    <StackPane AnchorPane.leftAnchor="240" AnchorPane.rightAnchor="20"
+               AnchorPane.topAnchor="20" AnchorPane.bottomAnchor="20">
+
+        <VBox spacing="20">
+            <!-- Header -->
+            <HBox alignment="CENTER_LEFT" spacing="20">
+                <Label text="Log History" style="-fx-text-fill: #2e7d32; -fx-font-weight: bold;">
+                    <font>
+                        <Font size="24.0"/>
+                    </font>
+                </Label>
+            </HBox>
+
+            <!-- Filters -->
+            <HBox spacing="10" alignment="CENTER_LEFT" style="-fx-background-color: white; -fx-padding: 10; -fx-background-radius: 5;">
+                <DatePicker fx:id="startDate" promptText="Start Date"/>
+                <DatePicker fx:id="endDate" promptText="End Date"/>
+                <ComboBox fx:id="actionFilter" promptText="Filter by Action"/>
+                <Button text="Apply Filters" onAction="#applyFilters"
+                        style="-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold;"/>
+                <Button text="Reset" onAction="#resetFilters"
+                        style="-fx-background-color: #9E9E9E; -fx-text-fill: white; -fx-font-weight: bold;"/>
+            </HBox>
+
+            <!-- Table -->
+            <TableView fx:id="logTable" VBox.vgrow="ALWAYS"
+                       style="-fx-background-color: white; -fx-background-radius: 5; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 8, 0, 0, 4);">
+                <columns>
+                    <TableColumn fx:id="dateColumn" text="Date" prefWidth="150"/>
+                    <TableColumn fx:id="userColumn" text="User" prefWidth="150"/>
+                    <TableColumn fx:id="actionColumn" text="Action" prefWidth="100"/>
+                    <TableColumn fx:id="detailsColumn" text="Details" prefWidth="300"/>
+                </columns>
+            </TableView>
+        </VBox>
+    </StackPane>
+</AnchorPane>
\ No newline at end of file
Index: src/main/java/services/user/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package services.user;\r\n\r\nimport models.User;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\n\r\npublic class UserService {\r\n\r\n    private Connection getConnection() throws Exception {\r\n        return DriverManager.getConnection(\"jdbc:mysql://localhost:3306/didou\", \"root\", \"\");\r\n    }\r\n\r\n    public void addUser(User user) throws Exception {\r\n        String query = \"INSERT INTO user (name, prename, email, password, age, phone_number, address, role, is_banned, date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\";\r\n\r\n        try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {\r\n            ps.setString(1, user.getName());\r\n            ps.setString(2, user.getPrename());\r\n            ps.setString(3, user.getEmail());\r\n            ps.setString(4, user.getPassword());\r\n            ps.setInt(5, user.getAge());\r\n            ps.setString(6, user.getPhoneNumber());\r\n            ps.setString(7, user.getAddress());\r\n            ps.setString(8, user.getRole());\r\n            ps.setString(9, user.getIsBanned());\r\n            ps.setDate(10, user.getDate());\r\n            ps.executeUpdate();\r\n        }\r\n    }\r\n\r\n    // Delete a user by ID\r\n    public void deleteUser(int id) throws Exception {\r\n        String query = \"DELETE FROM user WHERE id = ?\";\r\n\r\n        try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {\r\n            ps.setInt(1, id);\r\n            ps.executeUpdate();\r\n        }\r\n    }\r\n\r\n    public boolean emailExists(String email) {\r\n        String query = \"SELECT COUNT(*) FROM user WHERE email = ?\";\r\n        try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {\r\n            ps.setString(1, email);\r\n            ResultSet rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                return rs.getInt(1) > 0;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public User getUserById(int id) throws Exception {\r\n        String query = \"SELECT * FROM user WHERE id = ?\";\r\n        try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {\r\n            ps.setInt(1, id);\r\n            var rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                User user = new User();\r\n                user.setId(rs.getInt(\"id\"));\r\n                user.setName(rs.getString(\"name\"));\r\n                user.setPrename(rs.getString(\"prename\"));\r\n                user.setEmail(rs.getString(\"email\"));\r\n                user.setPassword(rs.getString(\"password\"));\r\n                user.setAge(rs.getInt(\"age\"));\r\n                user.setPhoneNumber(rs.getString(\"phone_number\"));\r\n                user.setAddress(rs.getString(\"address\"));\r\n                user.setRole(rs.getString(\"role\"));\r\n                user.setIsBanned(rs.getString(\"is_banned\"));\r\n                user.setDate(rs.getDate(\"date\"));\r\n                return user;\r\n            }\r\n        }\r\n        return null; // Aucun utilisateur trouvé\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/services/user/UserService.java b/src/main/java/services/user/UserService.java
--- a/src/main/java/services/user/UserService.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/services/user/UserService.java	(date 1745455568536)
@@ -78,4 +78,6 @@
         return null; // Aucun utilisateur trouvé
     }
 
+
+
 }
Index: src/main/java/services/user/GoogleAuthService.java
===================================================================
diff --git a/src/main/java/services/user/GoogleAuthService.java b/src/main/java/services/user/GoogleAuthService.java
new file mode 100644
--- /dev/null	(date 1745455568231)
+++ b/src/main/java/services/user/GoogleAuthService.java	(date 1745455568231)
@@ -0,0 +1,216 @@
+package services.user;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.InetSocketAddress;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.util.Arrays;
+import java.util.Date;
+
+import com.google.api.client.auth.oauth2.Credential;
+import com.google.api.client.auth.oauth2.StoredCredential;
+import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;
+import com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets;
+import com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse;
+import com.google.api.client.http.HttpTransport;
+import com.google.api.client.http.javanet.NetHttpTransport;
+import com.google.api.client.json.JsonFactory;
+import com.google.api.client.json.gson.GsonFactory;
+import com.google.api.client.util.store.FileDataStoreFactory;
+import com.google.api.services.oauth2.Oauth2;
+import com.google.api.services.oauth2.model.Userinfo;
+
+import com.sun.net.httpserver.HttpServer;
+import javafx.scene.control.TextInputDialog;
+import models.User;
+
+public class GoogleAuthService {
+    private static final String CREDENTIALS_FILE_PATH = "/credentials.json";
+    private static final JsonFactory JSON_FACTORY = GsonFactory.getDefaultInstance();
+    private static final HttpTransport HTTP_TRANSPORT = new NetHttpTransport();
+    private static final String TOKENS_DIRECTORY_PATH = "tokens";
+    private static final String REDIRECT_URI = "http://localhost:9090/auth/callback";
+
+    private static final java.util.Collection<String> SCOPES = Arrays.asList(
+            "https://www.googleapis.com/auth/userinfo.profile",
+            "https://www.googleapis.com/auth/userinfo.email"
+    );
+
+    private final GoogleAuthorizationCodeFlow flow;
+    private final log_historyService logService = new log_historyService();
+
+    private Connection getConnection() throws Exception {
+        return DriverManager.getConnection("jdbc:mysql://localhost:3306/didou", "root", "");
+    }
+
+    public GoogleAuthService() throws IOException {
+        InputStream in = GoogleAuthService.class.getResourceAsStream(CREDENTIALS_FILE_PATH);
+        if (in == null) {
+            throw new FileNotFoundException("Resource not found: " + CREDENTIALS_FILE_PATH);
+        }
+
+        GoogleClientSecrets clientSecrets = GoogleClientSecrets.load(JSON_FACTORY, new InputStreamReader(in));
+
+        // Créer le dossier tokens s'il n'existe pas
+        File tokensDirectory = new File(TOKENS_DIRECTORY_PATH);
+        if (!tokensDirectory.exists()) {
+            tokensDirectory.mkdirs();
+        }
+
+        flow = new GoogleAuthorizationCodeFlow.Builder(
+                HTTP_TRANSPORT,
+                JSON_FACTORY,
+                clientSecrets,
+                SCOPES)
+                .setDataStoreFactory(new FileDataStoreFactory(tokensDirectory))
+                .setAccessType("offline")
+                .build();
+    }
+
+    public String getAuthorizationUrl() {
+        return flow.newAuthorizationUrl()
+                .setRedirectUri(REDIRECT_URI)
+                .build();
+    }
+
+    public String getAuthorizationCode() throws Exception {
+        HttpServer server = HttpServer.create(new InetSocketAddress(9090), 0);
+        StringBuilder authCode = new StringBuilder();
+
+        server.createContext("/auth/callback", exchange -> {
+            String query = exchange.getRequestURI().getQuery();
+            if (query != null && query.contains("code=")) {
+                String code = query.split("code=")[1].split("&")[0];
+                authCode.append(code);
+                String response = "Vous pouvez maintenant retourner à l'application.";
+                exchange.sendResponseHeaders(200, response.getBytes().length);
+                exchange.getResponseBody().write(response.getBytes());
+                exchange.getResponseBody().close();
+                server.stop(0);
+            }
+        });
+
+        server.start();
+
+        // Ouvrir l'URL d'autorisation dans le navigateur
+        java.awt.Desktop.getDesktop().browse(new java.net.URI(getAuthorizationUrl()));
+
+        // Attendre que le code soit capturé
+        while (authCode.isEmpty()) {
+            Thread.sleep(100);
+        }
+
+        return authCode.toString();
+    }
+
+
+    public User authenticateWithGoogle(String authCode) throws Exception {
+        GoogleTokenResponse tokenResponse = flow.newTokenRequest(authCode)
+                .setRedirectUri(REDIRECT_URI)
+                .execute();
+
+        Credential credential = flow.createAndStoreCredential(tokenResponse, "user");
+
+        Oauth2 oauth2 = new Oauth2.Builder(
+                HTTP_TRANSPORT,
+                JSON_FACTORY,
+                credential)
+                .setApplicationName("NutriNet")
+                .build();
+
+        Userinfo userInfo = oauth2.userinfo().get().execute();
+
+        User user = findUserByEmail(userInfo.getEmail());
+        if (user == null) {
+            // Demander un mot de passe à l'utilisateur
+            String password = promptForPassword();
+            if (password.isEmpty()) {
+                throw new Exception("Le mot de passe est requis pour créer un compte.");
+            }
+
+            // Créer un nouvel utilisateur
+            user = new User();
+            user.setEmail(userInfo.getEmail());
+            user.setName(userInfo.getFamilyName());
+            user.setPrename(userInfo.getGivenName());
+            user.setPassword(password);
+            user.setRole("client");
+            user.setIsBanned("0");
+            user.setAge(20);
+            user.setPhoneNumber("00000000");
+            user.setAddress("tunis");
+            user.setDate(new java.sql.Date(new Date().getTime()));
+
+            // Enregistrer l'utilisateur dans la base de données
+            saveUser(user);
+
+            // Récupérer l'utilisateur avec toutes ses informations après la sauvegarde
+            user = findUserByEmail(userInfo.getEmail());
+        }
+
+        // Ajouter le log de connexion
+        String details = "User " + user.getName() + " " + user.getPrename() + " logged in with Google";
+        logService.addLog(user.getEmail(), "Google Login", details);
+
+        return user;
+    }
+
+    private User findUserByEmail(String email) throws Exception {
+        String query = "SELECT * FROM user WHERE email = ?";
+        try (Connection con = getConnection();
+             PreparedStatement ps = con.prepareStatement(query)) {
+            ps.setString(1, email);
+            ResultSet rs = ps.executeQuery();
+
+            if (rs.next()) {
+                User user = new User();
+                user.setId(rs.getInt("id"));
+                user.setName(rs.getString("name"));
+                user.setPrename(rs.getString("prename"));
+                user.setEmail(rs.getString("email"));
+                user.setAge(rs.getInt("age"));
+                user.setPhoneNumber(rs.getString("phone_number"));
+                user.setAddress(rs.getString("address"));
+                user.setRole(rs.getString("role"));
+                user.setIsBanned(rs.getString("is_banned"));
+                user.setDate(rs.getDate("date"));
+                return user;
+            }
+        }
+        return null;
+    }
+
+    private void saveUser(User user) throws Exception {
+        String query = "INSERT INTO user (name, prename, email, password, age, phone_number, address, role, is_banned, date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
+        try (Connection con = getConnection();
+             PreparedStatement ps = con.prepareStatement(query)) {
+            ps.setString(1, user.getName());
+            ps.setString(2, user.getPrename());
+            ps.setString(3, user.getEmail());
+            ps.setString(4, user.getPassword());
+            ps.setInt(5, user.getAge());
+            ps.setString(6, user.getPhoneNumber());
+            ps.setString(7, user.getAddress());
+            ps.setString(8, user.getRole());
+            ps.setString(9, user.getIsBanned());
+            ps.setDate(10, user.getDate());
+            ps.executeUpdate();
+        }
+    }
+
+    private String promptForPassword() {
+        TextInputDialog dialog = new TextInputDialog();
+        dialog.setTitle("Saisir le mot de passe");
+        dialog.setHeaderText("Veuillez saisir un mot de passe pour votre compte.");
+        dialog.setContentText("Mot de passe :");
+
+        return dialog.showAndWait().orElse("");
+    }
+
+}
\ No newline at end of file
Index: src/main/resources/credentials.json
===================================================================
diff --git a/src/main/resources/credentials.json b/src/main/resources/credentials.json
new file mode 100644
--- /dev/null	(date 1745455569059)
+++ b/src/main/resources/credentials.json	(date 1745455569059)
@@ -0,0 +1,8 @@
+{"installed":{"client_id":"904002013582-hebj57gtnhrchuu13pt3lfchh55m0nvp.apps.googleusercontent.com",
+  "project_id":"nutrinet-1740477213298",
+  "auth_uri":"https://accounts.google.com/o/oauth2/auth",
+  "token_uri":"https://oauth2.googleapis.com/token",
+  "auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs",
+  "client_secret":"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",
+  "redirect_uris": ["http://localhost:9090/auth/callback"]
+}}
\ No newline at end of file
Index: src/main/resources/User/welcome.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.geometry.Insets?>\r\n\r\n<AnchorPane xmlns=\"http://javafx.com/javafx\"\r\n            xmlns:fx=\"http://javafx.com/fxml\"\r\n            fx:controller=\"controllers.user.WelcomeController\"\r\n            prefHeight=\"600.0\" prefWidth=\"800.0\"\r\n            style=\"-fx-background-color: linear-gradient(to bottom right, #f5f7fa, #e9f5e9);\">\r\n\r\n    <!-- Left sidebar for navigation -->\r\n    <VBox AnchorPane.leftAnchor=\"0\" AnchorPane.topAnchor=\"0\" AnchorPane.bottomAnchor=\"0\"\r\n          style=\"-fx-background-color: #4CAF50; -fx-background-radius: 0 20 20 0;\"\r\n          prefWidth=\"220\">\r\n\r\n        <VBox alignment=\"CENTER\" spacing=\"15\" style=\"-fx-padding: 30 10;\">\r\n            <ImageView fitWidth=\"100\" fitHeight=\"100\" preserveRatio=\"true\">\r\n                <Image url=\"@/images/app_logo.png\" />\r\n            </ImageView>\r\n            <Label text=\"MyApp\" style=\"-fx-text-fill: white; -fx-font-weight: bold;\">\r\n                <font>\r\n                    <Font name=\"System Bold\" size=\"22.0\" />\r\n                </font>\r\n            </Label>\r\n            <Separator prefWidth=\"180\" style=\"-fx-background-color: rgba(255,255,255,0.3);\" />\r\n        </VBox>\r\n\r\n        <VBox spacing=\"5\" VBox.vgrow=\"ALWAYS\" style=\"-fx-padding: 20 15;\">\r\n            <Button text=\"didou\" maxWidth=\"Infinity\" alignment=\"BASELINE_LEFT\"\r\n                    style=\"-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n\r\n            <Button text=\"seif\" maxWidth=\"Infinity\" alignment=\"BASELINE_LEFT\"\r\n                    style=\"-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n\r\n            <Button text=\"marouki\" maxWidth=\"Infinity\" alignment=\"BASELINE_LEFT\"\r\n                    style=\"-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n\r\n            <Button text=\"malek\" maxWidth=\"Infinity\" alignment=\"BASELINE_LEFT\"\r\n                    style=\"-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n\r\n            <Button text=\"skander\" maxWidth=\"Infinity\" alignment=\"BASELINE_LEFT\"\r\n                    style=\"-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n\r\n\r\n            <Button text=\"Profile\" maxWidth=\"Infinity\" alignment=\"BASELINE_LEFT\" onAction=\"#goToProfile\"\r\n                    style=\"-fx-background-color: transparent; -fx-text-fill: white; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n\r\n            <Button text=\"Settings\" maxWidth=\"Infinity\" alignment=\"BASELINE_LEFT\"\r\n                    style=\"-fx-background-color: transparent; -fx-text-fill: white; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"14.0\" />\r\n                </font>\r\n            </Button>\r\n        </VBox>\r\n\r\n        <VBox alignment=\"BOTTOM_CENTER\" spacing=\"10\" style=\"-fx-padding: 20;\">\r\n            <Button text=\"LOGOUT\" maxWidth=\"Infinity\" onAction=\"#handleLogout\"\r\n                    style=\"-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15;\">\r\n                <graphic>\r\n                    <Region prefHeight=\"18\" prefWidth=\"18\" style=\"-fx-background-color: white; -fx-shape: 'M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z';\" />\r\n                </graphic>\r\n                <font>\r\n                    <Font size=\"13.0\" />\r\n                </font>\r\n            </Button>\r\n        </VBox>\r\n    </VBox>\r\n\r\n    <!-- Main content area -->\r\n    <StackPane AnchorPane.leftAnchor=\"240\" AnchorPane.rightAnchor=\"20\"\r\n               AnchorPane.topAnchor=\"20\" AnchorPane.bottomAnchor=\"20\">\r\n\r\n        <VBox alignment=\"TOP_CENTER\" spacing=\"25\">\r\n            <!-- Welcome section -->\r\n            <VBox alignment=\"CENTER\" spacing=\"15\">\r\n                <Label fx:id=\"welcomeLabel\" text=\"Welcome Back, User!\" style=\"-fx-text-fill: #2e7d32; -fx-font-weight: bold;\">\r\n                    <font>\r\n                        <Font size=\"32.0\" />\r\n                    </font>\r\n                </Label>\r\n                <Label text=\"It's great to see you again\" style=\"-fx-text-fill: #666666; -fx-font-style: italic;\">\r\n                    <font>\r\n                        <Font size=\"16.0\" />\r\n                    </font>\r\n                </Label>\r\n                <Separator prefWidth=\"300\" style=\"-fx-background-color: #c8e6c9;\" />\r\n            </VBox>\r\n\r\n            <!-- Quick actions -->\r\n            <VBox alignment=\"CENTER\" spacing=\"15\" style=\"-fx-padding: 15 0;\">\r\n                <Label text=\"Quick Actions\" style=\"-fx-text-fill: #2e7d32; -fx-font-weight: bold;\">\r\n                    <font>\r\n                        <Font size=\"18.0\" />\r\n                    </font>\r\n                </Label>\r\n\r\n                <HBox spacing=\"15\" alignment=\"CENTER\">\r\n                    <Button text=\"User Management\"\r\n                            style=\"-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 12 20; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 5, 0, 0, 1);\">\r\n                        <font>\r\n                            <Font size=\"14.0\" />\r\n                        </font>\r\n                    </Button>\r\n\r\n                    <Button text=\"View Reports\"\r\n                            style=\"-fx-background-color: white; -fx-text-fill: #4CAF50; -fx-font-weight: bold; -fx-background-radius: 5; -fx-border-color: #4CAF50; -fx-border-radius: 5; -fx-padding: 12 20;\">\r\n                        <font>\r\n                            <Font size=\"14.0\" />\r\n                        </font>\r\n                    </Button>\r\n\r\n                    <Button text=\"System Settings\"\r\n                            style=\"-fx-background-color: white; -fx-text-fill: #4CAF50; -fx-font-weight: bold; -fx-background-radius: 5; -fx-border-color: #4CAF50; -fx-border-radius: 5; -fx-padding: 12 20;\">\r\n                        <font>\r\n                            <Font size=\"14.0\" />\r\n                        </font>\r\n                    </Button>\r\n                </HBox>\r\n            </VBox>\r\n\r\n            <!-- Recent activity with ListView -->\r\n            <VBox style=\"-fx-background-color: white; -fx-background-radius: 10; -fx-padding: 20; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 5);\" VBox.vgrow=\"ALWAYS\">\r\n                <Label text=\"Recent Activity\" style=\"-fx-text-fill: #2e7d32; -fx-font-weight: bold;\">\r\n                    <font>\r\n                        <Font size=\"16.0\" />\r\n                    </font>\r\n                </Label>\r\n\r\n                <ListView fx:id=\"activityListView\" VBox.vgrow=\"ALWAYS\"\r\n                          style=\"-fx-background-color: transparent; -fx-border-color: transparent; -fx-padding: 10 0;\">\r\n                    <!-- Will be populated from the controller -->\r\n                </ListView>\r\n            </VBox>\r\n        </VBox>\r\n    </StackPane>\r\n</AnchorPane>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/User/welcome.fxml b/src/main/resources/User/welcome.fxml
--- a/src/main/resources/User/welcome.fxml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/resources/User/welcome.fxml	(date 1745473313352)
@@ -10,11 +10,13 @@
             xmlns:fx="http://javafx.com/fxml"
             fx:controller="controllers.user.WelcomeController"
             prefHeight="600.0" prefWidth="800.0"
-            style="-fx-background-color: linear-gradient(to bottom right, #f5f7fa, #e9f5e9);">
+            style="-fx-background-color: linear-gradient(to bottom right, #00897B, #4DB6AC);">
+
 
     <!-- Left sidebar for navigation -->
     <VBox AnchorPane.leftAnchor="0" AnchorPane.topAnchor="0" AnchorPane.bottomAnchor="0"
-          style="-fx-background-color: #4CAF50; -fx-background-radius: 0 20 20 0;"
+          style="-fx-background-color: linear-gradient(to bottom right, #00897B, #4DB6AC); -fx-background-radius: 0 20 20 0;"
+
           prefWidth="220">
 
         <VBox alignment="CENTER" spacing="15" style="-fx-padding: 30 10;">
@@ -40,7 +42,7 @@
                 </font>
             </Button>
 
-            <Button text="seif" maxWidth="Infinity" alignment="BASELINE_LEFT"
+            <Button text="Nos Programmes" maxWidth="Infinity" alignment="BASELINE_LEFT" onAction="#openSeifProgram"
                     style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
                 <graphic>
                     <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';" />
@@ -122,7 +124,8 @@
         <VBox alignment="TOP_CENTER" spacing="25">
             <!-- Welcome section -->
             <VBox alignment="CENTER" spacing="15">
-                <Label fx:id="welcomeLabel" text="Welcome Back, User!" style="-fx-text-fill: #2e7d32; -fx-font-weight: bold;">
+                <Label fx:id="welcomeLabel" text="Welcome Back, User!"
+                       style="-fx-text-fill: white; -fx-font-weight: bold; -fx-font-size: 32px; -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.3), 5, 0, 0, 2);">
                     <font>
                         <Font size="32.0" />
                     </font>
Index: src/main/java/services/user/userlist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package services.user;\r\n\r\nimport models.User;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class userlist {\r\n\r\n    private Connection getConnection() throws Exception {\r\n        return DriverManager.getConnection(\"jdbc:mysql://localhost:3306/didou\", \"root\", \"\");\r\n    }\r\n\r\n    public List<User> getAllUsers() {\r\n        List<User> users = new ArrayList<>();\r\n        String query = \"SELECT * FROM user\";\r\n\r\n        try (Connection con = getConnection();\r\n             PreparedStatement ps = con.prepareStatement(query);\r\n             ResultSet rs = ps.executeQuery()) {\r\n\r\n            while (rs.next()) {\r\n                User user = new User(\r\n                        rs.getInt(\"id\"),\r\n                        rs.getString(\"name\"),\r\n                        rs.getString(\"prename\"),\r\n                        rs.getString(\"email\"),\r\n                        rs.getString(\"password\"),\r\n                        rs.getInt(\"age\"),\r\n                        rs.getString(\"phone_number\"),\r\n                        rs.getString(\"address\"),\r\n                        rs.getString(\"role\")\r\n                );\r\n                users.add(user);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace(); // You can use logging instead\r\n        }\r\n\r\n        return users;\r\n    }\r\n\r\n    // Delete a user by ID\r\n    public void deleteUser(int id) throws Exception {\r\n        String query = \"DELETE FROM user WHERE id = ?\";\r\n\r\n        try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {\r\n            ps.setInt(1, id);\r\n            ps.executeUpdate();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/services/user/userlist.java b/src/main/java/services/user/userlist.java
--- a/src/main/java/services/user/userlist.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/services/user/userlist.java	(date 1745455568500)
@@ -16,7 +16,7 @@
 
     public List<User> getAllUsers() {
         List<User> users = new ArrayList<>();
-        String query = "SELECT * FROM user";
+        String query = "SELECT id, name, prename, email, password, age, phone_number, address, role, is_banned FROM user";
 
         try (Connection con = getConnection();
              PreparedStatement ps = con.prepareStatement(query);
@@ -34,11 +34,12 @@
                         rs.getString("address"),
                         rs.getString("role")
                 );
+                user.setIsBanned(rs.getString("is_banned"));
                 users.add(user);
             }
 
         } catch (Exception e) {
-            e.printStackTrace(); // You can use logging instead
+            e.printStackTrace();
         }
 
         return users;
@@ -54,4 +55,21 @@
         }
     }
 
+    public void updateUser(User user) throws Exception {
+        String query = "UPDATE user SET name = ?, prename = ?, email = ?, password = ?, age = ?, phone_number = ?, address = ?, role = ?, is_banned = ? WHERE id = ?";
+
+        try (Connection con = getConnection(); PreparedStatement ps = con.prepareStatement(query)) {
+            ps.setString(1, user.getName());
+            ps.setString(2, user.getPrename());
+            ps.setString(3, user.getEmail());
+            ps.setString(4, user.getPassword());
+            ps.setInt(5, user.getAge());
+            ps.setString(6, user.getPhoneNumber());
+            ps.setString(7, user.getAddress());
+            ps.setString(8, user.getRole());
+            ps.setString(9, user.getIsBanned());
+            ps.setInt(10, user.getId());
+            ps.executeUpdate();
+        }
+    }
 }
Index: src/main/resources/User/banned.fxml
===================================================================
diff --git a/src/main/resources/User/banned.fxml b/src/main/resources/User/banned.fxml
new file mode 100644
--- /dev/null	(date 1745455570657)
+++ b/src/main/resources/User/banned.fxml	(date 1745455570657)
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+<?import javafx.scene.text.*?>
+<?import javafx.geometry.Insets?>
+
+<AnchorPane xmlns="http://javafx.com/javafx"
+            xmlns:fx="http://javafx.com/fxml"
+            fx:controller="controllers.user.Banned"
+            style="-fx-background-color: white;"
+            prefHeight="400.0" prefWidth="600.0">
+    <VBox alignment="CENTER" spacing="20" AnchorPane.topAnchor="0"
+          AnchorPane.bottomAnchor="0" AnchorPane.leftAnchor="0"
+          AnchorPane.rightAnchor="0">
+
+        <Label text="⛔ COMPTE BANNI" style="-fx-font-size: 24; -fx-text-fill: #f44336; -fx-font-weight: bold;"/>
+
+        <Label text="Votre compte a été suspendu par un administrateur."
+               style="-fx-font-size: 16; -fx-text-fill: #757575;"
+               wrapText="true" textAlignment="CENTER">
+            <VBox.margin>
+                <Insets left="20" right="20"/>
+            </VBox.margin>
+        </Label>
+
+        <Label text="Veuillez contacter l'administrateur pour plus d'informations."
+               style="-fx-font-size: 14; -fx-text-fill: #9e9e9e;"
+               wrapText="true" textAlignment="CENTER"/>
+
+        <Button fx:id="backButton" text="Retour à la connexion"
+                onAction="#handleBackToSignIn"
+                style="-fx-background-color: #2196F3; -fx-text-fill: white;
+                       -fx-font-weight: bold; -fx-padding: 10 20;
+                       -fx-background-radius: 5;">
+            <VBox.margin>
+                <Insets top="20"/>
+            </VBox.margin>
+        </Button>
+    </VBox>
+</AnchorPane>
\ No newline at end of file
Index: src/main/resources/User/dashboard.fxml
===================================================================
diff --git a/src/main/resources/User/dashboard.fxml b/src/main/resources/User/dashboard.fxml
new file mode 100644
--- /dev/null	(date 1745455570687)
+++ b/src/main/resources/User/dashboard.fxml	(date 1745455570687)
@@ -0,0 +1,198 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+<?import javafx.scene.text.*?>
+<?import javafx.scene.image.*?>
+<?import javafx.geometry.Insets?>
+
+<AnchorPane xmlns="http://javafx.com/javafx"
+            xmlns:fx="http://javafx.com/fxml"
+            fx:controller="controllers.user.DashboardController"
+            prefHeight="600.0" prefWidth="800.0"
+            style="-fx-background-color: linear-gradient(to bottom right, #f5f7fa, #e9f5e9);">
+
+    <!-- Sidebar for navigation -->
+    <VBox AnchorPane.leftAnchor="0" AnchorPane.topAnchor="0" AnchorPane.bottomAnchor="0"
+          style="-fx-background-color: #4CAF50; -fx-background-radius: 0 20 20 0;"
+          prefWidth="220">
+
+        <VBox alignment="CENTER" spacing="15" style="-fx-padding: 30 10;">
+            <ImageView fitWidth="100" fitHeight="100" preserveRatio="true">
+                <Image url="@/images/app_logo.png"/>
+            </ImageView>
+            <Label text="MyApp" style="-fx-text-fill: white; -fx-font-weight: bold;">
+                <font>
+                    <Font name="System Bold" size="22.0"/>
+                </font>
+            </Label>
+            <Separator prefWidth="180" style="-fx-background-color: rgba(255,255,255,0.3);"/>
+        </VBox>
+
+        <VBox spacing="5" VBox.vgrow="ALWAYS" style="-fx-padding: 20 15;">
+            <Button text="Dashboard" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button fx:id="usersListButton" text="Users List" maxWidth="Infinity" alignment="BASELINE_LEFT" onAction="#showUsersList"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <!-- Named buttons from welcome screen -->
+            <Button text="didou" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="seif" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="marouki" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="malek" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M21,5c-1.11-0.35-2.33-0.5-3.5-0.5c-1.95,0-4.05,0.4-5.5,1.5c-1.45-1.1-3.55-1.5-5.5-1.5S2.45,4.9,1,6v14.65 c0,0.25,0.25,0.5,0.5,0.5c0.1,0,0.15-0.05,0.25-0.05C3.1,20.45,5.05,20,6.5,20c1.95,0,4.05,0.4,5.5,1.5c1.35-0.85,3.8-1.5,5.5-1.5 c1.65,0,3.35,0.3,4.75,1.05c0.1,0.05,0.15,0.05,0.25,0.05c0.25,0,0.5-0.25,0.5-0.5V6C22.4,5.55,21.75,5.25,21,5z M21,18.5 c-1.1-0.35-2.3-0.5-3.5-0.5c-1.7,0-4.15,0.65-5.5,1.5V8c1.35-0.85,3.8-1.5,5.5-1.5c1.2,0,2.4,0.15,3.5,0.5V18.5z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="skander" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+
+            <Button text="Settings" maxWidth="Infinity" alignment="BASELINE_LEFT"
+                    style="-fx-background-color: transparent; -fx-text-fill: white; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z';"/>
+                </graphic>
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Button>
+        </VBox>
+
+        <VBox alignment="BOTTOM_CENTER" spacing="10" style="-fx-padding: 20;">
+            <Button text="LOGOUT" maxWidth="Infinity" onAction="#handleLogout"
+                    style="-fx-background-color: rgba(255,255,255,0.2); -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 10 15; -fx-graphic-text-gap: 10;">
+                <graphic>
+                    <Region prefHeight="18" prefWidth="18" style="-fx-background-color: white; -fx-shape: 'M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z';"/>
+                </graphic>
+                <font>
+                    <Font size="13.0" />
+                </font>
+            </Button>
+        </VBox>
+    </VBox>
+
+    <!-- Main content area -->
+    <StackPane AnchorPane.leftAnchor="240" AnchorPane.rightAnchor="20"
+               AnchorPane.topAnchor="20" AnchorPane.bottomAnchor="20">
+
+        <!-- Default welcome view -->
+        <VBox fx:id="welcomeView" alignment="CENTER" spacing="25" visible="true">
+            <VBox alignment="CENTER" spacing="15">
+                <Label text="Welcome Admin" style="-fx-text-fill: #2e7d32; -fx-font-weight: bold;">
+                    <font>
+                        <Font size="36.0" />
+                    </font>
+                </Label>
+                <Label text="Select an option from the sidebar" style="-fx-text-fill: #666666;">
+                    <font>
+                        <Font size="18.0" />
+                    </font>
+                </Label>
+                <Separator prefWidth="300" style="-fx-background-color: #c8e6c9;" />
+            </VBox>
+
+            <ImageView fitWidth="200" fitHeight="200" preserveRatio="true">
+                <Image url="@/images/admin_logo.png"/>
+            </ImageView>
+
+            <Label text="Today is Wednesday, April 23, 2025" style="-fx-text-fill: #666666; -fx-font-style: italic;">
+                <font>
+                    <Font size="14.0" />
+                </font>
+            </Label>
+        </VBox>
+
+        <!-- Users list view -->
+        <VBox fx:id="usersListView" spacing="15" visible="false">
+            <HBox alignment="CENTER_LEFT" spacing="15">
+                <Label text="Users List" style="-fx-text-fill: #2e7d32; -fx-font-weight: bold;">
+                    <font>
+                        <Font size="24.0"/>
+                    </font>
+                </Label>
+                <Region HBox.hgrow="ALWAYS" />
+                <TextField promptText="Search users..." prefWidth="200"
+                           style="-fx-background-radius: 20; -fx-padding: 8 15;"/>
+                <Button text="Add User"
+                        style="-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-font-weight: bold; -fx-background-radius: 5; -fx-padding: 8 15;">
+                    <graphic>
+                        <Region prefHeight="16" prefWidth="16" style="-fx-background-color: white; -fx-shape: 'M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z';"/>
+                    </graphic>
+                </Button>
+            </HBox>
+
+            <TableView fx:id="usersTable" VBox.vgrow="ALWAYS" style="-fx-background-color: white; -fx-border-color: #f0f0f0; -fx-border-radius: 5; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 8, 0, 0, 4);">
+                <columns>
+                    <TableColumn text="ID" prefWidth="50"/>
+                    <TableColumn text="Name" prefWidth="150"/>
+                    <TableColumn text="Email" prefWidth="200"/>
+                    <TableColumn text="Role" prefWidth="100"/>
+                    <TableColumn text="Status" prefWidth="100"/>
+                    <TableColumn text="Actions" prefWidth="120"/>
+                </columns>
+            </TableView>
+
+            <HBox alignment="CENTER_RIGHT" spacing="10">
+                <Label text="Page 1 of 5" style="-fx-text-fill: #666666;"/>
+                <Button text="Previous"
+                        style="-fx-background-color: #f0f0f0; -fx-text-fill: #666666; -fx-background-radius: 5; -fx-padding: 5 10;"/>
+                <Button text="Next"
+                        style="-fx-background-color: #4CAF50; -fx-text-fill: white; -fx-background-radius: 5; -fx-padding: 5 10;"/>
+            </HBox>
+        </VBox>
+    </StackPane>
+</AnchorPane>
\ No newline at end of file
Index: src/main/java/controllers/user/DashboardController.java
===================================================================
diff --git a/src/main/java/controllers/user/DashboardController.java b/src/main/java/controllers/user/DashboardController.java
new file mode 100644
--- /dev/null	(date 1745455566828)
+++ b/src/main/java/controllers/user/DashboardController.java	(date 1745455566828)
@@ -0,0 +1,56 @@
+package controllers.user;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Scene;
+import javafx.stage.Stage;
+import models.User;
+import utils.session;
+import services.user.log_historyService;
+
+import java.io.IOException;
+
+public class DashboardController {
+
+    private final log_historyService logService = new log_historyService();
+
+
+    public void handleLogout(ActionEvent actionEvent) {
+        try {
+            // Récupérer l'utilisateur avant de vider la session
+            User currentUser = session.getCurrentUser();
+
+            // Ajouter le log de déconnexion
+            if (currentUser != null) {
+                String details = "User " + currentUser.getName() + " " + currentUser.getPrename() + " logged out";
+                logService.addLog(currentUser.getEmail(), "Logout", details);
+            }
+
+            // Vider la session
+            session.clearSession();
+
+            // Redirection vers la page de connexion
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/User/sign_in.fxml"));
+            Scene loginScene = new Scene(loader.load());
+
+            Stage stage = (Stage) ((javafx.scene.Node) actionEvent.getSource()).getScene().getWindow();
+            stage.setScene(loginScene);
+            stage.show();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    public void showUsersList(ActionEvent actionEvent) {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/User/users_list.fxml"));
+            Scene usersListScene = new Scene(loader.load());
+
+            Stage stage = (Stage) ((javafx.scene.Node) actionEvent.getSource()).getScene().getWindow();
+            stage.setScene(usersListScene);
+            stage.show();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
Index: src/main/java/controllers/user/WelcomeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers.user;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Label;\r\nimport javafx.stage.Stage;\r\nimport utils.session;\r\nimport models.User;\r\n\r\npublic class WelcomeController {\r\n\r\n    @FXML\r\n    private Label welcomeLabel;\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        User currentUser = session.getCurrentUser();\r\n        if (currentUser != null) {\r\n            welcomeLabel.setText(\"Welcome, \" + currentUser.getName() + \"!\");\r\n        } else {\r\n            welcomeLabel.setText(\"Welcome!\");\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void goToUserList() {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/user/users_list.fxml\"));\r\n            Parent root = loader.load();\r\n            Stage stage = new Stage();\r\n            stage.setTitle(\"User List\");\r\n            stage.setScene(new Scene(root));\r\n            stage.show();\r\n\r\n            // Optionally hide welcome window\r\n            welcomeLabel.getScene().getWindow().hide();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleLogout() {\r\n        // Clear the current session\r\n        session.clearSession();\r\n\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/user/sign_in.fxml\"));\r\n            Parent root = loader.load();\r\n\r\n            // Get the current stage from any UI element\r\n            Stage stage = (Stage) welcomeLabel.getScene().getWindow();\r\n\r\n            // Set the new scene (sign in) on the same stage\r\n            stage.setTitle(\"Sign In\");\r\n            stage.setScene(new Scene(root));\r\n            stage.show();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    @FXML\r\n    private void goToProfile() {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/User/profile.fxml\"));\r\n            Parent root = loader.load();\r\n\r\n            // Get the current stage from any UI component on the page (e.g., a button or label)\r\n            Stage stage = (Stage) welcomeLabel.getScene().getWindow();  // replace 'someUIElement' with a real fx:id from your FXML\r\n\r\n            // Replace the scene with the profile scene\r\n            stage.setScene(new Scene(root));\r\n            stage.setTitle(\"Profile\");\r\n            stage.show();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/user/WelcomeController.java b/src/main/java/controllers/user/WelcomeController.java
--- a/src/main/java/controllers/user/WelcomeController.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/controllers/user/WelcomeController.java	(date 1745468706759)
@@ -6,6 +6,7 @@
 import javafx.scene.Scene;
 import javafx.scene.control.Label;
 import javafx.stage.Stage;
+import services.user.log_historyService;
 import utils.session;
 import models.User;
 
@@ -13,6 +14,7 @@
 
     @FXML
     private Label welcomeLabel;
+    private final log_historyService logService = new log_historyService();
 
     @FXML
     public void initialize() {
@@ -20,6 +22,7 @@
         if (currentUser != null) {
             welcomeLabel.setText("Welcome, " + currentUser.getName() + "!");
         } else {
+            // Handle the case where there is no logged-in user
             welcomeLabel.setText("Welcome!");
         }
     }
@@ -43,17 +46,23 @@
 
     @FXML
     private void handleLogout() {
-        // Clear the current session
-        session.clearSession();
+        try {
+            // Récupérer l'utilisateur avant de vider la session
+            User currentUser = session.getCurrentUser();
+
+            // Ajouter le log de déconnexion
+            if (currentUser != null) {
+                String details = "User " + currentUser.getName() + " " + currentUser.getPrename() + " logged out";
+                logService.addLog(currentUser.getEmail(), "Logout", details);
+            }
+
+            // Vider la session
+            session.clearSession();
 
-        try {
+            // Redirection vers la page de connexion
             FXMLLoader loader = new FXMLLoader(getClass().getResource("/user/sign_in.fxml"));
             Parent root = loader.load();
-
-            // Get the current stage from any UI element
             Stage stage = (Stage) welcomeLabel.getScene().getWindow();
-
-            // Set the new scene (sign in) on the same stage
             stage.setTitle("Sign In");
             stage.setScene(new Scene(root));
             stage.show();
@@ -81,6 +90,31 @@
             e.printStackTrace();
         }
     }
+
+    @FXML
+    private void openSeifProgram() {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/Programme/AfficherProgrammeFront.fxml"));
+            Parent root = loader.load();
+
+            // Récupérer la scène actuelle via welcomeLabel
+            Scene currentScene = welcomeLabel.getScene();
+
+            // Remplacer juste le contenu racine
+            currentScene.setRoot(root);
+
+            // Ajouter le CSS si besoin
+            String css = getClass().getResource("/Programme/modern_list.css").toExternalForm();
+            if (!currentScene.getStylesheets().contains(css)) {
+                currentScene.getStylesheets().add(css);
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+
 
 
 
Index: src/main/java/controllers/user/log_historyController.java
===================================================================
diff --git a/src/main/java/controllers/user/log_historyController.java b/src/main/java/controllers/user/log_historyController.java
new file mode 100644
--- /dev/null	(date 1745455566864)
+++ b/src/main/java/controllers/user/log_historyController.java	(date 1745455566864)
@@ -0,0 +1,172 @@
+package controllers.user;
+
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.fxml.Initializable;
+import javafx.scene.Scene;
+import javafx.scene.control.*;
+import javafx.stage.Stage;
+import models.LogEntry;
+import services.user.log_historyService;
+import models.User;
+import utils.session;
+import java.io.IOException;
+import java.net.URL;
+import java.time.LocalDate;
+import java.util.ResourceBundle;
+
+public class log_historyController implements Initializable {
+
+    @FXML
+    private TableView<LogEntry> logTable;
+
+    @FXML
+    private TableColumn<LogEntry, String> dateColumn;
+
+    @FXML
+    private TableColumn<LogEntry, String> userColumn;
+
+    @FXML
+    private TableColumn<LogEntry, String> actionColumn;
+
+    @FXML
+    private TableColumn<LogEntry, String> detailsColumn;
+
+    @FXML
+    private DatePicker startDate;
+
+    @FXML
+    private DatePicker endDate;
+
+    @FXML
+    private ComboBox<String> actionFilter;
+
+    private final session session = new session(); // Correction ici
+
+
+    private ObservableList<LogEntry> logEntries = FXCollections.observableArrayList();
+    private final log_historyService logService = new log_historyService();
+
+
+    @Override
+    public void initialize(URL url, ResourceBundle resourceBundle) {
+        // Configuration des colonnes (code existant)
+        dateColumn.setCellValueFactory(cellData -> cellData.getValue().dateProperty());
+        userColumn.setCellValueFactory(cellData -> cellData.getValue().userProperty());
+        actionColumn.setCellValueFactory(cellData -> cellData.getValue().actionProperty());
+        detailsColumn.setCellValueFactory(cellData -> cellData.getValue().detailsProperty());
+
+        // Configuration du filtre (code existant)
+        actionFilter.getItems().addAll("All", "Login", "Logout","Google Login");
+        actionFilter.setValue("All");
+
+        loadLogs();
+    }
+
+    private void loadLogs() {
+        try {
+            logEntries = logService.getAllLogs();
+            logTable.setItems(logEntries);
+        } catch (Exception e) {
+            showAlert(Alert.AlertType.ERROR, "Erreur lors du chargement des logs: " + e.getMessage());
+        }
+    }
+
+    @FXML
+    private void applyFilters() {
+        try {
+            LocalDate start = startDate.getValue();
+            LocalDate end = endDate.getValue();
+            String action = actionFilter.getValue();
+
+            logEntries = logService.getFilteredLogs(start, end, action);
+            logTable.setItems(logEntries);
+        } catch (Exception e) {
+            showAlert(Alert.AlertType.ERROR, "Erreur lors du filtrage des logs: " + e.getMessage());
+        }
+    }
+
+    @FXML
+    private void resetFilters() {
+        startDate.setValue(null);
+        endDate.setValue(null);
+        actionFilter.setValue("All");
+        loadLogs();
+    }
+
+    @FXML
+    private void handleBack() {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/User/users_list.fxml"));
+            Scene usersListScene = new Scene(loader.load());
+
+            Stage stage = (Stage) logTable.getScene().getWindow();
+            stage.setScene(usersListScene);
+            stage.show();
+        } catch (IOException e) {
+            showAlert(Alert.AlertType.ERROR, "Error returning to users list: " + e.getMessage());
+        }
+    }
+
+    private void showAlert(Alert.AlertType type, String message) {
+        Alert alert = new Alert(type);
+        alert.setTitle(type.toString());
+        alert.setHeaderText(null);
+        alert.setContentText(message);
+        alert.show();
+    }
+
+
+    @FXML
+    private void handleUsersList() {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/user/users_list.fxml"));
+            Scene usersListScene = new Scene(loader.load());
+
+            Stage stage = (Stage) logTable.getScene().getWindow();
+            stage.setTitle("Users List");
+            stage.setScene(usersListScene);
+            stage.show();
+        } catch (IOException e) {
+            showAlert(Alert.AlertType.ERROR, "Error navigating to users list: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
+    @FXML
+    private void handleLogout() {
+        try {
+            // Récupérer l'utilisateur avant de vider la session
+            User currentUser = session.getCurrentUser();
+
+            // Ajouter le log de déconnexion
+            if (currentUser != null) {
+                String details = "User " + currentUser.getName() + " " + currentUser.getPrename() + " logged out";
+                logService.addLog(currentUser.getEmail(), "Logout", details);
+            }
+
+            // Vider la session
+            session.clearSession();
+
+            // Redirection vers la page de connexion
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/user/sign_in.fxml"));
+            Scene loginScene = new Scene(loader.load());
+
+            Stage stage = (Stage) logTable.getScene().getWindow();
+            stage.setTitle("Sign In");
+            stage.setScene(loginScene);
+            stage.centerOnScreen();
+            stage.show();
+
+        } catch (Exception e) {
+            showAlert(Alert.AlertType.ERROR, "Error during logout: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
+
+    
+}
\ No newline at end of file
Index: src/main/java/controllers/user/Banned.java
===================================================================
diff --git a/src/main/java/controllers/user/Banned.java b/src/main/java/controllers/user/Banned.java
new file mode 100644
--- /dev/null	(date 1745455566794)
+++ b/src/main/java/controllers/user/Banned.java	(date 1745455566794)
@@ -0,0 +1,28 @@
+package controllers.user;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Scene;
+import javafx.scene.control.Button;
+import javafx.stage.Stage;
+import java.io.IOException;
+
+public class Banned {
+    @FXML
+    private Button backButton;
+
+    @FXML
+    private void handleBackToSignIn(ActionEvent event) {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("/User/sign_in.fxml"));
+            Scene signInScene = new Scene(loader.load());
+
+            Stage stage = (Stage) backButton.getScene().getWindow();
+            stage.setScene(signInScene);
+            stage.show();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2528c9bf-2699-488a-864f-f2427632b16b\" name=\"Changes\" comment=\"seif crud +metiers\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Seiffaress&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/mohamadrayenjbili/NutrinetJava.git&quot;,\r\n    &quot;accountId&quot;: &quot;21f38e0d-9eb4-4540-992f-be9be6ea3dfd&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vjLVz5nxdYYWSmLB6pyrohDl06\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Maven.PiJava [javafx:run].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.PiJava [org.openjfx:javafx-maven-plugin:0.0.8:run].executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Seiftt&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"PiJava [javafx:run]\" type=\"MavenRunConfiguration\" factoryName=\"Maven\" nameIsGenerated=\"true\">\r\n      <MavenSettings>\r\n        <option name=\"myGeneralSettings\" />\r\n        <option name=\"myRunnerSettings\" />\r\n        <option name=\"myRunnerParameters\">\r\n          <MavenRunnerParameters>\r\n            <option name=\"cmdOptions\" />\r\n            <option name=\"profiles\">\r\n              <set />\r\n            </option>\r\n            <option name=\"goals\">\r\n              <list>\r\n                <option value=\"javafx:run\" />\r\n              </list>\r\n            </option>\r\n            <option name=\"multimoduleDir\" />\r\n            <option name=\"pomFileName\" />\r\n            <option name=\"profilesMap\">\r\n              <map />\r\n            </option>\r\n            <option name=\"projectsCmdOptionValues\">\r\n              <list />\r\n            </option>\r\n            <option name=\"resolveToWorkspace\" value=\"false\" />\r\n            <option name=\"workingDirPath\" value=\"$PROJECT_DIR$\" />\r\n          </MavenRunnerParameters>\r\n        </option>\r\n      </MavenSettings>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-a94e463ab2e7-intellij.indexing.shared.core-IU-243.26053.27\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-IU-243.26053.27\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2528c9bf-2699-488a-864f-f2427632b16b\" name=\"Changes\" comment=\"\" />\r\n      <created>1744653565488</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1744653565488</updated>\r\n      <workItem from=\"1744653567001\" duration=\"347000\" />\r\n      <workItem from=\"1744654025583\" duration=\"2207000\" />\r\n      <workItem from=\"1744656294428\" duration=\"2476000\" />\r\n      <workItem from=\"1744659215422\" duration=\"5616000\" />\r\n      <workItem from=\"1744815871260\" duration=\"3000\" />\r\n      <workItem from=\"1744815889189\" duration=\"7043000\" />\r\n      <workItem from=\"1745234813505\" duration=\"108000\" />\r\n      <workItem from=\"1745234963020\" duration=\"323000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"seif crud +metiers\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745235102821</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745235102821</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"seif crud +metiers\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745235278868</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745235278868</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"seif crud +metiers\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"seif crud +metiers\" />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/.idea/workspace.xml	(date 1746028004418)
@@ -4,7 +4,50 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="2528c9bf-2699-488a-864f-f2427632b16b" name="Changes" comment="seif crud +metiers" />
+    <list default="true" id="6cc3365f-3041-42e6-986a-d2eed210ebbd" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/user/Banned.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/user/DashboardController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/user/log_historyController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/user/welcome.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/models/LogEntry.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/services/user/GoogleAuthService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/services/user/log_historyService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/User/banned.fxml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/User/dashboard.fxml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/User/log_history.fxml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/credentials.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_04_2025_10_14_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_04_2025_10_14__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/Home.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/Home.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/Programme/AfficherProgramme.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/Programme/AfficherProgramme.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/Programme/AfficherProgrammeFront.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/Programme/AfficherProgrammeFront.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/Programme/AjouterProgramme.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/Programme/AjouterProgramme.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/Programme/DetailsProgramme.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/Programme/DetailsProgramme.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/user/Sign_InController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/user/Sign_InController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/user/WelcomeController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/user/WelcomeController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllers/user/userlistcontroller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllers/user/userlistcontroller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/models/Commentaire.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/models/Commentaire.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/services/CommentaireService.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/services/ICommentaireService.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/services/IProgrammeService.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/services/ProgrammeService.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/services/user/SignInService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/services/user/SignInService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/services/user/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/services/user/UserService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/services/user/userlist.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/services/user/userlist.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/AfficherProgramme.fxml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/AfficherProgrammeFront.fxml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/AjouterProgramme.fxml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/AjouterProgramme.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/DetailsProgramme.fxml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/User/sign_in.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/User/sign_in.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/User/users_list.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/User/users_list.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/User/welcome.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/User/welcome.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/details_style.css" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/style.css" beforeDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -33,63 +76,38 @@
   }
 }</component>
   <component name="ProjectColorInfo">{
-  &quot;customColor&quot;: &quot;&quot;,
   &quot;associatedIndex&quot;: 3
 }</component>
-  <component name="ProjectId" id="2vjLVz5nxdYYWSmLB6pyrohDl06" />
-  <component name="ProjectLevelVcsManager">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
+  <component name="ProjectId" id="2w9fg10x9hH9LBK0TyEqx681Cgl" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
-    &quot;Maven.PiJava [javafx:run].executor&quot;: &quot;Run&quot;,
+    &quot;Application.RunnConfig.executor&quot;: &quot;Run&quot;,
     &quot;Maven.PiJava [org.openjfx:javafx-maven-plugin:0.0.8:run].executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;Seiftt&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;garma-crud+login-session&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/timos/Desktop/Backup/java/java/projetuser/NutrinetJava&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.externalResources&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
   <component name="RunManager">
-    <configuration name="PiJava [javafx:run]" type="MavenRunConfiguration" factoryName="Maven" nameIsGenerated="true">
-      <MavenSettings>
-        <option name="myGeneralSettings" />
-        <option name="myRunnerSettings" />
-        <option name="myRunnerParameters">
-          <MavenRunnerParameters>
-            <option name="cmdOptions" />
-            <option name="profiles">
-              <set />
-            </option>
-            <option name="goals">
-              <list>
-                <option value="javafx:run" />
-              </list>
-            </option>
-            <option name="multimoduleDir" />
-            <option name="pomFileName" />
-            <option name="profilesMap">
-              <map />
-            </option>
-            <option name="projectsCmdOptionValues">
-              <list />
-            </option>
-            <option name="resolveToWorkspace" value="false" />
-            <option name="workingDirPath" value="$PROJECT_DIR$" />
-          </MavenRunnerParameters>
-        </option>
-      </MavenSettings>
-      <method v="2" />
+    <configuration name="RunnConfig" type="Application" factoryName="Application">
+      <option name="MAIN_CLASS_NAME" value="controllers.Home" />
+      <module name="PiJava" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
   </component>
   <component name="SharedIndexes">
@@ -103,55 +121,51 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="2528c9bf-2699-488a-864f-f2427632b16b" name="Changes" comment="" />
-      <created>1744653565488</created>
+      <changelist id="6cc3365f-3041-42e6-986a-d2eed210ebbd" name="Changes" comment="" />
+      <created>1745458818094</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
-      <updated>1744653565488</updated>
-      <workItem from="1744653567001" duration="347000" />
-      <workItem from="1744654025583" duration="2207000" />
-      <workItem from="1744656294428" duration="2476000" />
-      <workItem from="1744659215422" duration="5616000" />
-      <workItem from="1744815871260" duration="3000" />
-      <workItem from="1744815889189" duration="7043000" />
-      <workItem from="1745234813505" duration="108000" />
-      <workItem from="1745234963020" duration="323000" />
-    </task>
-    <task id="LOCAL-00001" summary="seif crud +metiers">
-      <option name="closed" value="true" />
-      <created>1745235102821</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1745235102821</updated>
+      <updated>1745458818094</updated>
+      <workItem from="1745458819288" duration="4019000" />
+      <workItem from="1745463282370" duration="3728000" />
+      <workItem from="1745467308789" duration="498000" />
+      <workItem from="1745467942595" duration="2964000" />
+      <workItem from="1745472299511" duration="1015000" />
+      <workItem from="1745530025664" duration="362000" />
+      <workItem from="1745534625128" duration="635000" />
+      <workItem from="1745556391785" duration="1014000" />
+      <workItem from="1745557484413" duration="5263000" />
+      <workItem from="1745568055620" duration="7000" />
+      <workItem from="1745568083668" duration="1076000" />
+      <workItem from="1745570380980" duration="113000" />
+      <workItem from="1745571714772" duration="24000" />
+      <workItem from="1745571767777" duration="6758000" />
+      <workItem from="1745580475018" duration="5878000" />
+      <workItem from="1745888772175" duration="6000" />
+      <workItem from="1745888852542" duration="124000" />
+      <workItem from="1745888998443" duration="572000" />
+      <workItem from="1745893833586" duration="721000" />
+      <workItem from="1745894975812" duration="86000" />
+      <workItem from="1745895303351" duration="3032000" />
+      <workItem from="1746026138669" duration="1847000" />
     </task>
-    <task id="LOCAL-00002" summary="seif crud +metiers">
-      <option name="closed" value="true" />
-      <created>1745235278868</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1745235278868</updated>
-    </task>
-    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.sql.SQLIntegrityConstraintViolationException" package="java.sql" />
+          <option name="timeStamp" value="1" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
-  <component name="VcsManagerConfiguration">
-    <MESSAGE value="seif crud +metiers" />
-    <option name="LAST_COMMIT_MESSAGE" value="seif crud +metiers" />
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/models/Commentaire.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package models;\r\n\r\nimport java.time.LocalDateTime;\r\n\r\npublic class Commentaire {\r\n    private int id;\r\n    private int programmeId;\r\n    private int auteurId;\r\n    private Integer parentId; // peut être null\r\n    private String contenu;\r\n    private LocalDateTime createdAt;\r\n\r\n    // ✅ Constructeur par défaut\r\n    public Commentaire() {\r\n    }\r\n\r\n    public Commentaire(int id, int programmeId, int auteurId, Integer parentId, String contenu, LocalDateTime createdAt) {\r\n        this.id = id;\r\n        this.programmeId = programmeId;\r\n        this.auteurId = auteurId;\r\n        this.parentId = parentId;\r\n        this.contenu = contenu;\r\n        this.createdAt = createdAt;\r\n    }\r\n\r\n    public Commentaire(int programmeId, int auteurId, Integer parentId, String contenu, LocalDateTime createdAt) {\r\n        this.programmeId = programmeId;\r\n        this.auteurId = auteurId;\r\n        this.parentId = parentId;\r\n        this.contenu = contenu;\r\n        this.createdAt = createdAt;\r\n    }\r\n\r\n    // Getters et Setters\r\n    public int getId() { return id; }\r\n    public void setId(int id) { this.id = id; }\r\n\r\n    public int getProgrammeId() { return programmeId; }\r\n    public void setProgrammeId(int programmeId) { this.programmeId = programmeId; }\r\n\r\n    public int getAuteurId() { return auteurId; }\r\n    public void setAuteurId(int auteurId) { this.auteurId = auteurId; }\r\n\r\n    public Integer getParentId() { return parentId; }\r\n    public void setParentId(Integer parentId) { this.parentId = parentId; }\r\n\r\n    public String getContenu() { return contenu; }\r\n    public void setContenu(String contenu) { this.contenu = contenu; }\r\n\r\n    public LocalDateTime getCreatedAt() { return createdAt; }\r\n    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }\r\n}
===================================================================
diff --git a/src/main/java/models/Commentaire.java b/src/main/java/models/Commentaire.java
--- a/src/main/java/models/Commentaire.java	(revision 7b099f987a86e308a03310a633b77749ba43dde2)
+++ b/src/main/java/models/Commentaire.java	(date 1744656706144)
@@ -49,4 +49,6 @@
 
     public LocalDateTime getCreatedAt() { return createdAt; }
     public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
-}
\ No newline at end of file
+}
+
+
